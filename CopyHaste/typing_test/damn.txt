def getNibbles(byte):
	if not 0 <= byte <= 255:
		raise ValueError('Byte value out of range 0-255: %s' % byte)
	return (byte >> 4 & 0xF, byte & 0xF)
def setNibbles(hiNibble, loNibble):
	if not (0 <= hiNibble <= 15) or not (0 <= loNibble <= 15):
		raise ValueError('Nible value out of range 0-15: (%s, %s)' % (hiNibble, loNibble))
	return (hiNibble << 4) + loNibble
def readBew(value):
	try:
		return unpack('>%s' % {1:'B', 2:'H', 4:'L'}[len(value)], value)[0]
	except KeyError:
		return 0
def writeBew(value, length):
	return pack('>%s' % {1:'B', 2:'H', 4:'L'}[length], value)
def readVar(value):
	sum = 0
	for byte in unpack('%sB' % len(value), value):
		sum = (sum << 7) + (byte & 0x7F)
		if not 0x80 & byte: break
	return sum
def varLen(value):
	if value <= 127:
		return 1
	elif value <= 16383:
		return 2
	elif value <= 2097151:
		return 3
	else:
		return 4
def writeVar(value):
	"Converts an integer to varlength format"
	sevens = to_n_bits(value, varLen(value))
	for i in range(len(sevens)-1):
		sevens[i] = sevens[i] | 0x80
	return
def to_n_bits(value, length=1, nbits=7):
	"returns the integer value as a sequence of nbits bytes"
	bytes = [(value >> (i*nbits)) & 0x7F for i in range(length)]
	bytes.reverse()
	return bytes
def toBytes(value):
	"Turns a string into a list of byte values"
	return unpack('%sB' % len(value), value)
def
	"Turns a list of bytes into a string"
	if not value:
		return ''
	return pack('%sB' % len(value), *value)
if __name__ == '__main__':
	print 'writeVar', writeVar(8192)
	print 'readVar', readVar('стуa')
	print 'writeVar', writeVar(205058401)
	s1 = 0x00000000
	print '%08X -' % s1, '00',	writeVar(s1)
	s2 = 0x00000040
	print '%08X -' % s2, '40',	writeVar(s2)
	s3 = 0x0000007F
	print '%08X -' % s3, '7F',	writeVar(s3)
	s4 = 0x00000080
	print '%08X -' % s4, '81 00',	writeVar(s4)
	s5 = 0x00002000
	print '%08X -' % s5, 'C0 00',	writeVar(s5)
	s6 = 0x00003FFF
	print '%08X -' % s6, 'FF 7F',	writeVar(s6)
	s7 = 0x00004000
	print '%08X -' % s7, '81 80 00',	writeVar(s7)
	s8 = 0x00100000
	print '%08X -' % s8, 'C0 80 00',	writeVar(s8)
	s9 = 0x001FFFFF
	print '%08X -' % s9, 'FF FF 7F',	writeVar(s9)
	s10 = 0x00200000
	print '%08X -' % s10, '81 80 80 00', writeVar(s10)
	s11 = 0x08000000
	print '%08X -' % s11, 'C0 80 80 00', writeVar(s11)
	s12 = 0x0FFFFFFF
	print '%08X -' % s12, 'FF FF FF 7F', writeVar(s12)
