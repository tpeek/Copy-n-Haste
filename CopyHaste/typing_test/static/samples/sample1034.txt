
class MemcachedError(exceptions.Exception):
	def __init__(self, status, msg):
		supermsg='Memcached error
		if msg: supermsg += ":  " + msg
		exceptions.Exception.__init__(self, supermsg)
		self.status=status
		self.msg=msg
	def __repr__(self):
		return "<MemcachedError
class MemcachedAsciiClient(object):
	def __init__(self, host='127.0.0.1', port=11211, timeout=30):
		self.host = host
		self.port = port
		self.s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		self.timeout = timeout
		self.s.connect_ex((host, port))
	def close(self):
		self.s.close()
	def __del__(self):
		self.close()
	def _sendMsg(self, cmd):
		_, w, _ = select.select([], [self.s], [], self.timeout)
		if w:
			self.s.send(cmd)
		else:
			raise exceptions.EOFError("Tim