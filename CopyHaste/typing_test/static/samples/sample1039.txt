
class TapConnection(object):
	def __init__(self, server, port, callback, clientId=None, opts={}):
		self.wbuf = self._createTapCall(clientId, opts)
		print self.wbuf
		self.callback = callback
		self.identifier = (server.ip, port)
		print 'tap connection : {0} {1}'.format(server.ip, port)
		self.s = socket.socket()
		self.s.connect_ex((server.ip, port))
		sent = self.s.send(self.wbuf)
		self.wbuf = self.wbuf[sent:]
		self.rbuf = ""
	def __hasEnoughBytes(self):
		rv = False
		if len(self.rbuf) >= memcacheConstants.MIN_RECV_PACKET:
			magic, cmd, keylen, extralen, datatype, vb, remaining, opaque, cas =\
			struct.unpack(REQ_PKT_FMT, self.rbuf[:memcacheConstants.MIN_RECV_PACKET])
			rv = len(self.rbuf) - memcacheConstants.MIN_RECV_PACKET >= r