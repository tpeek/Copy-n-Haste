
RETRIES = 10
logging.config.fileConfig('mcsoda.logging.conf')
logging.getLogger("paramiko").setLevel(logging.WARNING)
log = logging.getLogger()
hex = lambda: uuid4().hex
def histo_percentile(histo, percentiles):
	v_sum = 0
	bins = histo.keys()
	bins.sort()
	for bin in bins:
		v_sum += histo[bin]
	v_sum = float(v_sum)
	v_cur = 0
	rv = []
	for bin in bins:
		if not percentiles:
			return rv
		v_cur += histo[bin]
		while percentiles and (v_cur / v_sum) >= percentiles[0]:
			rv.append((percentiles[0], bin))
			percentiles.pop(0)
	return rv
class StatsCollector(object):
	_task = {}
	_verbosity = True
	_mb_stats = {"snapshots": []}
	_reb_stats = {}
	_lat_avg_stats = {}
	_xdcr_stats = {}
	def __init__(self, verbosity):
		self._verbosity = verbosi