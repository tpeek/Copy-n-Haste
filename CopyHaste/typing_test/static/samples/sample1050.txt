
class Line:
	def __init__(self, num, m, b):
		self.num = num
		self.m = m
		self.b = b
		self.visible = True
	def __str__(self):
		return str(self.num) + ": " + str(self.m) + "x " + "+ " + str(self.b)
debug_filename = "debug.txt"
debug_file = open(debug_filename, "w")
def usage():
	print("Usage:")
	print("-d: debug")
	print("-s: silent")
	print("-t: timing")
	print("-i: input <file>")
	print("-o: output <file>")
def hidden_by_intersect(i, j, k):
	return i.m * (j.b - k.b) + i.b * (k.m - j.m) < j.m * (j.b - k.b) + j.b * (k.m - j.m)
def MergeVisible(a, b):
	j = 0
	k = 1
	l = -2
	m = -1
	if debug:
		debug_file.write("Start MergeVisible\n")
		debug_file.write("a: \n")
		for line in a:
			debug_file.write(str(line) + "\n")
		debug_file.write("b: