
LOG = logging.getLogger(__name__)
class Controller(controller.BaseController):
	def __init__(self):
		self.cache = image_cache.ImageCache()
		self.policy = policy.Enforcer()
	def _enforce(self, req):
		try:
			self.policy.enforce(req.context, 'manage_image_cache', {})
		except exception.Forbidden:
			LOG.debug("User not permitted to manage the image cache")
			raise webob.exc.HTTPForbidden()
	def get_cached_images(self, req):
		self._enforce(req)
		images = self.cache.get_cached_images()
		return dict(cached_images=images)
	def delete_cached_image(self, req, image_id):
		self._enforce(req)
		self.cache.delete_cached_image(image_id)
	def delete_cached_images(self, req):
		self._enforce(req)
		return dict(num_deleted=self.cache.delete_all_ca