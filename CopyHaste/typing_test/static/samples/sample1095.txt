

class ParetoDominanceForTeams():

	@staticmethod
	def run(teams_population, novelty, teams_to_keep):
		front, dominateds = ParetoDominanceForTeams._pareto_front(teams_population, novelty)
		pareto_front = list(front)
		keep_solutions = list(front)
		remove_solutions = list(dominateds)
		if len(keep_solutions) < teams_to_keep:
			keep_solutions, remove_solutions = ParetoDominanceForTeams._balance_pareto_front_to_up(dominateds, keep_solutions, remove_solutions, teams_to_keep)
		if len(keep_solutions) > teams_to_keep:
			keep_solutions, remove_solutions = ParetoDominanceForTeams._balance_pareto_front_to_down(front, keep_solutions, remove_solutions, teams_to_keep)
		return keep_solutions, remove_solutions, pareto_front

	@staticm