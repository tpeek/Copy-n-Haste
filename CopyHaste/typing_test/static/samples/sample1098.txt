

class TictactoeRandomOpponent(DefaultOpponent):
	OPPONENT_ID = "random"

	def __init__(self):
		super(TictactoeRandomOpponent, self).__init__(TictactoeRandomOpponent.OPPONENT_ID)

	def initialize(self, seed):
		self.random_generator_ = numpy.random.RandomState(seed=seed)

	def execute(self, point_id_, inputs, valid_actions, is_training):
		return self.random_generator_.choice(valid_actions)

class TictactoeSmartOpponent(DefaultOpponent):
	OPPONENT_ID = "smart"

	def __init__(self):
		super(TictactoeSmartOpponent, self).__init__(TictactoeSmartOpponent.OPPONENT_ID)

	def initialize(self, seed):
		self.random_generator_ = numpy.random.RandomState(seed=seed)

	def execute(self, point_id_, inputs, valid_actions, is_traini