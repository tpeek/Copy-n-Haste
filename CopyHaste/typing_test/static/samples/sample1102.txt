

def normalized_compression_distance(action_sequence, other_action_sequence, algorithm):
	x_len = len(algorithm.compress("".join(action_sequence)))
	y_len = len(algorithm.compress("".join(other_action_sequence)))
	xy_len = len(algorithm.compress("".join(action_sequence+other_action_sequence)))
	distance = (xy_len - min(x_len, y_len))/float(max(x_len, y_len))
	return distance

def b(x):
	return (x - 0.04)/(0.285714285714-0.04)

def z(x):
	return (x - 0.0869565217391)/(0.68-0.0869565217391)

if __name__ == "__main__":
	folds = ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']
	raises = ['2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2'