LAND_COVER_GEOTIFF_FILE_PATH = "/nlcd/us.tif"
LAND_POINT_SPACING = 30.0
LAND_PADDING = 30.0
RIGHT_OF_WAY_LAND_COST = 0.0
COST_TABLE = {11: 300,
			  12: 4,
			  21: 10,
			  22: 20,
			  23: 50,
			  24: 120,
			  31: 4,
			  41: 4,
			  42: 4,
			  43: 4,
			  52: 4,
			  71: 4,
			  81: 2,
			  82: 2,
			  90: 4,
			  95: 4}
def cost_density_to_local_cost(cost_density):
	length = LAND_POINT_SPACING
	width = 2.0 * LAND_PADDING
	area = length * width
	local_cost = cost_density * area * 10
	return local_cost
def get_landcover_pixel_values(landcover_latlngs):
	geotiff_file_path = config.CWD + LAND_COVER_GEOTIFF_FILE_PATH
	landcover_lnglats = util.swap_pairs(landcover_latlngs)
	landcover_pixel_values = geotiff.get_geotiff_pixel_vals_with_projection(
										geotiff_file_path, landcover_lnglats)
	return landcover_pixel_values
def pixel_values_to_cost_densities(landcover_pixel_values):
	landcover_cost_densities = [COST_TABLE[pixel_val] for pixel_val
								in landcover_pixel_values]
	return landcover_cost_densities
def cost_densities_to_landcost(landcover_cost_densities):
	landcover_costs = [cost_density_to_local_cost(cost_density)
					   for cost_density in landcover_cost_densities