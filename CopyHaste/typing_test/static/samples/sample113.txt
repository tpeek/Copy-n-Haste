class Route(object):
	def __init__(self, spatiotemporal_path_4d):
		self.scalar_acceleration_profile = \
			spatiotemporal_path_4d.scalar_acceleration_profile
		self.comfort_profile = spatiotemporal_path_4d.comfort_profile
		self.comfort_rating = spatiotemporal_path_4d.comfort_rating
		self.land_cost = spatiotemporal_path_4d.land_cost
		self.land_elevations = spatiotemporal_path_4d.land_elevations
		self.latlngs = spatiotemporal_path_4d.latlngs
		self.pylons = []
		self.pylon_cost = spatiotemporal_path_4d.pylon_cost
		self.speed_profile = spatiotemporal_path_4d.speed_profile
		self.total_cost = round(spatiotemporal_path_4d.total_cost / 10.0**9, 3)
		self.trip_time = round(spatiotemporal_path_4d.trip_time / 60.0, 3)
		self.tube_cost = spatiotemporal_path_4d.tube_cost
		self.tube_elevations = spatiotemporal_path_4d.tube_elevations.tolist()
		self.tunneling_cost = spatiotemporal_path_4d.tunneling_cost
	def as_dict(self, index):
		route_dict = {
			"accelerationProfile": self.scalar_acceleration_profile,
			"comfortProfile": self.comfort_profile,
			"comfortRating": self.comfort_rating,
			"index": index,
			"landCost": self.land_cost,
			"landElevations": self.land_elevations,
			"lat