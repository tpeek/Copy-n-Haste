
class CropCoeff:
	name = None
	gdd_type_name = ''
	def __init__(self):
		pass
	def __str__(self):
		return '<%s, type %s>' % (self.name, self.curve_type)
	def lookup(self, val=None):
		nval = 0.0
		for i in range(self.lentry):
			if val < self.data[i]:
				nval = self.data[i]
		return nval
				
	def max_value(self, val=None):
		for i in range(self.lentry):
			if val < self.data[i]:
				val = self.data[i]
		return val
	def init_
		t2d = { '1':'1=NCGDD', '2':'2=%PL-EC', '3':'3=%PL-EC+daysafter', '4':'4=%PL-Term' }
		self.curve_no = dc[2]
		self.curve_type_no = dc[3]
		self.curve_type = t2d[dc[3]]
		self.name = dc[4]
		self.percents = percents.astype(float)
		v = dc[6:41]
		v = np.where(v == '', '0', v)
		self.data = v.astype(float)
		i = np.