
class DayData:
	def __init__(self):
		self.etref_array = np.zeros(30)
def crop_cycle(data, et_cell, debug_flag=False, vb_flag=False):
	for crop_num, crop in sorted(et_cell.crop_params.items()):
		if et_cell.crop_flags[crop_num] == 0:
			logging.debug('Crop %2d %s' % (crop_num, crop))
			logging.debug('  NOT USED')
			continue
		elif ((data.crop_skip_list and crop_num in data.crop_skip_list) or 
			  (data.crop_test_list and crop_num not in data.crop_test_list)):
			continue			   
		else:	  
			logging.warning('Crop %2d %s' % (crop_num, crop))				 
		logging.debug(
			'crop_day_loop():  Curve %d %s  Class %s  Flag %s' %
			(crop.curve_number, crop.curve_name,
			 crop.class_number, et_cell.crop_flags[crop_num]))
		logging.debug('  GDD trigg