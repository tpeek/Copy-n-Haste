
class DayData:
	def __init__(self):
		self.etref_array = np.zeros(30)
def crop_cycle(data, et_cell, debug_flag=False, vb_flag=False, mp_procs=1):
	logging.info('  Starting crop cycle')
	crop_mp_list = []
	for crop_num, crop in sorted(et_cell.crop_params.items()):
		if et_cell.crop_flags[crop_num] == 0:
			logging.debug('  Crop %2d %s' % (crop_num, crop))
			logging.debug('	NOT USED')
			continue
		elif ((data.crop_skip_list and crop_num in data.crop_skip_list) or 
			  (data.crop_test_list and crop_num not in data.crop_test_list)):
			continue
		crop_mp_list.append([data, et_cell, crop, False, vb_flag])
	results = []
	if crop_mp_list:
		pool = mp.Pool(mp_procs)
		results = pool.map(crop_day_loop_mp, crop_mp_list)
		pool.close()
		pool.join