
class AverageCopier(Player):
	name = 'Average Copier'
	classifier = {
		'memory_depth': float('inf'),
		'stochastic': True,
		'inspects_source': False,
		'manipulates_source': False,
		'manipulates_state': False
	}
	@staticmethod
	def strategy(opponent):
		if len(opponent.history) == 0:
			return random_choice(0.5)
		p = opponent.cooperations // len(opponent.history)
		rnd_num = random.random()
		if rnd_num < p:
			return 'C'
		return 'D'
class NiceAverageCopier(Player):
	name = 'Nice Average Copier'
	classifier = {
		'memory_depth': float('inf'),
		'stochastic': True,
		'inspects_source': False,
		'manipulates_source': False,
		'manipulates_state': False
	}
	@staticmethod
	def strategy(opponent):
		if len(opponent.history) == 0:
			return