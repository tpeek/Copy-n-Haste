
class Punisher(Player):
	name = 'Punisher'
	classifier = {
		'memory_depth': float('inf'),
		'stochastic' : False,
		'inspects_source': False,
		'manipulates_source': False,
		'manipulates_state': False
	}
	def __init__(self):
		super(Punisher, self).__init__()
		self.mem_length = 1
		self.grudged = False
		self.grudge_memory = 1
	def strategy(self, opponent):
		if self.grudge_memory >= self.mem_length:
			self.grudge_memory = 0
			self.grudged = False
		if self.grudged:
			self.grudge_memory += 1
			return 'D'
		elif 'D' in opponent.history[-1:]:
			self.mem_length = (opponent.defections * 20) // len(opponent.history)
			self.grudged = True
			return 'D'
		return 'C'
	def reset(self):
		Player.reset(self)
		self.grudged = False
		self.gru