
class TestDarwin(TestPlayer):
	name = "Darwin"
	player = axelrod.Darwin
	expected_classifier = {
		'memory_depth': float('inf'),
		'stochastic': False,
		'inspects_source': False,
		'manipulates_source': False,
		'manipulates_state': True
	}
	def test_strategy(self):
		p1 = self.player()
		p2 = axelrod.Player()
		self.assertEqual(p1.strategy(p2), 'C')
	def test_play(self):
		self.assertTrue(len(self.player.valid_callers)>0)
		self.assertTrue("play" in self.player.valid_callers)
		self.play()
	def play(self):
		p1 = self.player()
		p2 = axelrod.Player()
		p1.reset()
		p1.strategy(p2)
		self.assertEqual(p1.genome.count('C') + p1.genome.count('D'), len(p1.genome))
	def test_reset(self):
		p1 = self.player()
		p1.reset()
		self.assertEqual(p1.