
C, D = 'C', 'D'
class TestMindController(TestPlayer):
	name = 'Mind Controller'
	player = axelrod.MindController
	expected_classifier = {
		'memory_depth': -10,
		'stochastic': False,
		'inspects_source': False,
		'manipulates_source': True,
		'manipulates_state': False
	}
	def test_strategy(self):
		P1 = axelrod.MindController()
		P2 = axelrod.Cooperator()
		self.assertEqual(P1.strategy(P2), D)
		self.assertEqual(P2.strategy(P1), C)
	def test_vs_defect(self):
		P1 = axelrod.MindController()
		P2 = axelrod.Defector()
		self.assertEqual(P1.strategy(P2), D)
		self.assertEqual(P2.strategy(P1), C)
	def test_vs_grudger(self):
		P1 = axelrod.MindController()
		P2 = axelrod.Grudger()
		P1.history = [D, D, D, D]
		self.assertEqual(P1.strategy(P2),