
class Logger(object):
	def __init__(self, home_dir, logfname='Logger.log', loghead=u'',
				 logmode='over'):
		self.home_dir = home_dir
		self.logfname = logfname
		self.loghead = loghead
		self.logmode = logmode
		self.logfile = None
		self.log_raw_input = False
		self.log_output = False
		self.timestamp = False
		self.log_active = False
	def _set_mode(self,mode):
		if mode not in ['append','backup','global','over','rotate']:
			raise ValueError('invalid log mode %s given' % mode)
		self._logmode = mode
	def _get_mode(self):
		return self._logmode
	logmode = property(_get_mode,_set_mode)
	def logstart(self, logfname=None, loghead=None, logmode=None,
				 log_output=False, timestamp=False, log_raw_input=False):
		if self.logfile is not No