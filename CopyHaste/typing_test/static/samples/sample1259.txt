
@magics_class
class AutoMagics(Magics):
	def __init__(self, shell):
		super(AutoMagics, self).__init__(shell)
		self._magic_state = Bunch()
	@line_magic
	def automagic(self, parameter_s=''):
		arg = parameter_s.lower()
		mman = self.shell.magics_manager
		if arg in ('on', '1', 'true'):
			val = True
		elif arg in ('off', '0', 'false'):
			val = False
		else:
			val = not mman.auto_magic
		mman.auto_magic = val
		print('\n' + self.shell.magics_manager.auto_status())
	@skip_doctest
	@line_magic
	def autocall(self, parameter_s=''):
		if parameter_s:
			arg = int(parameter_s)
		else:
			arg = 'toggle'
		if not arg in (0, 1, 2, 'toggle'):
			error('Valid modes: (0->Off, 1->Smart, 2->Full')
			return
		if arg in (0, 1, 2):
			self.shell.autocall