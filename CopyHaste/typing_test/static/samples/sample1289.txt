
def adjust_lon_range(lons, radians=True, start=0.0):
	
	lons = single2list(lons, numpy_array=True)	
	
	interval360 = 2.0*numpy.pi if radians else 360.0
	end = start + interval360	
	
	less_than_start = numpy.ones([len(lons),])
	while numpy.sum(less_than_start) != 0:
		lons = numpy.where(lons < start, lons + interval360, lons)
		less_than_start = lons < start
	
	more_than_end = numpy.ones([len(lons),])
	while numpy.sum(more_than_end) != 0:
		lons = numpy.where(lons >= end, lons - interval360, lons)
		more_than_end = lons >= end
	return lons
def apply_lon_filter(data, lon_bounds):
	lon_min = adjust_lon_range(lon_bounds[0], radians=False, start=0.0)
	lon_max = adjust_lon_range(lon_bounds[1], radians=False, start=0.0)
	lon_axis = adjust_lon_ran