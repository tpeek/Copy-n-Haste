
class StreamCipher(object):
	def __init__(self, method, key, iv, mode):
		self.method = method
		self.key = key
		self.iv = iv
		self.iv_len = len(iv)
		self.cipher = self.get_cipher().encryptor() if mode else self.get_cipher().decryptor()
		self.update = self.cipher.update
	def get_cipher(self):
		if self.method.startswith('rc4'):
			return Cipher(algorithms.ARC4(self.key), None, default_backend())
		if self.method.endswith('ctr'):
			mode = modes.CTR(self.iv)
		elif self.method.endswith('ofb'):
			mode = modes.OFB(self.iv)
		elif self.method.endswith('cfb8'):
			mode = modes.CFB8(self.iv)
		else:
			mode = modes.CFB(self.iv)
		if self.method.startswith('aes'):
			return Cipher(algorithms.AES(self.key), mode, default_backend())
		if self.