
try:
except ImportError:
configparser.RawConfigParser.OPTCRE = re.compile(r'(?P<option>[^=\s][^=]*)\s*(?P<vi>[=])\s*(?P<value>.*)$')
logger = logging.getLogger('FW_Lite')
class SConfigParser(configparser.ConfigParser):
	optionxform = str
	def dget(self, section, option, default=''):
		try:
			value = self.get(section, option)
			if not value:
				value = default
		except Exception:
			value = default
		return value
	def dgetfloat(self, section, option, default=0):
		try:
			return self.getfloat(section, option)
		except Exception:
			return float(default)
	def dgetint(self, section, option, default=0):
		try:
			return self.getint(section, option)
		except Exception:
			return int(default)
	def dgetbool(self, section, option, default=False