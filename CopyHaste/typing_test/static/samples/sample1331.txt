


class ExpiredError(Exception):
	def __init__(self, rule):
		self.rule = rule


class ap_rule(object):

	def __init__(self, rule, msg=None, expire=None):
		super(ap_rule, self).__init__()
		self.rule = rule.strip()
		if len(self.rule) < 3 or self.rule.startswith(('!', '[')) or '
			raise ValueError("invalid abp_rule: %s" % self.rule)
		self.msg = msg
		self.expire = expire
		self.override = self.rule.startswith('@@')
		self._regex = self._parse()

	def _parse(self):
		def parse(rule):
			if rule.startswith('||'):
				regex = rule.replace('.', r'\.').replace('?', r'\?').replace('/', '').replace('*', '[^/]*').replace('^', '').replace('||', '^(?:https?://)?(?:[^/]+\.)?') + r'(?:[:/]|$)'
				return re.compile(regex)
			