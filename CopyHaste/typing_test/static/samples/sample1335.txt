
try:
except ImportError:
	EC = None
try:
except ImportError:
	def compare_digest(a, b):
		if isinstance(a, str):
			if len(a) != len(b):
				return False
			result = 0
			for x, y in zip(a, b):
				result |= ord(x) ^ ord(y)
			return result == 0
		else:
			if len(a) != len(b):
				return False
			result = 0
			for x, y in zip(a, b):
				result |= x ^ y
			return result == 0
def random_string(size):
	return b'\x16\x03\x03\x00' + os.urandom(size-4)
@lru_cache(128)
def EVP_BytesToKey(password, key_len):
	m = []
	l = 0
	while l < key_len:
		md5 = hashlib.md5()
		data = password
		if len(m) > 0:
			data = m[len(m) - 1] + password
		md5.update(data)
		m.append(md5.digest())
		l += 16
	ms = b''.join(m)
	return ms[:key_len]
def check(key, method):