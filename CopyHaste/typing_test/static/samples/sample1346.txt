
				   _strongly_connected_subgraph, _transition_counts,
				   _solve_msm_eigensystem)
class BayesianMarkovStateModel(BaseEstimator, _MappingTransformMixin):
	def __init__(self, lag_time=1, n_samples=100, n_steps=0, n_chains=None,
				 n_timescales=None, reversible=True, ergodic_cutoff=1,
				 prior_counts=0, sliding_window=True, random_state=None,
				 sampler='metzner', verbose=False):
		self.lag_time = lag_time
		self.n_samples = n_samples
		self.n_steps = n_steps
		self.n_chains = n_chains
		self.n_timescales = n_timescales
		self.reversible = reversible
		self.ergodic_cutoff = ergodic_cutoff
		self.prior_counts = prior_counts
		self.sliding_window = sliding_window
		self.random_state = random_state
		self.sampler = sampler
		self.ver