
def test_0():
	tC, m = _strongly_connected_subgraph(np.zeros((1,1)))
	assert tC.shape == (0, 0)
	assert m == {}
def test_01():
	tC, m = _strongly_connected_subgraph(np.ones((1,1)))
	assert tC.shape == (1, 1)
	assert m == {0: 0}
def test_1():
	C = np.array([[1,0,0],
				  [0,1,1],
				  [0,1,1]])
	tC, m = _strongly_connected_subgraph(np.array(C))
	np.testing.assert_array_equal(tC, np.array([[1,1], [1,1]]))
	assert m == {1: 0, 2: 1}
def test_2():
	C = np.array([[1,1,0],
				  [0,1,1],
				  [0,1,1]])
	tC, m = _strongly_connected_subgraph(np.array(C))
	np.testing.assert_array_equal(tC, np.array([[1,1], [1,1]]))
	assert m == {1: 0, 2: 1}
def test_3():
	_strongly_connected_subgraph(np.zeros((3,3)))
def test_4():
	tC, m = _strongly_connected_sub