
class CalledProcessError(Exception):
	def __init__(self, returncode, cmd, stdout=None, stderr=None):
		 self.returncode = returncode
		 self.cmd = cmd
		 self.stdout = stdout
		 self.stderr = stderr
	def __str__(self):
		return ("Command '%s' returned non-zero exit status %d.\n"
				"\n==== stdout ====\n%s\n==== stderr ====\n%s\n") % (self.cmd, self.returncode,
												 self.stdout, self.stderr)
def check_call(cmd):
	process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	try:
		stdout, stderr = process.communicate()
	except:
		process.kill()
		process.wait()
		raise
	retcode = process.poll()
	if retcode:
		raise CalledProcessError(retcode, cmd, stdout=stdout, stderr=stderr)
def shell_lines(resource):
	fn = res