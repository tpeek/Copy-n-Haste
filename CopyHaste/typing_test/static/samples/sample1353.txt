
__all__ = ['committors', 'conditional_committors']
def committors(sources, sinks, msm):
	sources = np.array(sources, dtype=int).reshape((-1, 1))
	sinks = np.array(sinks, dtype=int).reshape((-1, 1))
	n_states = msm.n_states_
	tprob = msm.transmat_
	lhs = np.eye(n_states) - tprob
	for a in sources:
		lhs[a, :] = 0.0
		lhs[:, a] = 0.0
		lhs[a, a] = 1.0
	for b in sinks:
		lhs[b, :] = 0.0
		lhs[:, b] = 0.0
		lhs[b, b] = 1.0
	ident_sinks = np.zeros(n_states)
	ident_sinks[sinks] = 1.0
	rhs = np.dot(tprob, ident_sinks)
	rhs[sources] = 0.0
	rhs[sinks] = 1.0
	forward_committors = np.linalg.solve(lhs, rhs)
	return forward_committors
def conditional_committors(source, sink, waypoint, msm):
	tprob = msm.transmat_
	n_states = msm.n_states_
	for data in 