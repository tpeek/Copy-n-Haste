
log = logging.getLogger(__name__)
def get_oauth_session(user, provider):
	tokens = SocialToken.objects.filter(
		account__user__username=user.username, app__provider=provider)
	if tokens.exists():
		token = tokens[0]
	else:
		return None
	if provider == 'github':
		session = OAuth2Session(
			client_id=token.app.client_id,
			token={
				'access_token': str(token.token),
				'token_type': 'bearer'
			}
		)
	elif provider == 'bitbucket':
		session = OAuth1Session(
			token.app.client_id,
			client_secret=token.app.secret,
			resource_owner_key=token.token,
			resource_owner_secret=token.token_secret
		)
	return session or None
def get_token_for_project(project, force_local=False):
	if not getattr(settings, 'ALLOW_PRIVATE_REPOS', False):
		r