
def cross_chan_coherance(st1, st2):
	cccoh=0.0
	kchan=0
	for tr in st1:
		tr1=tr.data
		tr2=st2.select(station=tr.stats.station, \
					   channel=tr.stats.channel)
		if tr2:
			cccoh+=normxcorr2(tr1,tr2[0].data)[0][0]
			kchan+=1
	cccoh=cccoh/kchan
	return cccoh
def distance_matrix(templates):
	dist_mat=np.array([np.array([0.0]*len(templates))]*len(templates))
	for i in xrange(len(templates)):
		for j in xrange(i,len(templates)):
			if i==j:
				dist_mat[i,j]=0.0
			else:
				dist_mat[i,j]=1-np.abs(cross_chan_coherance(templates[i],templates[j]))
	for i in xrange(1,len(templates)):
		for j in xrange(i):
			dist_mat[i,j]=dist_mat.T[i,j]
	return dist_mat
def cluster(templates, show=True):
	dist_mat=distance_matrix(templates)
	dist_vec=squar