
bob=os.path.realpath(__file__)
bob=bob.split('/')
path='/'
for i in xrange(len(bob)-2):
	path+=bob[i]+'/'
print path
sys.path.insert(0,path)
def ccc_gen(image, template):
	ccc=np.array([np.array([0]*(len(image[0].data)-len(template[0].data)+1))]*len(image))
	print 'Correlation matrix is shaped: '+str(ccc.shape)
	for i in xrange(len(image)):
		templatetr=template.select(station=image[i].stats.station,\
								   channel=image[i].stats.channel)
		ccc[i]=normxcorr2(templatetr[0].data, image[i].data)[0]
	return ccc
def _node_loop(freq, node, ccc, lags, threshold, thresh_type):
	for j in xrange(len(ccc)):
		pad=np.array([0]*int(round(lags[j,0]*freq)))
		if not 'cccsum' in locals():
			cccsum=np.append(ccc[j],pad)[len(pad):]
		else:
			bob=np.a