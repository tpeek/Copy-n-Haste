
def _channel_loop( templates, stream, delays, ktemplates, savedir=False):
	DTYPE = np.float32
	num_cores=matchdef.cores
	if len(templates) < num_cores:
		num_cores = len(templates)
	cccsums=np.array([np.array([0.0]*(len(stream[0])-len(templates[0])+1),\
							   dtype=DTYPE)]*ktemplates)
	nchans=np.array([0]*ktemplates, dtype=int)
	image_ind=0
	template_ind=0
	j_ind=np.concatenate([np.arange(0,len(stream))]*ktemplates)
	pool=mp.Pool(processes=num_cores, maxtasksperchild=None)
	if savedir:
		results=[pool.apply_async(_template_loop, args=(templates[i], stream[j_ind[i]], \
														delays[i],\
														savedir+'/'+str(i), i))
				 for i in xrange(len(templates))]
	else:
		results=[pool.apply_async(_template_loop, args=(templates[i