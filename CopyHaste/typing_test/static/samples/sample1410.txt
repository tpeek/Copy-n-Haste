
class ProcessText:
  @staticmethod
  def splitToSentences( content):
	tokenizer = nltk.data.load('tokenizers/punkt/english.pickle')
	return tokenizer.tokenize(content)
class SpinHelper:
  @staticmethod
  def get_wordnet_pos(treebank_tag):
	if treebank_tag.startswith('J'):
		return wordnet.ADJ
	elif treebank_tag.startswith('V'):
		return wordnet.VERB
	elif treebank_tag.startswith('N'):
		return wordnet.NOUN
	elif treebank_tag.startswith('R'):
		return wordnet.ADV
	else:
		return None
  @staticmethod
  def getSynonyms(word,type=None):
	  synonyms = []
	  s = None
	  if type:
		s = wordnet.synsets(word,pos= SpinHelper.get_wordnet_pos(type))
	  else:
		s = wordnet.synsets(word)
		return []
	  for syn in s:
		for lemma in syn.lemmas:
		  if lem