
sys.path.insert(0, 'libraries')
expected = ['Lat1','Lat2','Lon1','Lon2','Logins','Conditions','Qualifiers','Exclusions']
@classmethod
def parse(cls, api, raw):
	status = cls.first_parse(api, raw)
	setattr(status, 'json', json.dumps(raw))
	return status
tweepy.models.Status.first_parse = tweepy.models.Status.parse
tweepy.models.Status.parse = parse
   
   
   
def stripWords(text):
	listed = ''.join((c if (c.isalnum()) else ' ') for c in text).split()
	return listed
	
def postTweet(api,text,image):
	if image != None and image != 'null':
		api.update_status(text)
		print "posted tweet:", text
		
													  
def getTweets(login, cfg, conditions, qualifiers, exclusions, geoCache, NLPClassifier):
	if cfg['Method'].lower() == 'stream':
		get