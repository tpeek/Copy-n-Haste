
class AVIChunk:
	def __init__(self):
		self.empty()
	def empty(self):
		self.size = 0
		self.fourcc = ''
		self.datatype = 1
		self.chunk = ''
	def read(self, thefile):
		data = thefile.read(4)
		try:
			self.size = struct.unpack('<i', data)[0]
		except:
			self.size = 0
		if self.size > 0 and self.size < 10000:
			self.chunk = thefile.read(self.size)
		else:
			self.chunk = ''
			self.size = 0
class AVIList:
	def __init__(self):
		self.empty()
	def empty(self):
		self.size = 0
		self.fourcc = ''
		self.datatype = 2
	def read(self, thefile):
		data = thefile.read(4)
		try:
			self.size = struct.unpack('<i', data)[0]
		except:
			self.size = 0
		self.fourcc = thefile.read(4)
class AVIHeader:
	def __init__(self):
		self.empty()
	def empty(se