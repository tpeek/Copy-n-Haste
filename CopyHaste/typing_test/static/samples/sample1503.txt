
class EUCJPProber(MultiByteCharSetProber):
	def __init__(self):
		MultiByteCharSetProber.__init__(self)
		self._mCodingSM = CodingStateMachine(EUCJPSMModel)
		self._mDistributionAnalyzer = EUCJPDistributionAnalysis()
		self._mContextAnalyzer = EUCJPContextAnalysis()
		self.reset()
	def reset(self):
		MultiByteCharSetProber.reset(self)
		self._mContextAnalyzer.reset()
	def get_charset_name(self):
		return "EUC-JP"
	def feed(self, aBuf):
		aLen = len(aBuf)
		for i in range(0, aLen):
			codingState = self._mCodingSM.next_state(aBuf[i])
			if codingState == constants.eError:
				if constants._debug:
					sys.stderr.write(self.get_charset_name()
									 + ' prober hit error at byte ' + str(i)
									 + '\n')
				self._mState = constants.eNo