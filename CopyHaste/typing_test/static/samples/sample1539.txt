
						unicode_literals)
original_find_tex_file = dr.find_tex_file
def setup():
	dr.find_tex_file = lambda x: x
def teardown():
	dr.find_tex_file = original_find_tex_file
def test_PsfontsMap():
	filename = os.path.join(
		os.path.dirname(__file__),
		'baseline_images', 'dviread', 'test.map')
	fontmap = dr.PsfontsMap(filename)
	for n in [1, 2, 3, 4, 5]:
		key = 'TeXfont%d' % n
		entry = fontmap[key]
		assert_equal(entry.texname, key)
		assert_equal(entry.psname, 'PSfont%d' % n)
		if n not in [3, 5]:
			assert_equal(entry.encoding, 'font%d.enc' % n)
		elif n == 3:
			assert_equal(entry.encoding, 'enc3.foo')
		if n not in [1, 5]:
			assert_equal(entry.filename, 'font%d.pfa' % n)
		else:
			assert_equal(entry.filename, 'font%d.pfb' % n)
		if n 