
nneuron = 61
min_angle = -90
max_angle = 90
sprefs = np.linspace(min_angle, max_angle, nneuron)
eps = np.finfo(np.float64).eps
sigtc_sq = float(10**2)
def cartesian(arrays, out=None):
	arrays = [np.asarray(x) for x in arrays]
	shape = (len(x) for x in arrays)
	dtype = arrays[0].dtype
	ix = np.indices(shape)
	ix = ix.reshape(len(arrays), -1).T
	if out is None:
		out = np.empty_like(ix, dtype=dtype)
	for n, arr in enumerate(arrays):
		out[:, n] = arrays[n][ix[:, n]]
	return out
def random_s(ndata, sort):
	s = np.random.rand(2, ndata) * 120 - 60
	if sort:
		s = np.sort(s, axis=0)
	return s[0], s[1]
def random_c(ndata, ndims, low, high, sort):
	c_range = high - low
	if ndims == 1:
		c = np.random.rand(ndims, ndata)[0] * c_range + low
	else:
		