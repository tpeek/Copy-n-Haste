
class Systemd(Bcfg2.Client.Tools.SvcTool):
	name = 'Systemd'
	__execs__ = ['/bin/systemctl']
	__handles__ = [('Service', 'systemd')]
	__req__ = {'Service': ['name', 'status']}
	def get_svc_name(self, service):
		svc = service.get('name')
		if svc.endswith(('.service', '.socket', '.device', '.mount',
						 '.automount', '.swap', '.target', '.path',
						 '.timer', '.snapshot', '.slice', '.scope')):
			return svc
		else:
			return '%s.service' % svc
	def get_svc_command(self, service, action):
		return "/bin/systemctl %s %s" % (action, self.get_svc_name(service))
	def VerifyService(self, entry, _):
		entry.set('target_status', entry.get('status'))
		bootstatus = self.get_bootstatus(entry)
		if bootstatus is None:
			return True
		if self.c