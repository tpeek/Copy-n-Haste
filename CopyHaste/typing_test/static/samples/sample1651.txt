
class APK(Bcfg2.Client.Tools.PkgTool):
	name = 'APK'
	__execs__ = ["/sbin/apk"]
	__handles__ = [('Package', 'apk')]
	__req__ = {'Package': ['name', 'version']}
	pkgtype = 'apk'
	pkgtool = ("/sbin/apk add %s", ("%s", ["name"]))
	def RefreshPackages(self):
		names = self.cmd.run("/sbin/apk info").stdout.splitlines()
		nameversions = self.cmd.run("/sbin/apk info -v").stdout.splitlines()
		for pkg in zip(names, nameversions):
			pkgname = pkg[0]
			version = pkg[1][len(pkgname) + 1:]
			self.logger.debug(" pkgname: %s" % pkgname)
			self.logger.debug(" version: %s" % version)
			self.installed[pkgname] = version
	def VerifyPackage(self, entry, _):
		if 'version' not in entry.attrib:
			self.logger.info("Cannot verify unversioned package %s" %
