
class POSIXFile(POSIXTool):
	__req__ = ['name', 'mode', 'owner', 'group']
	def fully_specified(self, entry):
		return entry.text is not None or entry.get('empty', 'false') == 'true'
	def _get_data(self, entry):
		is_binary = entry.get('encoding', 'ascii') == 'base64'
		if entry.get('empty', 'false') == 'true' or not entry.text:
			tempdata = ''
		elif is_binary:
			tempdata = b64decode(entry.text)
		else:
			tempdata = entry.text
			if isinstance(tempdata, unicode) and unicode != str:
				try:
					tempdata = tempdata.encode(Bcfg2.Options.setup.encoding)
				except UnicodeEncodeError:
					err = sys.exc_info()[1]
					self.logger.error("POSIX: Error encoding file %s: %s" %
									  (entry.get('name'), err))
		return (tempdata, is_binary)