
	 getweakrefcount,
	 getweakrefs,
	 ref,
	 proxy,
	 CallableProxyType,
	 ProxyType,
	 ReferenceType)
ProxyTypes = (ProxyType, CallableProxyType)
__all__ = ["ref", "proxy", "getweakrefcount", "getweakrefs",
		   "WeakKeyDictionary", "ReferenceError", "ReferenceType", "ProxyType",
		   "CallableProxyType", "ProxyTypes", "WeakValueDictionary", 'WeakSet']
class WeakValueDictionary(UserDict.UserDict):
	def __init__(self, *args, **kw):
		def remove(wr, selfref=ref(self)):
			self = selfref()
			if self is not None:
				del self.data[wr.key]
		self._remove = remove
		UserDict.UserDict.__init__(self, *args, **kw)
	def __getitem__(self, key):
		o = self.data[key]()
		if o is None:
			raise KeyError, key
		else:
			return o
	def __contains__(self, k