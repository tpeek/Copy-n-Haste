
def gen_rand_vecs(dims):
	vecs = random.normal(size=dims)
	mags = linalg.norm(vecs, axis=-1)
	ends = vecs / mags[..., newaxis]
	return ends
def main():
	spots = []
	rf= 0.5
	for i in range(50000):
		ends = gen_rand_vecs(2)
		mu = 0.600023812816
		sigma = 0.719736466122
		scale = 1.82216219069
		mag = np.random.lognormal(mean=mu, sigma=sigma, size=scale)
		spots.append(mag * ends)
	spots = np.asarray(spots)
	nbins = 250
	magic = 5.
	H, xedges, yedges = np.histogram2d(spots[:,0],spots[:,1],bins=nbins)
	H = H.T
	fig2 = plt.figure()
	plt.pcolormesh(xedges,yedges,H, cmap=plt.cm.Oranges)
	plt.axis([-magic, magic, -magic, magic])
	plt.title("radially-symmetric Lognormal distribution")
	
	plt.savefig("2D lognorm distribution.png")
	plt.show()
	ret