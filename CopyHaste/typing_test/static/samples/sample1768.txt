__author__ = 'richard'
class Forces():
	def __init__(self):
		pass
	def randomF(self, rf, dim=3, kind='constant'):
		if kind is 'lognorm':
			MAG_THRESH = 3e-4
			ends = math_sorcery.gen_symm_vecs(3)
			mu = 0.600023812816
			sigma = 0.719736466122
			mag = np.random.lognormal(mean=mu, sigma=sigma, size=1)
			if mag * rf > MAG_THRESH:
				return ends * MAG_THRESH
			return mag * rf * ends
		elif kind is 'constant':
			ends = math_sorcery.gen_symm_vecs(3)
			return rf * ends
	def upwindBiasF(self, wtf):
		return [wtf, 0., 0.]
	def repulsionF(self, position, repulsion_funcs, wallF_params):
		scalar = wallF_params[0]
		intd = 0.003 / 2
		pos_x, pos_y, pos_z = position
		repulsion_x, repulsion_y, repulsion_z = repulsion_funcs
		dx = 0.00001
		s