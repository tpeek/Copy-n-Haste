
	
def trim_leading_trailing_NaNs(array, trim='fb'):
	filtx = array['x']
	first = 0
	trim = trim.upper()
	if 'F' in trim:
		for i in filtx:
			if np.isnan(i) == False:
				break
			else:
				first += 1
	last = len(array)
	if 'B' in trim:
		for i in filtx[::-1]:
			if np.isnan(i) == False:
				break
			else:
				last -= 1
	return array[first:last].reset_index()[['x', 'y', 'z']]
def split_trajectories(full_trajectory, NaN_split_thresh=50, min_trajectory_len=20):
	xs = full_trajectory['x']
	in_NaN_run = False
	firstN = None
	lastN = None
	firstNaN = None
	lastNaN = None
	NaNcount = 0
	split_trajectory_list = []
	for i, x in enumerate(xs):
		if np.isnan(xs[i]) == False:
			if firstN is None:
				firstN = i
			if in_NaN_run is False:
				if i ==