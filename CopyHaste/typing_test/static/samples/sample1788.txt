__author__ = 'richard'
def calculate_angular_velocity(velocity_vec):
def calculate_curvature(ensemble):
	velocity_vec = np.vstack((ensemble.velocity_x, ensemble.velocity_y, ensemble.velocity_z))
	acceleration_vec = np.vstack((ensemble.acceleration_x, ensemble.acceleration_y, ensemble.acceleration_z))
	numerator = np.linalg.norm( np.cross(velocity_vec.T, acceleration_vec.T), axis=1)
	denominator = np.linalg.norm(acceleration_vec, axis=0)** 3
	return numerator/denominator
def gen_symm_vecs(dims=3):
	vecs = np.random.normal(size=dims)
	mags = np.linalg.norm(vecs, axis=-1)
	ends = vecs / mags[..., np.newaxis]
	return ends
def rads_to_degrees(rads):
	degrees = (rads * 180/np.pi) % 360
	return degrees
def calculate_xy_heading_angle(x_component, y