
def main():
	util.enable_reversecomplement()
	args   = loadargs()
	models = loadmodels(args)
	tfgroups = load_tfgroups(args)
	util.globals.flags.push("normalize_targets", True)
	for tfgroup in tfgroups:
		trdata = None
		if len(tfgroup["ids"]) == 0:
			print "No TFs to train on microarray %s"%tfgroup["train_fold"]
			continue
		if "calib" in args.steps:
			trdata = load_pbmdata(trdata, tfgroup["ids"], tfgroup["train_fold"], args, remove_probe_bias=True)
			util.calibrate(models, trdata, args.calibdir, nfold=args.nfold, ncalib=args.ncalib, allfolds=True)
		if "train" in args.steps:
			trdata = load_pbmdata(trdata, tfgroup["ids"], tfgroup["train_fold"], args, remove_probe_bias=True)
			util.train(models, trdata, args.calibdir, args.finaldir,