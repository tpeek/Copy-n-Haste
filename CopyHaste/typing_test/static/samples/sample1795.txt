
c_isize_t = smat_dll.c_isize_t
c_usize_t = smat_dll.c_usize_t
c_smat_p  = smat_dll.c_smat_p
def ext_dll():
	global _ext_dll
	if _ext_dll is None:
		_ext_dll = load_extension("deepity_smat")
		_ext_dll.api_gradstep.declare(		  None, [c_smat_p,c_smat_p,c_smat_p,c_smat_p,c_smat_p])
		_ext_dll.api_gradstep_nesterov1.declare(None, [c_smat_p,c_smat_p,c_smat_p])
		_ext_dll.api_gradstep_nesterov2.declare(None, [c_smat_p,c_smat_p,c_smat_p,c_smat_p,c_smat_p])
		_ext_dll.api_madd_bcast.declare(		None, [c_smat_p,c_smat_p,c_usize_t,c_smat_p])
		_ext_dll.api_maskout.declare(		   None, [c_smat_p,c_smat_p])
		_ext_dll.api_calc_zmask.declare(		None, [c_smat_p,c_smat_p])
		_ext_dll.api_dropout_fp_tr.declare( None, [c_smat_p,c_smat_p,c_smat_p,c_smat_p,c_int]