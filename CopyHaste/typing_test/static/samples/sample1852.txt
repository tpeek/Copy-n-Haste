
sys.path.append("..")
def relationship(*arg, **kw):
	ret = relation(*arg, **kw)
	db_adapter.commit()
	return ret
def date_serializer(date):
	return long((date - datetime(1970, 1, 1)).total_seconds() * 1000)
def to_dic(inst, cls):
	convert = dict()
	convert[DateTime] = date_serializer
	convert[TZDateTime] = date_serializer
	d = dict()
	for c in cls.__table__.columns:
		v = getattr(inst, c.name)
		if c.type.__class__ in convert.keys() and v is not None:
			try:
				func = convert[c.type.__class__]
				d[c.name] = func(v)
			except:
				d[c.name] = "Error:  Failed to covert using ", str(convert[c.type.__class__])
		else:
			d[c.name] = v
	return d
def to_json(inst, cls):
	return json.dumps(to_dic(inst, cls))
class TZDateTime(TypeDecorator):
	