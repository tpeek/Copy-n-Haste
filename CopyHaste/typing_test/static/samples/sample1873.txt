
	InvalidTag, UnsupportedAlgorithm, _Reasons
)
	CFB, CFB8, CTR, OFB
)
@utils.register_interface(ciphers.CipherContext)
class _CipherContext(object):
	def __init__(self, backend, cipher, mode, operation):
		self._backend = backend
		self._cipher = cipher
		self._mode = mode
		self._operation = operation
		self._bytes_processed = 0
		if (isinstance(cipher, ciphers.BlockCipherAlgorithm) and not
				isinstance(mode, (OFB, CFB, CFB8, CTR))):
			self._byte_block_size = cipher.block_size // 8
		else:
			self._byte_block_size = 1
		registry = self._backend._cipher_registry
		try:
			cipher_enum, mode_enum = registry[type(cipher), type(mode)]
		except KeyError:
			raise UnsupportedAlgorithm(
				"cipher {0} in {1} mode is not supported "
				"by thi