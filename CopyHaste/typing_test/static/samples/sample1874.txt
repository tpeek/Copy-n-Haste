
logger = logging.getLogger(__name__)
cache = Cache('StatsDispatcher')
POINTS = 365
SINCE = 365
USE_MAX = True
def getServicesPoolsCounters(servicePool, counter_type):
	try:
		cacheKey = (servicePool and servicePool.id or 'all') + str(counter_type) + str(POINTS) + str(SINCE)
		to = getSqlDatetime()
		since = to - timedelta(days=SINCE)
		val = cache.get(cacheKey)
		if val is None:
			if servicePool is None:
				us = DeployedService()
				complete = True
			else:
				us = servicePool
				complete = False
			val = []
			for x in counters.getCounters(us, counter_type, since=since, to=to, limit=POINTS, use_max=USE_MAX, all=complete):
				val.append({'stamp': x[0], 'value': int(x[1])})
			if len(val) > 2:
				cache.put(cacheKey, pickle.dumps(val)