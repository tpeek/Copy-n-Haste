
logger = logging.getLogger(__name__)
class Storage(object):
	CODEC = 'base64'
	def __init__(self, owner):
		self._owner = owner.encode('utf-8')
	def __getKey(self, key):
		h = hashlib.md5()
		h.update(self._owner)
		h.update(key.encode('utf-8'))
		return h.hexdigest()
	def saveData(self, skey, data, attr1=None):
		key = self.__getKey(skey)
		if isinstance(data, unicode):
			data = data.encode('utf-8')
		data = data.encode(Storage.CODEC)
		attr1 = '' if attr1 is None else attr1
		try:
			dbStorage.objects.create(owner=self._owner, key=key, data=data, attr1=attr1)
		except Exception:
			dbStorage.objects.filter(key=key).update(owner=self._owner, data=data, attr1=attr1)
		logger.debug('Key saved')
	def put(self, skey, data):
		return self.sav