
logger = logging.getLogger(__name__)
class IPMachinesService(services.Service):
	ipList = gui.EditableList(label=_('List of IPS'))
	typeName = _('Physical machines accessed by ip')
	typeType = 'IPMachinesService'
	typeDescription = _('This service provides access to POWERED-ON Machines by ip')
	iconFile = 'machine.png'
	maxDeployed = -1
	usesCache = False
	usesCache_L2 = False
	needsManager = False
	mustAssignManually = False
	deployedType = IPMachineDeployed
	servicesTypeProvided = (serviceTypes.VDI,)
	def __init__(self, environment, parent, values=None):
		super(IPMachinesService, self).__init__(environment, parent, values)
		if values is None or values.get('ipList', None) is None:
			self._ips = []
		else:
			self._ips = list('{}~{}'.fo