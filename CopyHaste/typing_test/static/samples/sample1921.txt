
class WikiLinks(FeatureExtractor):
	def __init__(self, xml_location="data/wikifier/data/output",
				 wikipedia="data/wikipedia"):
		self._name = "wikilinks"
		self._location = xml_location
		self._links = defaultdict(dict)
		self._wiki = CachedWikipedia(wikipedia)
		self._cache = -1
		self._matches = None
	def set_metadata(self, answer, category, qnum, sent, token, guesses, fold):
		FeatureExtractor.set_metadata\
		  (self, answer, category, qnum, sent, token, guesses, fold)
		if not qnum in self._links:
			self.load_xml(qnum)
	def vw_
		if hash(text) != self._cache:
			self._cache = hash(text)
			self._matches = set()
			for ii in xrange(self._sent):
				self._matches = self._matches | \
					set(x[0] for x in
						self._links[self._qnu