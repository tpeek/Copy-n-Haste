
kMAX_VAL = 1000
def lg(x):
	return log(x) / log(2.)
def entropy(x):
	if x == 0.0 or x == 1.0:
		return float("-inf")
	else:
		return -(x * lg(x) + (1. - x) * lg(1. - x))
class PurgingCounter(Counter):
	def __init__(self, max_size=1000000):
		self._max = max_size
	def __setitem__(self, item, val):
		if len(self) > self._max * 2:
			print("Purging")
			to_delete = self.most_common()[self._max:]
			for ii in to_delete:
				del self[ii]
		Counter.__setitem__(self, item, val)
class VwDiscreteReader:
	def __init__(self, input_file, name, label, num_vals=100, max_sent=5,
				 min_freq=3):
		self._observations = defaultdict(PurgingCounter)
		self._input_file = input_file
		self._label_file = label
		self._name = name
		self._max_sent = max_sent
		