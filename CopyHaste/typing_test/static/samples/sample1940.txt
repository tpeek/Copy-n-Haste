
kMIN_APPEARANCES = 5
kFEATURES = OrderedDict([("ir", None), ("lm", None), ("deep", None),
	("answer_present", None), ("text", None),
	("classifier", None), ("wikilinks", None),
	])
kHAS_GUESSES = set()
if IrExtractor.has_guess():
	kHAS_GUESSES.add("ir")
if LanguageModel.has_guess():
	kHAS_GUESSES.add("lm")
if TextExtractor.has_guess():
	kHAS_GUESSES.add("text")
if DeepExtractor.has_guess():
	kHAS_GUESSES.add("deep")
if Classifier.has_guess():
	kHAS_GUESSES.add("classifier")
if AnswerPresent.has_guess():
	kHAS_GUESSES.add("answer_present")
kGRANULARITIES = ["sentence"]
kFOLDS = ["dev", "devtest", "test"]
kNEGINF = float("-inf")
def feature_lines(qq, guess_list, granularity, feature_generator):
	guesses_needed = guess_list.all_guesses(qq)
	g