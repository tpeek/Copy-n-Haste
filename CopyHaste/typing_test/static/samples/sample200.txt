
				  plot_recall_maps)
def train_classifier(data, feature_names, class_name, train_size, test_size, output='',
	random_state=None, coords=True, recall_maps=True, classifier=None, correct_baseline=None,
	balanced=True, returns=['correct_boolean', 'confusion_test'], report=True,
	pickle_path=None):
	if balanced:
		X_train, X_test, y_train, y_test = balanced_train_test_split(
			data[feature_names], data[class_name], train_size=train_size, test_size=test_size,
			random_state=random_state)
	else:
		X_train, X_test, y_train, y_test = train_test_split(np.array(data[feature_names]),
			np.array(data[class_name]), train_size=train_size, test_size=test_size, random_state=random_state)
	if not classifier:
		classifier = RandomForestClassifier(
			