
class TestActive:
	@classmethod
	def setup_class(cls):
		cls.data = [Dataset('glass'), Dataset('wine')]
		cls.heuristics = [random_h, entropy_h, margin_h, qbb_kl_h, qbb_margin_h]
		cls.classifier = LogisticRegression()
		cls.committee = BaggingClassifier(cls.classifier, n_estimators=2, max_samples=30)
	def _run_active_expt(self, data):
		X_train, X_test, y_train, y_test = train_test_split(data.features, data.target)
		for heuristic in self.heuristics:
			active_learner = ActiveLearner(classifier=self.classifier,
										   heuristic=heuristic,
										   initial_n=20,
										   training_size=23,
										   sample_size=20,
										   committee=self.committee,
										   committee_samples=20,
										   pool_n = 10,
										