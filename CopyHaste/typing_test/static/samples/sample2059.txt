
if osp.isfile(osp.join(osp.dirname(osp.dirname(osp.realpath(__file__))), ".portage_not_installed")):
	sys.path.insert(0, osp.join(osp.dirname(osp.dirname(osp.realpath(__file__))), "pym"))
portage._internal_caller = True
FIND_EXTANT_CONTENTS  = "find %s -name CONTENTS"
MANDATORY_OPTS  = [ 'archive-dir' ]
def archive_conf():
	args = []
	content_files = []
	md5_match_hash = {}
	options = portage.dispatch_conf.read_config(MANDATORY_OPTS)
	for conf in sys.argv[1:]:
		if not os.path.isabs(conf):
			conf = os.path.abspath(conf)
		args += [ conf ]
		md5_match_hash[conf] = ''
	with os.popen(FIND_EXTANT_CONTENTS % (os.path.join(portage.settings['EROOT'], portage.VDB_PATH))) as f:
		content_files += f.readlines()
	try:
		todo_cnt = len(args)
		for fi