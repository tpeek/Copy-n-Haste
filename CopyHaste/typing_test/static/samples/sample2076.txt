
class Socks5Server(object):
	@asyncio.coroutine
	def handle_proxy_conn(self, reader, writer):
		try:
			data = yield
			vers, method_no = struct.unpack('!BB', data)
			if vers != 0x05:
				writer.close()
				return
			data = yield
			for method in data:
				if method == 0x00:
					break
			else:
				method = 0xFF
			repl = struct.pack('!BB', 0x05, method)
			writer.write(repl)
			yield
			if method == 0xFF:
				writer.close()
				return
			data = yield
			vers, cmd, rsv, atyp = struct.unpack('!BBBB', data)
			if vers != 0x05 or rsv != 0x00:
				self.close()
				return
			rpl = 0x00
			if cmd != 0x01:
				rpl = 0x07
			elif atyp == 0x01:
				data = yield
				addr = socket.inet_ntoa(data)
			elif atyp == 0x03:
				data = yield
				addr_len, 