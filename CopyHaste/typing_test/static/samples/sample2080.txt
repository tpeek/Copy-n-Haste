
class AsynchronousTask(SlotObject):
	__slots__ = ("background", "cancelled", "returncode") + \
		("_exit_listeners", "_exit_listener_stack", "_start_listeners",
		"_waiting")
	_cancelled_returncode = - signal.SIGINT
	def start(self):
		self._start_hook()
		self._start()
	def _start(self):
		self.returncode = os.EX_OK
		self.wait()
	def isAlive(self):
		return self.returncode is None
	def poll(self):
		if self.returncode is not None:
			return self.returncode
		self._poll()
		self._wait_hook()
		return self.returncode
	def _poll(self):
		return self.returncode
	def wait(self):
		if self.returncode is None:
			if not self._waiting:
				self._waiting = True
				try:
					self._wait()
				finally:
					self._waiting = False
		self._wait_hook()