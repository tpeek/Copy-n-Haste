
LOG = logging.getLogger(__name__)
class SchedulerHintsController(wsgi.Controller):
	@staticmethod
	def _extract_scheduler_hints(body):
		hints = {}
		attr = '%s:scheduler_hints' % Scheduler_hints.alias
		try:
			if attr in body:
				hints.update(body[attr])
		except ValueError:
			msg = _("Malformed scheduler_hints attribute")
			raise webob.exc.HTTPBadRequest(explanation=msg)
		return hints
	@wsgi.extends
	def create(self, req, body):
		hints = self._extract_scheduler_hints(body)
		if 'volume' in body:
			body['volume']['scheduler_hints'] = hints
		yield
class Scheduler_hints(extensions.ExtensionDescriptor):
	name = "SchedulerHints"
	alias = "OS-SCH-HNT"
	namespace = volumes.SCHEDULER_HINTS_NAMESPACE
	updated = "2013-04-18T00:00:00+00:00"