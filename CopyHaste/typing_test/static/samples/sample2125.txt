
class fake_httplib2(object):
	def __init__(self, return_type=None, *args, **kwargs):
		self.return_type = return_type
	def request(self, uri, method="GET", body=None, headers=None,
				redirections=5, connection_type=None):
		if not self.return_type:
			fake_headers = httplib2.Response(headers)
			return_obj = {
				'uri': uri,
				'method': method,
				'body': body,
				'headers': headers
			}
			return (fake_headers, return_obj)
		elif isinstance(self.return_type, int):
			body = "fake_body"
			header_info = {
				'content-type': 'text/plain',
				'status': str(self.return_type),
				'content-length': len(body)
			}
			resp_header = httplib2.Response(header_info)
			return (resp_header, body)
		else:
			msg = "unsupported return type %s"