
sys.dont_write_bytecode = True
pi  = math.pi
ee  = math.e
sin = math.sin
sqrt= math.sqrt
r   = random.random
isa = isinstance
def say(*lst):
  sys.stdout.write(', '.join(map(str,lst)))
  sys.stdout.flush()
  
def r3(lst,n=3):
  return map(lambda x:round(x,n),lst)
def r5(lst): return r3(lst,5)
def seed(x=None):
  random.seed(x or the.MISC.seed)
def shuffle(lst):
  random.shuffle(lst)
  return lst
def ntiles(lst, tiles=None,ordered=True):
  tiles = tiles or the.MISC.tiles
  lst   = lst if ordered else sorted(lst)
  at	= lambda x: lst[ int(len(lst)*x) ]
  return [ at(tile) for tile in tiles ]
def median(lst,ordered=False):
  lst = sorted(lst)
  m = len(lst)
  j = lst[int(m/2)+1]
  if m % 2:
	return j
  else:
	i = lst[int(m/2)]
	return (i+j)/2