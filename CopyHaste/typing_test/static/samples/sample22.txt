DIR_KEY, LINES_KEY, STEP_SUBMIT_FNAME,
						   fill_submit_wham, DEF_BASE_SUBMIT_TPL,
						   DEF_LINE_SUBMIT_TPL)
__author__ = 'cmayes'
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger('wham_block')
STEP_META_FNAME = "meta.{:02d}"
DEF_TPL_DIR = os.path.join(os.getcwd(), 'tpl')
DEF_FILE_PAT = 'meta.00'
DEF_STEPS_NUM = 12
def write_submit(tgt_dir, sub_tpl_base, sub_tpl_line, step, overwrite=False):
	sub_file = os.path.join(tgt_dir, STEP_SUBMIT_FNAME.format(step))
	if allow_write(sub_file, overwrite):
		wham_fill = fill_submit_wham(sub_tpl_base, sub_tpl_line, step, use_part=False)
		str_to_file(wham_fill, sub_file)
def write_avg_rmsd(tgt_dir, rmsd, overwrite=False):
	for rmsd_fname, data in rmsd.items():
		tgt_file = os.path.join(tgt_dir, rmsd_fname)
		if os.path.exists(tgt_file) and not overwrite:
			logger.warn("Not overwriting existing RMSD file '%s'", tgt_file)
			continue
		write_rmsd(data, tgt_file)
def write_meta(tgt_dir, meta, step, overwrite=False):
	step_meta = STEP_META_FNAME.format(step)
	meta_tgt = os.path.join(tgt_dir, step_meta)
	if os.path.exists(meta_tgt) and not overwrite:
		logger.warn("Not overwriting existing meta file '%s'", meta_tgt)
		retu