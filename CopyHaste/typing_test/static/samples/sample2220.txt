
def check_running(run_type=''):
	pid_file = '{}-{}.pid'.format(
		os.path.basename(__file__),run_type)
	fp = open(pid_file, 'w')
	try:
		fcntl.lockf(fp, fcntl.LOCK_EX | fcntl.LOCK_NB)
	except IOError:
		sys.exit(0)
def run_cmd(cmd):
	logging.debug('running: {}\n'.format(cmd))
	process = subprocess.Popen(
		cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE,
		shell=True)
	for line in iter(process.stdout.readline, ""):
		logging.debug(line)
def parse_args():
	parser = ArgumentParser()
	parser.add_argument('-r', '--refresh', action='store_true',
						help="Refresh the list of repos", default=False)
	parser.add_argument('-d', '--datadir', help="repo directory")
	return parser.parse_args()
def refresh_cache():
	path = dirname(abspath(__file_