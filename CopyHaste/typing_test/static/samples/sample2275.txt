
LOG = logging.getLogger(__name__)
OPTS = [
	cfg.StrOpt('pd_dhcp_driver',
			   default='dibbler',
			   help=_('Service to handle DHCPv6 Prefix delegation.')),
]
cfg.CONF.register_opts(OPTS)
class PrefixDelegation(object):
	def __init__(self, context, pmon, intf_driver, notifier, pd_update_cb,
				 agent_conf):
		self.context = context
		self.pmon = pmon
		self.intf_driver = intf_driver
		self.notifier = notifier
		self.routers = {}
		self.pd_update_cb = pd_update_cb
		self.agent_conf = agent_conf
		self.pd_dhcp_driver = driver.DriverManager(
			namespace='neutron.agent.linux.pd_drivers',
			name=agent_conf.prefix_delegation_driver,
		).driver
		registry.subscribe(add_router,
						   resources.ROUTER,
						   events.BEFORE_CREATE)
		regi