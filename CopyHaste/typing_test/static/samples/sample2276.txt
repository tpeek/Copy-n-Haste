
LOG = logging.getLogger(__name__)
_keywords = {
	'eth_src': 'dl_src',
	'eth_dst': 'dl_dst',
	'ipv4_src': 'nw_src',
	'ipv4_dst': 'nw_dst',
	'table_id': 'table',
}
class OpenFlowSwitchMixin(object):
	@staticmethod
	def _conv_args(kwargs):
		for our_name, ovs_ofctl_name in _keywords.items():
			if our_name in kwargs:
				kwargs[ovs_ofctl_name] = kwargs.pop(our_name)
		return kwargs
	def dump_flows(self, table_id):
		return self.dump_flows_for_table(table_id)
	def dump_flows_all_tables(self):
		return self.dump_all_flows()
	def install_goto_next(self, table_id):
		self.install_goto(table_id=table_id, dest_table_id=table_id + 1)
	def install_output(self, port, table_id=0, priority=0, **kwargs):
		self.add_flow(table=table_id,
					  priority=pr