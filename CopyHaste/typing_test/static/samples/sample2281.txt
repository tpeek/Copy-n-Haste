
LOG = logging.getLogger(__name__)
class QoSPlugin(qos.QoSPluginBase):
	supported_extension_aliases = ['qos']
	def __init__(self):
		super(QoSPlugin, self).__init__()
		self.notification_driver_manager = (
			driver_mgr.QosServiceNotificationDriverManager())
	@db_base_plugin_common.convert_result_to_dict
	def create_policy(self, context, policy):
		policy = policy_object.QosPolicy(context, **policy['policy'])
		policy.create()
		self.notification_driver_manager.create_policy(context, policy)
		return policy
	@db_base_plugin_common.convert_result_to_dict
	def update_policy(self, context, policy_id, policy):
		policy = policy_object.QosPolicy(context, **policy['policy'])
		policy.id = policy_id
		policy.update()
		self.notification_driver_man