
LOG = logging.getLogger(__name__)
METADATA_SERVICE_NAME = 'metadata-proxy'
class MetadataDriver(object):
	def __init__(self, l3_agent):
		self.metadata_port = l3_agent.conf.metadata_port
		self.metadata_access_mark = l3_agent.conf.metadata_access_mark
		registry.subscribe(
			after_router_added, resources.ROUTER, events.AFTER_CREATE)
		registry.subscribe(
			before_router_removed, resources.ROUTER, events.BEFORE_DELETE)
	@classmethod
	def metadata_filter_rules(cls, port, mark):
		return [('INPUT', '-m mark --mark %s/%s -j ACCEPT' %
				 (mark, constants.ROUTER_MARK_MASK)),
				('INPUT', '-p tcp -m tcp --dport %s '
				 '-j DROP' % port)]
	@classmethod
	def metadata_mangle_rules(cls, mark):
		return [('PREROUTING', '-d 169.254.169.254/32 '
