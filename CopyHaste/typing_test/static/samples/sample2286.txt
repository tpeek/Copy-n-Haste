
class AttributeMapMemento(fixtures.Fixture):
	def _setUp(self):
		self.contents_backup = {}
		for res, attrs in six.iteritems(attributes.RESOURCE_ATTRIBUTE_MAP):
			self.contents_backup[res] = attrs.copy()
		self.addCleanup(self.restore)
	def restore(self):
		attributes.RESOURCE_ATTRIBUTE_MAP = self.contents_backup
class WarningsFixture(fixtures.Fixture):
	warning_types = (
		DeprecationWarning, PendingDeprecationWarning, ImportWarning
	)
	def _setUp(self):
		self.addCleanup(warnings.resetwarnings)
		for wtype in self.warning_types:
			warnings.filterwarnings(
				"always", category=wtype, module='^neutron\\.')
def setup_mock_calls(mocked_call, expected_calls_and_values):
	return_values = [call[1] for call in expected_calls_and_values]
	mo