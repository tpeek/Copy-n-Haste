
def hash_args(*args, **kwargs):
	arg_string = '_'.join([str(arg) for arg in args])
	kwarg_string = '_'.join([str(key) + '=' + str(value)
							 for key, value in iteritems(kwargs)])
	combined = ':'.join([arg_string, kwarg_string])
	hasher = md5()
	hasher.update(b(combined))
	return hasher.hexdigest()
def assert_datasource_protocol(event):
	assert event.type in DATASOURCE_TYPE
	if not event.type == DATASOURCE_TYPE.DONE:
		assert isinstance(event.dt, datetime)
		assert event.dt.tzinfo == pytz.utc
def assert_trade_protocol(event):
	assert_datasource_protocol(event)
	assert event.type == DATASOURCE_TYPE.TRADE
	assert isinstance(event.price, numbers.Real)
	assert isinstance(event.volume, numbers.Integral)
	assert isinstance(event.dt, datetime)