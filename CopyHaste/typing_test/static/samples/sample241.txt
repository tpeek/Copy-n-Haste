
class Classify:
	def __init__(self,taxonomy):
		self.taxonomy=self.readRefpkgTax(taxonomy)
	def readRefpkgTax(self, taxonomy_file):
		taxonomy_hash={}
		for line in [[y for y in x.rstrip().split(',') if y] for x in open(taxonomy_file).readlines() if not x.startswith('tax_id')]:
			taxonomy_hash[line[0]] = ['Root']+line[5:]
		return taxonomy_hash
	def assignPlacement(self, placement_json_path, cutoff, type, resolve_placements):
		all_placements_reads={}
		
		def getIndex(index, lists):
			gen_list=[]
			
			for item in lists:	
				try:
					gen_list.append(item['p'][index])
				except IndexError:
					gen_list.append(None)
			return gen_list
		
		def reduceTaxString(placement_hashes, threshold, resolve_placements):
			confidences=[x['c'] fo