
def test_advance(lise):
	r = lise.advance()
	if r is None:
		print("Location at tick {}: {}".format(lise.tick, npc.avatar["physical"]["location"]))
def clear_off():
	for fn in ('LiSEworld.db', 'LiSEcode.db'):
		try:
			remove(fn)
		except OSError:
			pass
def mkengine(w='LiSEworld.db'):
	return Engine(
		worlddb=w,
		codedb='LiSEcode.db'
	)
clear_off()
lise = mkengine()
lise.tick = -1
phys = lise.new_character("physical")
phys.add_place("home")
phys.add_place("work")
phys.add_portal("home", "work")
phys.add_portal("work", "home")
npc = lise.new_character("nonplayer")
phys.add_thing("npc", "home")
npc.add_avatar("physical", "npc")
@npc.rule
def home2work(engine, npc):
	print("Will go to work in 9 hours")
	npc.avatar["physical"].travel_to_by