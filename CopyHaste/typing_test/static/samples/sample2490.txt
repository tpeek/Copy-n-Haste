
def pre_post(**kw):
	raise ProcessingException(description="Not Authorized", code=401)
def post_get_single(result=None, **kw):
	if (result is None or not result['visable']):
		raise ProcessingException(description="Record not found", code=404)
	else:
		del result['visable']
def post_get_many(result=None, search_params=None, **kw):
	entries = result['objects']
	for entry in list(entries):
		if not entry['visable']:
			entries.remove(entry)
		else:
			del entry['visable']
	result['objects'] = entries
def init_api_manager(app, db):
	api_manager = APIManager(app, flask_sqlalchemy_db=db)
	api_manager.create_api(Resource,
						   methods=['GET', 'POST'],
						   preprocessors={
						   'POST': [pre_post]
						   },
						   postprocessors={
