__author__ = 'swebb'
mpl.rc('text', usetex=True)
try:
	dt = 1.e-8
	E0 = 1.e-5
	B0 = 1.e-5
	B = [B0 * np.array([0., 1., 0.])]
	E = [E0 * np.array([1., 0., 0.])]
	charge = consts.e
	mass = consts.electron_mass
	pusher = RbBorisVay(charge, mass, dt)
	x = []
	y = []
	z = []
	tArray = []
	xIdeal = []
	yIdeal = []
	zIdeal = []
	ebConst = mass*E0/(charge * B0**2)
	Omega = charge * B0/mass
	v0 = [np.array([0., 0., 0.])]
	x0 = [np.zeros(3)]
	t = 0.
	x0 = pusher.halfmove(v0, x0, +1)
	x.append(x0[0][0])
	y.append(x0[0][1])
	z.append(x0[0][2])
	xIdeal.append(-ebConst*np.cos(Omega * t) + ebConst)
	yIdeal.append(-0.0001)
	zIdeal.append(-ebConst*np.sin(Omega * t) + E0*t/B0)
	tArray.append(t)
	t += 0.5*dt
	for idx in range(10000):
		v0 = pusher.accelerate(