
__author__ = 'swebb'
class constEM:
	def __init__(self):
		self.E = 1.e-5*np.array([2., 0., 0.])
		self.B = 1.e-5*np.array([0., 1., 0.])
	def getEField(self, x):
		return self.E
	def getBField(self, x):
		return self.B
try:
	print 'Testing Lorentz force pushers... '
	pusher = RbBorisVay(consts.e, consts.m_e, 1.e-8)
	ptclGamma = 101.
	ptclu = consts.c*np.sqrt(ptclGamma**2 - 1.)
	x = [np.array([1., 0., 0.])]
	v = [np.array([0., ptclu, 0.])]
	fields = constEM()
	efield = [fields.getEField(x)]
	bfield = [fields.getBField(x)]
	expectedX = np.array([1.00000000e+00,   2.99777763e+00,   1.51624746e-16])
	expectedU = np.array([3.51764015e-02,   3.02775541e+10,   3.06281988e-06])
	tol = 1.e-8
	x = pusher.halfmove(v, x, 1)
	u = pusher.accelerate(v, e