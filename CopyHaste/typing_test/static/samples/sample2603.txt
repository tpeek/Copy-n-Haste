
__all__ = ['TCompactProtocol', 'TCompactProtocolFactory']
CLEAR = 0
FIELD_WRITE = 1
VALUE_WRITE = 2
CONTAINER_WRITE = 3
BOOL_WRITE = 4
FIELD_READ = 5
CONTAINER_READ = 6
VALUE_READ = 7
BOOL_READ = 8
def make_helper(v_
  def helper(func):
	def nested(self, *args, **kwargs):
	  assert self.state in (v_
	  return func(self, *args, **kwargs)
	return nested
  return helper
writer = make_helper(VALUE_WRITE, CONTAINER_WRITE)
reader = make_helper(VALUE_READ, CONTAINER_READ)
def makeZigZag(n, bits):
  checkIntegerLimits(n, bits)
  return (n << 1) ^ (n >> (bits - 1))
def
  return (n >> 1) ^ -(n & 1)
def writeVarint(trans, n):
  out = []
  while True:
	if n & ~0x7f == 0:
	  out.append(n)
	  break
	else:
	  out.append((n & 0xff) | 0x80)
	  n = n >> 7
 