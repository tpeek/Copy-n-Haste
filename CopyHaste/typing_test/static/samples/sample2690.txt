
djcelery.setup_loader()
PROJECT_PATH = os.path.realpath(os.path.join(os.path.dirname(__file__), os.path.pardir))
VERSION = '0.1'
FORCE_SCRIPT_NAME = ''
LOCAL = os.environ.get('DJANGO_LOCAL', 'True') == 'True'
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True'
TEMPLATE_DEBUG = DEBUG
ADMINS = (
	('Administrator', os.environ.get('PETRI_OWNER_EMAIL', ''))
)
MANAGERS = ADMINS
DATABASES = {
	'production': {
		'ENGINE': 'django.db.backends.mysql',
		'NAME': os.environ.get('PETRI_DB_NAME', 'petri'),
		'USER': os.environ.get('PETRI_DB_USER', 'petri'),
		'PASSWORD': os.environ.get('PETRI_DB_PASSWORD', 'petri'),
		'HOST': os.environ.get('PETRI_DB_HOST', '127.0.0.1'),
		'PORT': os.environ.get('PETRI_DB_PORT', '3306')
	},
	'local': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': 'petri.db',
		'USER': '',
		'PASSWORD': '',
		'HOST': '',
		'PORT': ''
	}
}
EMAIL_DOMAIN = 'hackerunion.org'
if LOCAL:
	DOMAIN = 'localhost:8000'
	DEBUG_FILENAME = 'petri-local-debug.log'
	VERSION += " (Local)"
	DATABASES['default'] = DATABASES['local']
	COMPRESS_ENABLED = True
	COMPRESS_MTIME_DELAY = 0
	BROKER_URL = 'django://'
	EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
	DOMAIN = 'hackerunion.org'
	DEBUG_FILENAME = 'petri-debug.log'
	VERSION += " (Production)"
	DATABASES['default'] = DATABASES['production']
	EMAIL_BACKEND = 'django_mailgun.MailgunBackend'
	BROKER_HOST = os.environ.get('PETRI_BROKER_HOST', 'localhost')
	BROKER_PORT = int(os.environ.get('PETRI_BROKER_PORT', 5672))
	BROKER_USER = os.environ.get('PETRI_BROKER_USER', '')
	BROKER_PASSWORD = os.environ.get('PETRI_BROKER_PASSWORD', '')
	BROKER_VHOST = os.environ.get('PETRI_BROKER_VHOST', '')
TIME_ZONE = 'America/New_York'
LANGUAGE_CODE = 'en-us'
SITE_ID = 1
USE_I18N = True
USE_L10N = True
USE_TZ = True
MEDIA_ROOT = PROJECT_PATH + '/var/assets/media/'
MEDIA_URL = '/media/'
STATIC_ROOT = PROJECT_PATH + '/var/assets/static/'
STATIC_URL = '/static/'
STATICFILES_DIRS = (
	PROJECT_PATH + '/static',
)
STATICFILES_FINDERS = (
	'django.contrib.staticfiles.finders.FileSystemFinder',
	'django.contrib.staticfiles.finders.AppDirectoriesFinder',
	'compressor.finders.CompressorFinder'
)
CHAPTER_SCSS_DIR = PROJECT_PATH + '/static/sass/chapters/'
SECRET_KEY = os.environ.get('PETRI_SECRET_KEY', '')
TEMPLATE_LOADERS = (
	('pyjade.ext.django.Loader', (
		'django.template.loaders.filesystem.Loader',
		'django.template.loaders.app_directories.Loader',
		'django.template.loaders.eggs.Loader',
	)),
)
MIDDLEWARE_CLASSES = (
	'django.middleware.common.CommonMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'petri.common.middleware.EmailExceptionMiddleware',
)
ROOT_URLCONF = 'petri.urls'
WSGI_APPLICATION = 'petri.wsgi.application'
TEMPLATE_DIRS = (
	PROJECT_PATH + '/templates/',
)
FIXTURE_DIRS = (
	PROJECT_PATH + '/fixtures/',
)
INSTALLED_APPS = (
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.sites',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.markup',
	'petri.common',
	'petri.account',
	'petri.base',
	'petri.mail',
	'petri.synergy',
	'petri.members',
	'petri.project',
	'petri.chapter',
	'petri.bulletin',
	'petri.event',
	'petri.leadership',
	'petri.introduction',
	'petri.talk',
	'petri.pending',
	'petri.tag',
	'petri.petition',
	'petri.project',
	'django.contrib.admin',
	'django_mailgun',
	'widget_tweaks',
	'compressor',
	'djcelery',
	'djkombu',
	'django.contrib.humanize',
	'gravatar',
	'sanitizer',
	'south',
)
LOGGING = {
	'version': 1,
	'disable_existing_loggers': False,
	'filters': {
		'require_debug_false': {
			'()': 'django.utils.log.RequireDebugFalse'
		}
	},
	'handlers': {
		'mail_admins': {
			'level': 'ERROR',
			'filters': ['require_debug_false'],
			'class': 'django.utils.log.AdminEmailHandler'
		}
	},
	'loggers': {
		'django.request': {
			'handlers': ['mail_admins'],
			'level': 'ERROR',
			'propagate': True,
		},
	}
}
TEMPLATE_CONTEXT_PROCESSORS = [
  'django.core.context_processors.debug',
  'django.core.context_processors.i18n',
  'django.core.context_processors.media',
  'django.core.context_processors.static',
  'django.contrib.auth.context_processors.auth',
  'django.contrib.messages.context_processors.messages',
  'petri.common.context_processors.settings',
  'petri.common.context_processors.current_entities'
]
CACHES = {
	'default': {
		'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
		'LOCATION': 'petri-cache'
	}
}
PASSWORD_HASHERS = (
	'django.contrib.auth.hashers.BCryptPasswordHasher',
	'django.contrib.auth.hashers.PBKDF2PasswordHasher',
	'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
	'django.contrib.auth.hashers.SHA1PasswordHasher',
	'django.contrib.auth.hashers.MD5PasswordHasher',
	'django.contrib.auth.hashers.CryptPasswordHasher',
)
COMPRESS_PRECOMPILERS = (
)
AUTH_PROFILE_MODULE = 'account.UserProfile'
CELERYBEAT_SCHEDULE = {
	'send_daily_email_digest': {
		'task': 'petri.synergy.tasks.send_daily_email_digest',
		'schedule': crontab(minute='0', hour='17'),
		'args': (),
	},
	'send_weekly_email_digest': {
		'task': 'petri.synergy.tasks.send_weekly_email_digest',
		'schedule': crontab(minute='0', hour='10', day_of_week='fri'),
		'args': (),
	},
	'send_weekly_email_digest': {
		'task': 'petri.synergy.tasks.send_monthly_email_digest',
		'schedule': crontab(minute='0', hour='10', day_of_month='1'),
		'args': (),
	}
}
AUTHENTICATION_BACKENDS = (
	'petri.account.backends.CaseInsensitiveModelBackend',
)
LOGIN_URL = '/accounts/login/'
