
def create_and_send_email_digest(time_ago, to_user_profiles=[], subject="[Hacker Union] Digest"):
	timeframe = datetime.now() - time_ago
	created_talks = Talk.objects.filter(Q(is_official=False) & (Q(created__gte=timeframe) | Q(comment__created_at__gte=timeframe))).distinct()
	created_events = Event.objects.filter(created__gte=timeframe).distinct()
	context_dict = {'talks': created_talks, 'events': created_events, 'domain': settings.DOMAIN, 'chapter': 'nyc'}
	context = Context(context_dict)
	plaintext = get_template('notifications/summary/email_txt.jade')
	html = get_template('notifications/summary/email.jade')
	text_content = plaintext.render(context)
	html_content = html.render(context)
	for user in to_user_profiles:
		message = EmailMultiAlternatives(subject=subject, body=text_content,
		message.attach_alternative(html_content, "text/html")
		message.send()
