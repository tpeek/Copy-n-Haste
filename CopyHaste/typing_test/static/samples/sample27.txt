allow_write, str_to_file, swerr)
						   LINES_KEY, DEF_BASE_SUBMIT_TPL,
						   DEF_TPL_DIR, fill_submit_wham, STEP_SUBMIT_FNAME, DEF_PART_LINE_SUBMIT_TPL,
						   TemplateNotReadableError)
__author__ = 'cmayes'
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger('wham_split')
DEF_FILE_PAT = 'meta.00'
DEF_STEPS_NUM = 12
TPL_IO_ERR_MSG = "Couldn't read template at '{}'.  Have you run md_init in this directory?"
STEP_DBG_MSG = "Step %d: Dividing %d lines
SPLIT_DIR_FMT = "{:02d}_{:02d}"
STEP_META_FNAME = "meta." + SPLIT_DIR_FMT
def write_meta(tgt_dir, meta, step, overwrite=False):
	for step_part in range(1, step + 2):
		step_meta = STEP_META_FNAME.format(step, step_part)
		meta_tgt = os.path.join(tgt_dir, step_meta)
		if os.path.exists(meta_tgt) and not overwrite:
			logger.warn("Not overwriting existing meta file '%s'", meta_tgt)
			return
		with open(meta_tgt, 'w') as mfile:
			for mline in meta[LINES_KEY]:
					rmsd_loc = os.path.join(SPLIT_DIR_FMT.format(step, step_part),
											os.path.basename(mline[0]))
					mfile.write(rmsd_loc)
					mfile.write('\t')
					mfile.write('\t'.join(mline[1:]))
					mfile.write('\n')
def read_tpl(tpl_loc):
	try:
		return fil