BIN_DIR = os.path.dirname(__file__);
HOME_DIR = "%(BIN_DIR)s/.." % locals()
JAR_FILE = "%(BIN_DIR)s/ifinance-1.0-SNAPSHOT-jar-with-dependencies.jar" % locals()
INIT_CLASS = "jp.thotta.ifinance.batch.Initializer"
COLLECT_CLASS = "jp.thotta.ifinance.batch.DailyCollector"
NEWS_COLLECT_CLASS = "jp.thotta.ifinance.batch.HourlyNewsCollector"
NEWS_REPORT_CLASS = "jp.thotta.ifinance.batch.NewsReportBatch"
WEEKLY_REPORT_CLASS = "jp.thotta.ifinance.batch.WeeklyNewsReport"
PREDICT_CLASS = "jp.thotta.ifinance.batch.PredictorBatch"
REPORT_CLASS = "jp.thotta.ifinance.batch.UndervaluedStockRankingReport"
EXTRACT_CLASS = "jp.thotta.ifinance.batch.Extractor"
def usage():
  print "[Usage] ifinance init|collect|report|migrate|extract|collect-news|report-news"
  quit()
if(len(sys.argv) < 2):
  usage()
java_exec = ""
command = sys.argv[1]
if(len(sys.argv) == 3):
  command_arg1 = sys.argv[2]
else:
  command_arg1 = ""
if(command == "init"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(INIT_CLASS)s" % locals()
elif(command == "migrate"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(INIT_CLASS)s migrate" % locals()
elif(command == "collect"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(COLLECT_CLASS)s %(command_arg1)s" % locals()
elif(command == "collect-news"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(NEWS_COLLECT_CLASS)s %(command_arg1)s" % locals()
elif(command == "report-news"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(NEWS_REPORT_CLASS)s %(command_arg1)s" % locals()
elif(command == "report-weekly"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(WEEKLY_REPORT_CLASS)s %(command_arg1)s" % locals()
elif(command == "predict"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(PREDICT_CLASS)s" % locals()
elif(command == "report"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(REPORT_CLASS)s %(command_arg1)s" % locals()
elif(command == "extract"):
  java_exec = "cd %(HOME_DIR)s && java -cp %(JAR_FILE)s %(EXTRACT_CLASS)s %(command_arg1)s" % locals()
else:
  usage()
print "Execute: " + java_exec
os.system("mkdir -p %(HOME_DIR)s/logs" % locals())
os.system(java_exec)