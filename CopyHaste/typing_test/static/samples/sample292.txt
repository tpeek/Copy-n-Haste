
LOG = logging.getLogger(__name__)
authorize = extensions.soft_extension_authorizer(
	'volume',
	'extended_snapshot_attributes')
class ExtendedSnapshotAttributesController(wsgi.Controller):
	def _extend_snapshot(self, req, resp_snap):
		db_snap = req.get_db_snapshot(resp_snap['id'])
		for attr in ['project_id', 'progress']:
			key = "%s:%s" % (Extended_snapshot_attributes.alias, attr)
			resp_snap[key] = db_snap[attr]
	@wsgi.extends
	def show(self, req, resp_obj, id):
		context = req.environ['cinder.context']
		if authorize(context):
			resp_obj.attach(xml=ExtendedSnapshotAttributeTemplate())
			snapshot = resp_obj.obj['snapshot']
			self._extend_snapshot(req, snapshot)
	@wsgi.extends
	def detail(self, req, resp_obj):
		context = req.enviro