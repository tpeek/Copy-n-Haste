sys.path.append( '../pymod' )
def dimap_1():
	tst = gdaltest.GDALTest( 'DIMAP', 'METADATA.DIM', 1, 21586,
							 xoff = 0, yoff = 0, xsize = 100, ysize = 100 )
	return tst.testOpen()
def dimap_2():
	ds = gdal.Open( 'data/METADATA.DIM' )
	if ds.RasterCount != 1 \
	   or ds.RasterXSize != 6000 \
	   or ds.RasterYSize != 6000:
		gdaltest.post_reason ( 'wrong size or bands' )
		return 'fail'
	md = ds.GetMetadata()
	if md['PROCESSING_LEVEL'] != '1A':
		gdaltest.post_reason( 'metadata wrong.' )
		return 'fail'
	
	md = ds.GetMetadata()
	if md['SPECTRAL_PHYSICAL_BIAS'] != '0.000000':
		gdaltest.post_reason( 'metadata wrong.' )
		return 'fail'
	
	gcp_srs = ds.GetGCPProjection()
	if gcp_srs[:6] != 'GEOGCS' \
	   or gcp_srs.find('WGS') == -1 \
	   or gcp_srs.find('84') == -1:
		gdaltest.post_reason('GCP Projection not retained.')
		print(gcp_srs)
		return 'fail'
	gcps = ds.GetGCPs()
	if len(gcps) != 4 \
	   or gcps[0].GCPPixel != 0.5 \
	   or gcps[0].GCPLine  != 0.5 \
	   or abs(gcps[0].GCPX - 4.3641728) > 0.0000002 \
	   or abs(gcps[0].GCPY - 44.2082255) > 0.0000002 \
	   or abs(gcps[0].GCPZ - 0) > 0.0000002:
		gdaltest.post_reason( 'GCPs wrong.' )
		print(len(gcps))
		print(gcps[0])
		return 'fail'
	
	return 'success'
gdaltest_list = [
	dimap_1,
	dimap_2 ]
if __name__ == '__main__':
	gdaltest.setup_run( 'dimap' )
	gdaltest.run_tests( gdaltest_list )
	gdaltest.summarize()