
authorize = extensions.extension_authorizer('volume',
											'volume_encryption_metadata')
class VolumeEncryptionMetadataTemplate(xmlutil.TemplateBuilder):
	def construct(self):
		root = xmlutil.make_flat_dict('encryption', selector='encryption')
		return xmlutil.MasterTemplate(root, 1)
class VolumeEncryptionMetadataController(wsgi.Controller):
	@wsgi.serializers(xml=VolumeEncryptionMetadataTemplate)
	def index(self, req, volume_id):
		context = req.environ['cinder.context']
		authorize(context)
		return db.volume_encryption_metadata_get(context, volume_id)
	@wsgi.serializers(xml=VolumeEncryptionMetadataTemplate)
	def show(self, req, volume_id, id):
		encryption_item = self.index(req, volume_id)
		if encryption_item is not None:
			ret