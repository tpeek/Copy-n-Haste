class Base (dict):
	
	folder = 'base'
	cols = []
	file = ''
	
	def __init__(self, input = {}):
		if input != None:
			self.update(input)
	
	def clear_file(self):
		self.file = ''
	
	def save(self, file = None):
		if not self.folder.endswith('/'):
			folder = self.folder + '/'
		else:
			folder = self.folder
		
		if not os.access(folder, os.W_OK):
			os.makedirs(folder)
		
		if self.file == '':
			self.file = str(uuid.uuid4()) + '.txt'
		
		if file != None:
			self.file = file
		
		archiver.save(self, folder + self.file)
	
	@classmethod
	def load(cls, file):
		if not cls.folder.endswith('/'):
			folder = cls.folder + '/'
		else:
			folder = cls.folder
		
		f = archiver.load(folder + file)
		f = cls(f)
		f.file = file
		return f
	
	def get_value(self, name, *args, **kwargs):
		name = str(name)
		d = {'class': self.folder}
		d['item'] = name
		d['value'] = self.get(name, '')
		if hasattr(getattr(self, name, 0), '__call__'):
			d['value'] = getattr(self, name)(*args, **kwargs)
		return d
	
	def get_form(self, name, **kwargs):
		values = self.get_value(name)
		value = values['value']
		html = '<td'
		for item in kwargs:
			html += ' %s="%s"' % (item, str(kwargs[item]))
		html += '>'
		if isinstance(value, (basestring, int, long, float)):
			html += '%(item)s: '
			if isinstance(value, basestring):
				html += '<input type="text" name="" value="%(value)s">'
			else:
				html += '<input type="number" name="" value="%(value)g">'
			html += '</input>'
			html = html % values
		elif hasattr(value, '__iter__'):
			html += '%(item)s:<br>'
			html += '<textfield>'
			html += '\n'.join(value)
			html += '</textfield>'
			html = html % values
		html += '</td>'
		return html
	
	def get_html(self, name, form = False, **kwargs):
		kwargs['class'] = '%s %s' % (self.folder, name)
		kwargs['id'] = self.file
		if form:
			return self.get_form(name, **kwargs)
		else:
			value = self.get_value(name)
			html = '<td'
			for item in kwargs:
				html += ' %s="%s"' % (item, str(kwargs[item]))
			html += '>'
			html += '%(item)s: %(value)s' % value
			html += '</td>'
			return html
	
	def html(self, form = False):
		html = '<table class="%s" id="%s"><tr>' % (self.folder, self.file)
		html += self.get_html('name', form, colspan = '2', align = 'center')
		html += '</tr>'
		
		if len(self.cols) == 1:
			for item in self.cols[0]:
				html += '<tr>%s</tr>' % self.get_html(item, form)
		
		elif len(self.cols) > 1:
			length = max(len(self.cols[0]), len(self.cols[1]))
			for x in range(length):
				row = '<tr>'
				if x < len(self.cols[0]):
					item = self.cols[0][x]
					row += self.get_html(item, form)
				else:
					row += '<td class="%s"></td>' % self.folder
				if x < len(self.cols[1]):
					item = self.cols[1][x]
					row += self.get_html(item, form)
				row += '</tr>'
				html += row
		
		if len(self.cols) > 2:
			for item in self.cols[2:]:
				html += '<tr>%s</tr>' % self.get_html(item, form, colspan = '2')
		
		html += '</table>'
		return html