cur_path = os.path.split(os.path.realpath(__file__))[0]
os.chdir(cur_path)
version = open("node_modules/salvus_version.js").read().split('=')[1].strip()
if '--all' in sys.argv:
	all = True
	sys.argv.remove("--all")
else:
	all = False
out = open("static/index.html","w")
for X in open("page/index.html").readlines():
	if ".html" in X:
	   out.write(open(os.path.join("page/", X.strip())).read().replace("__SALVUS_VERSION__",version))
	else:
	   out.write(X)
out = open("static/index.js","w")
out.write("/* THIS FILE IS AUTOGENERATED BY gen_page !!! Edit the files in static/page instead. */\n\n")
out.write()
for X in open("page/index.js").readlines():
	Y = X.strip()
	base, ext = os.path.splitext(Y)
	if Y.startswith('
		pass
	elif ext == '.coffee' or ext == '.cjsx':
		out.write("exports={};(function(){\n")
		out.write(open(os.path.join("page/temp/", Y.replace(ext,'.js'))).read())
		out.write("})();_require.page_modules['%s']=exports;"%base)
	else:
		out.write(X)
out.write("\n});")
out.close()
IN_SASS = "index.sass"
OUT_CSS = "index.css"
SRC_MAP = "index.map.css"
no_cache = ""
os.system("mkdir -p static/sass")
os.system("cp -a page/_*.sass static/sass")
os.system("cp -a page/%s static/%s" % (IN_SASS, IN_SASS))
os.chdir("static")
cmd = "node-sass --include-path sass/ %s --style=compressed --source-map %s -x %s %s" % (no_cache, SRC_MAP, IN_SASS, OUT_CSS)
print("$ " + cmd)
os.system(cmd)
out_sass = open(OUT_CSS, "r").read()
with open(OUT_CSS, "w") as out:
	out.write("/* THIS FILE IS AUTOGENERATED BY gen_page !!! Edit the files in static/page instead. */\n\n")
	out.write(out_sass)
	out.write("\n\n")
	out.write("/*
os.chdir(cur_path)
if all:
	os.system("cd wizard && make -B")
else:
	os.system("cd wizard && make")