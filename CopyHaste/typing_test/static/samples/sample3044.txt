def read_main_conf(conf_file, panel):
	parser = SafeConfigParser()
	fd = open(conf_file, 'r')
	parser.readfp(fd)
	fd.close()
	options = {}
	if parser.has_section(panel):
		if parser.getboolean(panel,'status'):
			opti = parser.options(panel)
			for o in opti:
				if (o != 'status'):
					options[o] = parser.get(panel,o)
	return options
def get_arguments():
	parser = argparse.ArgumentParser(description='Apply conf parameters to templates')
	parser.add_argument('--template', dest='template_file', help='Template file name')
	parser.add_argument('--content', dest='content_file', help='Content file name')
	parser.add_argument('--conf', dest='conf_file', help='Conf file name')
	parser.add_argument('--panel', dest='panel', help='Panel name')
	args = parser.parse_args()
	return args
def include_values(conf, body_template):
	for k in conf.keys():
		upper_key = k.upper()
		replace_pattern = 'REPLACE_' + upper_key
		body_template = body_template.replace(replace_pattern,conf[k])
	return body_template
def include_webstats(html_body):
	text = "REPLACE_WEBSTATS"
	try:
		fd = open("webstats.tmpl","r")
		jscode = fd.read()
		fd.close()
	except:
		jscode = ""
	html_body = html_body.replace(text, jscode)
	return html_body
if __name__ == "__main__":
	arg = get_arguments()
	conf = read_main_conf(arg.conf_file, arg.panel)
	fd = open(arg.content_file, "r")
	body = fd.read()
	fd.close()
	body = include_values(conf, body)
	fd = open(arg.template_file, "r")
	template = fd.read()
	fd.close()
	template = include_webstats(template)
	text = "REPLACE_HERE"
	template = template.replace(text, body)
	print template