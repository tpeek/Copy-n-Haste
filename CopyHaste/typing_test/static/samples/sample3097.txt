total = 0
total_spam = 0
total_ham = 0
vocab = 0
vocab_spam = 0
vocab_ham = 0
word_count = {}
word_list = os.environ['WORDS'].split(",")
for line in sys.stdin:
	try:
		line = line.strip()
		tokens = re.split(r'\t+', line)
		
		if tokens[0] == 'TOTAL_DOCUMENTS':
			total += int(tokens[1])
			total_spam += int(tokens[2])
			total_ham += int(tokens[3])
		elif tokens[0] == 'TOTAL_WORDS':
			vocab = int(tokens[1])
			vocab_spam = int(tokens[2])
			vocab_ham = int(tokens[3])
		else:
			word_count[tokens[0]] = (int(tokens[1]), int(tokens[2]))
	except Exception as e:
		sys.exit(1)
prior_spam = (total_spam * 1.0) / total
prior_ham = (total_ham * 1.0) / total
spam_lhood_denom = vocab_spam + vocab
ham_lhood_denom = vocab_ham + vocab
spam_lhood_log = 0.0
ham_lhood_log = 0.0
for w in word_list:
	spam_lhood_log += math.log( (word_count[w][0] + 1.0) * 1.0 / spam_lhood_denom )
	ham_lhood_log += math.log( (word_count[w][1] + 1.0) * 1.0 / ham_lhood_denom )
spam_score = spam_lhood_log + math.log(prior_spam)
ham_score = ham_lhood_log + math.log(prior_ham)
classification = 'HAM'
if spam_score > ham_score:
	classification = 'SPAM'
   
print '
print '%s\t%f\t%f\t%s' %(",".join(word_list), spam_score, ham_score, classification)