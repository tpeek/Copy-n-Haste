__rcs_info__ = {
	'rcs_id'	   : '$Id$',
	'creator'	  : 'Doug Hellmann <doug@hellfly.net>',
	'project'	  : 'HappyDoc',
	'created'	  : 'Sat, 03-Feb-2001 12:51:26 EST',
	'version'	  : '$Revision: 1.1 $',
	'date'		 : '$Date: 2009/02/25 20:59:36 $',
}
try:
	__version__ = __rcs_info__['version'].split(' ')[1]
except:
	__version__ = '0.0'
BSD_LICENSE=
LONG_DESCRIPTION =
def cvsProductVersion(cvsVersionString='$Name:  $'):
	cvs_version_parts=string.split(cvsVersionString)
	if len(cvs_version_parts) >= 3:
		app_version = string.strip(cvs_version_parts[1]).replace('_', '.')
		if app_version and app_version[0] == 'r':
			app_version = app_version[1:]
	else:
		app_version = 'WORKING'
	return app_version
if sys.platform == 'win32':
	platform_specific_scripts = ['happydocwin.py']
else:
	platform_specific_scripts = ['happydoc']
setup (
	name = 'HappyDoc',
	version = cvsProductVersion(),
	description = 'HappyDoc Automatic Documentation System',
	long_description = LONG_DESCRIPTION,
	author = 'Doug Hellmann',
	author_email = 'doug@hellfly.net',
	url = 'http://happydoc.sourceforge.net',
	licence = BSD_LICENSE,
	platforms = ('Any',),
	keywords = ('documentation', 'extraction', 'source', 'docstring', '__doc__'),
	packages = [ 'happydoclib',
				 'happydoclib.docset',
				 'happydoclib.docstring',
				 'happydoclib.docstring.StructuredText',
				 'happydoclib.parseinfo',
				 'happydoclib.parsers',
				 ],
	
	package_dir = { '': '.' },
	
	scripts = platform_specific_scripts,
	)