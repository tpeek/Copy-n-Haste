STEP = 10000
shutil.rmtree('tile-entries', True)
os.mkdir('tile-entries')
t_srs = osr.SpatialReference()
t_srs.ImportFromEPSG(26913)
s_ds = ogr.Open('cutline-map.shp')
s_layer = s_ds.GetLayerByIndex(0)
extent = s_layer.GetExtent(True)
minx = int(extent[0] // STEP) * STEP
miny = int(extent[1] // STEP) * STEP
maxx = int(extent[2] // STEP) * STEP + STEP
maxy = int(extent[3] // STEP) * STEP + STEP
for x1 in range(minx, maxx, STEP):
	for y1 in range(miny, maxy, STEP):
		left = x1
		top = y1
		right = x1 + STEP
		bottom = y1 + STEP
		edge = ogr.Geometry(ogr.wkbLinearRing)
		edge.AssignSpatialReference(t_srs)
		edge.AddPoint(left, top)
		edge.AddPoint(right, top)
		edge.AddPoint(right, bottom)
		edge.AddPoint(left, bottom)
		edge.CloseRings()
		cutline = ogr.Geometry(ogr.wkbPolygon)
		cutline.AddGeometry(edge)
		s_layer.SetSpatialFilter(cutline)
		entries = sorted(set([feature.GetField('imagefn') for feature in s_layer if feature.GetField('imagefn')]))
		if len(entries):
			print("%d %d (%d)" % (x1, y1, len(entries)))
			with open('tile-entries/%dx%d.txt' % (x1, y1), 'w') as out:
				for i in entries:
					out.write(i + '\n')