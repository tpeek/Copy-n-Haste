
LOG = logging.getLogger(__name__)
class NegativeTestGenerator(base.BasicGeneratorSet):
	@base.generator_type("string")
	@base.simple_generator
	def gen_int(self, _):
		return 4
	@base.generator_type("integer")
	@base.simple_generator
	def gen_string(self, _):
		return "XXXXXX"
	@base.generator_type("integer", "string")
	def gen_none(self, schema):
		expected_result = base._check_for_expected_result('gen_none', schema)
		return ('gen_none', None, expected_result)
	@base.generator_type("string")
	@base.simple_generator
	def gen_str_min_length(self, schema):
		min_length = schema.get("minLength", 0)
		if min_length > 0:
			return "x" * (min_length - 1)
	@base.generator_type("string", needed_property="maxLength")
	@base.simple_generator
	def g