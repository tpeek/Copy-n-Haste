__author__ = 'salcianu@google.com (Alex Salcianu)'
__pychecker__ = 'no-local'
FLAGS = gflags.FLAGS
DECLARED_KEY_FLAGS = ['tmod_bar_x', 'tmod_bar_z', 'tmod_bar_t',
					  'flagfile']
def DefineFlags(flag_values=FLAGS):
  module_bar.DefineFlags(flag_values=flag_values)
  gflags.DEFINE_boolean('tmod_foo_bool', True, 'Boolean flag
					   flag_values=flag_values)
  gflags.DEFINE_string('tmod_foo_str', 'default', 'String flag.',
					  flag_values=flag_values)
  gflags.DEFINE_integer('tmod_foo_int', 3, 'Sample int flag.',
					   flag_values=flag_values)
def DeclareKeyFlags(flag_values=FLAGS):
  for flag_name in DECLARED_KEY_FLAGS:
	gflags.DECLARE_key_flag(flag_name, flag_values=flag_values)
def DeclareExtraKeyFlags(flag_values=FLAGS):
  gflags.ADOPT_module_key_flags(module_bar, flag_values=flag_values)
def NamesOfDefinedFlags():
  return ['tmod_foo_bool', 'tmod_foo_str', 'tmod_foo_int']
def NamesOfDeclaredKeyFlags():
  return NamesOfDefinedFlags() + DECLARED_KEY_FLAGS
def NamesOfDeclaredExtraKeyFlags():
  names_of_extra_key_flags = list(module_bar.NamesOfDefinedFlags())
  for flag_name in NamesOfDeclaredKeyFlags():
	while flag_name in names_of_extra_key_flags:
	  names_of_extra_key_flags.remove(flag_name)
  return names_of_extra_key_flags
def RemoveFlags(flag_values=FLAGS):
  for flag_name in NamesOfDefinedFlags():
	module_bar.RemoveOneFlag(flag_name, flag_values=flag_values)
  module_bar.RemoveFlags(flag_values=flag_values)
def GetModuleName():
  return gflags._GetCallingModule()
def DuplicateFlags(flagnames=None):
  flag_values = gflags.FlagValues()
  for name in flagnames:
	gflags.DEFINE_boolean(name, False, 'Flag named %s' % (name,),
						 flag_values=flag_values)
  return flag_values