def parse_records_file(filename):
	fh = open(filename)
	settings = {}
	for line in fh:
		line = line.strip()
		if line.startswith('CONFIG') or line.startswith('LOCAL'):
			parts = line.split()
			if parts[2] == 'FLOAT':
				parts[3] = parts[3].rstrip('0')
			if parts[2] == 'INT' and parts[3][-1] in 'KMG':
				unit = parts[3][-1]
				val = parts[3][:-1]
				if unit == 'K':
					val = int(val) * 1024
				if unit == 'M':
					val = int(val) * 1048576
				if unit == 'G':
					val = int(val) * 1073741824
				parts[3] = str(val)
			try:
				settings[parts[1]] = parts[3]
			except IndexError:
				sys.stderr.write("Skipping malformed line: %s\n" % line)
				continue
	return settings
def compare_settings(old, new):
	for key in sorted(tuple(set(old) | set(new))):
		if key not in old:
			old[key] = "missing"
		if key not in new:
			new[key] = "missing"
	for key in sorted(old):
		if old[key].startswith('@') and old[key].endswith('@'):
			continue
		if old[key] != new[key]:
			print "%s %s -> %s" % (key, old[key], new[key])
if __name__ == '__main__':
	settings_orig = parse_records_file(sys.argv[1])
	settings_new = parse_records_file(sys.argv[2])
	compare_settings(settings_orig, settings_new)