encoder_to_utf = codecs.lookup('utf-8')
encoder_to_sys = codecs.lookup(Configuration.LOCALE_ENCODING)
not_needed1, not_needed2, not_needed3 = False, False, False
if Configuration.LOCALE_ENCODING == 'UTF8':
	not_needed1, not_needed2, not_needed3 = True, True, True
def to_utf8(s):
	if not_needed1: return s
	try:
		_out = unicode(s, Configuration.LOCALE_ENCODING).encode('utf-8')
		return _out
	except UnicodeDecodeError:
		sys.stderr.write(_('Could not convert: "%s"') % (s+"\n"))
		raise
	except UnicodeEncodeError:
		sys.stderr.write(_('Could not encode: "%s"') % (s+"\n"))
		raise
	except TypeError:
		return s
def to_db_utf8(s):
	if not_needed2: return s
	try:
		(_out, _len) = encoder_to_utf.encode(unicode(s))
		return _out
	except UnicodeDecodeError:
		sys.stderr.write(_('Could not convert: "%s"') % (s+"\n"))
		raise
	except UnicodeEncodeError:
		sys.stderr.write(_('Could not encode: "%s"') % (s+"\n"))
		raise
def to_gui(s):
	if not_needed3: return s
	try:
		(_out, _len) = encoder_to_sys.encode(s, 'replace')
		return _out
	except UnicodeDecodeError:
		sys.stderr.write(_('Could not convert: "%s"') % (s+"\n"))
		raise
	except UnicodeEncodeError:
		sys.stderr.write(_('Could not encode: "%s"') % (s+"\n"))
		raise