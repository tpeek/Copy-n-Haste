if platform.system() == 'Windows':
	PROGRAM_FILES = winpaths.get_program_files()
	LOCAL_APPDATA = winpaths.get_local_appdata()
class DetectInstalledSites():
	def __init__(self, sitename = "All"):
		self.Config=Configuration.Config()
		self.sitename = sitename
		self.heroname = ""
		self.hhpath = ""
		self.detected = ""
								"PartyPoker",
								"Merge",
								"PokerStars"]
		self.supportedPlatforms = ["Linux", "XP", "Win7"]
		if sitename == "All":
			for siteiter in self.supportedSites:
				self.sitestatusdict[siteiter]=self.detect(siteiter)
		else:
			self.sitestatusdict[sitename]=self.detect(sitename)
			self.heroname = self.sitestatusdict[sitename]['heroname']
			self.hhpath = self.sitestatusdict[sitename]['hhpath']
			self.detected = self.sitestatusdict[sitename]['detected']
		return
	def detect(self, siteToDetect):
		self.pathfound = ""
		self.herofound = ""
		if siteToDetect == "Full Tilt Poker":
			self.detectFullTilt()
		elif siteToDetect == "PartyPoker":
			self.detectPartyPoker()
		elif siteToDetect == "PokerStars":
			self.detectPokerStars()
		elif siteToDetect == "Merge":
			self.detectMergeNetwork()
		if (self.pathfound and self.herofound):
			self.pathfound = unicode(self.pathfound)
			self.herofound = unicode(self.herofound)
			return {"detected":True, "hhpath":self.pathfound, "heroname":self.herofound}
		else:
			return {"detected":False, "hhpath":"", "heroname":""}
	def detectFullTilt(self):
		if self.Config.os_family == "Linux":
			hhp=os.path.expanduser("~/.wine/drive_c/Program Files/Full Tilt Poker/HandHistory/")
		elif self.Config.os_family == "XP":
			hhp=os.path.expanduser(PROGRAM_FILES+"\\Full Tilt Poker\\HandHistory\\")
		elif self.Config.os_family == "Win7":
			hhp=os.path.expanduser(PROGRAM_FILES+"\\Full Tilt Poker\\HandHistory\\")
		else:
			return
		if os.path.exists(hhp):
			self.pathfound = hhp
		else:
			return
		try:
			self.herofound = os.listdir(self.pathfound)[0]
			self.pathfound = self.pathfound + self.herofound
		except:
			pass
		return
		
	def detectPokerStars(self):
		if self.Config.os_family == "Linux":
			hhp=os.path.expanduser("~/.wine/drive_c/Program Files/PokerStars/HandHistory/")
		elif self.Config.os_family == "XP":
			hhp=os.path.expanduser(PROGRAM_FILES+"\\PokerStars\\HandHistory\\")
		elif self.Config.os_family == "Win7":
			hhp=os.path.expanduser(LOCAL_APPDATA+"\\PokerStars\\HandHistory\\")
		else:
			return
		if os.path.exists(hhp):
			self.pathfound = hhp
		else:
			return
		try:
			self.herofound = os.listdir(self.pathfound)[0]
			self.pathfound = self.pathfound + self.herofound
		except:
			pass
		return
	def detectPartyPoker(self):
		if self.Config.os_family == "Linux":
			hhp=os.path.expanduser("~/.wine/drive_c/Program Files/PartyGaming/PartyPoker/HandHistory/")
		elif self.Config.os_family == "XP":
			hhp=os.path.expanduser(PROGRAM_FILES+"\\PartyGaming\\PartyPoker\\HandHistory\\")
		elif self.Config.os_family == "Win7":
			hhp=os.path.expanduser("c:\\Programs\\PartyGaming\\PartyPoker\\HandHistory\\")
		else:
			return
		if os.path.exists(hhp):
			self.pathfound = hhp
		else:
			return
		dirs = os.listdir(self.pathfound)
		if "XMLHandHistory" in dirs:
			dirs.remove("XMLHandHistory")
		try:
			self.herofound = dirs[0]
			self.pathfound = self.pathfound + self.herofound
		except:
			pass
		return
	def detectMergeNetwork(self):
		merge_skin_names = ["CarbonPoker", "PlayersOnly", "BlackChipPoker", "RPMPoker", "HeroPoker"]
		
		for skin in merge_skin_names:
			if self.Config.os_family == "Linux":
				hhp=os.path.expanduser("~/.wine/drive_c/Program Files/"+skin+"/history/")
			elif self.Config.os_family == "XP":
				hhp=os.path.expanduser(PROGRAM_FILES+"\\"+skin+"\\history\\")			
			elif self.Config.os_family == "Win7":
				hhp=os.path.expanduser(PROGRAM_FILES+"\\"+skin+"\\history\\")
			else:
				return
			if os.path.exists(hhp):
				self.pathfound = hhp
				try:
					self.herofound = os.listdir(self.pathfound)[0]
					self.pathfound = self.pathfound + self.herofound
					break
				except:
					continue
		return