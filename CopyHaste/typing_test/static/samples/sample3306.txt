cwd = os.getcwd()
searchasset_filepath = os.path.join(os.getcwd(), "data\json_searchAssets.json")
os.chdir(cwd)
class MainDriverScript(BaseTestCase):
	fake = Factory.create()
	@attr(priority="high")
	def test_AS_01_To_Verify_Delete_When_No_Assets_Are_Available(self):
		selectAction_dropdown = self.driver.find_element_by_xpath(".//*[@id='asset_actions_dropdown']/button[2]")
		selectAction_dropdown.click()
		selectAction_dropdown_delete = self.driver.find_element_by_xpath(".//*[@id='asset_actions_dropdown']/ul/li/a")
		self.assertFalse(selectAction_dropdown_delete.is_enabled(), "Delete must be disabled.")
	@attr(priority="high")
	def test_AS_02_To_Verify_Delete_Deselect_All_Assets(self):
		assets_checkbox = self.driver.find_elements_by_xpath(".//*[@id='assetstable']/tbody/tr/td[1]/label/span/span[2]")
		for asset_checkbox in assets_checkbox:
			if asset_checkbox.is_selected():
				asset_checkbox.click()
		selectAction_dropdown = self.driver.find_element_by_xpath(".//*[@id='asset_actions_dropdown']/button[2]")
		selectAction_dropdown.click()
		selectAction_dropdown_delete = self.driver.find_element_by_xpath(".//*[@id='asset_actions_dropdown']/ul/li/a")
		self.assertFalse(selectAction_dropdown_delete.is_enabled(), "Delete must be disabled.")
	@attr(priority="high")
	@SkipTest
	def test_AS_03_To_Verify_Delete_Asset_Should_Be_Deleted(self):
		asset_checkbox = self.driver.find_element_by_xpath(".//*[@id='assetstable']/tbody/tr[1]/td[1]/label/span/span[2]")
		asset_checkbox.click()
		selectAction_dropdown = self.driver.find_element_by_xpath(".//*[@id='asset_actions_dropdown']/button[2]")
		selectAction_dropdown.click()
		selectAction_dropdown_delete = self.driver.find_element_by_xpath(".//*[@id='asset_actions_dropdown']/ul/li/a")
		selectAction_dropdown_delete.click()
		sleep(5)
		delete_button = self.driver.find_element_by_xpath(".//*[@id='delete_asset_modal']/div/div/div[3]/button[2]")
		delete_button.click()
		sleep(5)
		print("First record deleted successfully.")
	@attr(priority="high")
	def test_AS_04_To_Verify_Delete_Asset_Cancel(self):
		asset_checkbox = self.driver.find_element_by_xpath(".//*[@id='assetstable']/tbody/tr[1]/td[1]/label/span/span[2]")
		asset_checkbox.click()
		sleep(5)
		selectAction_dropdown = self.driver.find_element_by_xpath(".//*[@id='asset_actions_dropdown']/button[2]")
		selectAction_dropdown.click()
		sleep(5)
		selectAction_dropdown_delete_link = self.driver.find_element_by_xpath(".//*[@id='asset_actions_dropdown']/ul/li/a")
		selectAction_dropdown_delete_link.click()
		sleep(5)
		cancel_button = self.driver.find_element_by_xpath(".//*[@id='delete_asset_modal']/div/div/div[3]/button[1]")
		cancel_button.click()
		print("First record cancelled successfully.")
	@attr(priority="high")
	def test_AS_06_To_Verify_The_Filter_Function_Filter_By_Place(self):
		self.driver.find_element_by_xpath("//*[@id='span_filters']/div/div/button[2]").click()
		self.driver.find_element_by_link_text("Place").click()
		places = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		print "Found " + str(len(places)) + " Places Asset Types :"
		for place in places:
			print place.text
		for i in self.driver.find_elements_by_xpath(".//*[@id='assetstable']/tbody/tr/td[3]"):
			 self.assertEqual(i.text, "Place")
	@attr(priority="high")
	def test_AS_07_To_Verify_The_Filter_Function_Filter_By_School(self):
		self.driver.find_element_by_xpath("//span[@id='span_filters']/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		schools = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		print "Found " + str(len(schools)) + " Schools Asset Types :"
		for school in schools:
			print school.text
		for i in self.driver.find_elements_by_xpath(".//*[@id='assetstable']/tbody/tr/td[3]"):
			 self.assertEqual(i.text, "School")
	@attr(priority="high")
	def test_AS_11_To_Verify_The_Reset_Filter_Function(self):
		resetFilter = self.driver.find_element_by_xpath(".//*[@id='span_filters']/button")
		resetFilter.click()
		expectedAfterResetFilter = self.driver.find_element_by_xpath(".//*[@id='span_filters']/div/div/button[1]").text
		self.assertEqual("Asset Type",expectedAfterResetFilter)
	@attr(priority="high")
	def test_AS_12_To_Verify_The_Search_For_Asset_Function_Search_By_Name(self):
		print "Getting Search data
		with open(searchasset_filepath) as data_file:
			data_SearchAsset_text = json.load(data_file)
			for each in data_SearchAsset_text:
				searchText = each["Search_name"]
				searchAsset_textbox = self.driver.find_element_by_id("txt_search_assets")
				searchAsset_textbox.clear()
				searchAsset_textbox.send_keys(searchText)
				sleep(5)
				expectedAfterSearchFilter = self.driver.find_element_by_xpath(".//*[@id='assetstable']/tbody/tr/td").text
				searchNames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
				print "Found " + str(len(searchNames)) + " by Name search."
				sleep(2)
				searchAsset_textbox.clear()
				sleep(2)
				for searchName in searchNames:
					if expectedAfterSearchFilter:
						self.assertEqual("No matching records found", expectedAfterSearchFilter, "No records to find asset.")
						sleep(2)
					else:
						print searchName.text
						sleep(2)
				searchAsset_textbox.clear()
				sleep(2)
	@attr(priority="high")
	@SkipTest
	def test_AS_14_To_Verify_Create_Asset_Function_Create_Place_Asset(self):
		clickCreateAsset = self.driver.find_element_by_xpath("//img[@alt='Create asset']")
		clickCreateAsset.click()
		sleep(12)
		self.driver.switch_to.active_element
		Create_Asset_Title = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/div/h4").text
		sleep(2)
		self.assertEqual("Asset overview", Create_Asset_Title)
		self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[1]/div/div/button[2]").click()
		self.driver.find_element_by_link_text("Place").click()
		sleep(10)
		place_name = self.driver.find_element_by_xpath("//input[@ng-model='model']")
		place_address = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']")
		place_address2 = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']")
		place_city = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']")
		place_state = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']")
		place_zip = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']")
		place_owner = self.driver.find_element_by_xpath("//input[@placeholder='Owner']")
		place_phone = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/div[3]/input")
		place_type = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/button[2]")
		place_cancel = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[1]")
		place_save = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[2]")
		fake = Factory.create()
		place_name.send_keys("kk place automation test")
		place_name.send_keys(Keys.TAB)
		sleep(2)
		place_address.send_keys(fake.address())
		place_address.send_keys(Keys.TAB)
		sleep(2)
		place_address2.send_keys(fake.secondary_address())
		place_address2.send_keys(Keys.TAB)
		sleep(2)
		place_city.send_keys(fake.city())
		place_city.send_keys(Keys.TAB)
		sleep(2)
		place_state.send_keys(fake.state_abbr())
		place_state.send_keys(Keys.TAB)
		sleep(2)
		place_zip.send_keys(fake.zipcode())
		place_zip.send_keys(Keys.TAB)
		sleep(2)
		place_phone.send_keys(fake.phone_number())
		place_phone.send_keys(Keys.TAB)
		sleep(2)
		place_owner.send_keys(fake.domain_name())
		place_owner.send_keys(Keys.TAB)
		sleep(2)
		place_type.click()
		self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li[2]/a").click()
		sleep(2)
		place_save.click()
		sleep(20)
		expected_placename = self.driver.find_element_by_xpath(".//*[@id='header']/div[1]/span[3]/span").text
		self.driver.find_element_by_link_text("Assets").click()
		self.assertEqual("kk place automation test", expected_placename )
		sleep(20)
	@attr(priority="high")
	@SkipTest
	def test_AS_17_To_Verify_That_Created_Asset_Displayed_In_The_List(self):
		searchAsset_textbox = self.driver.find_element_by_id("txt_search_assets")
		searchAsset_textbox.clear()
		searchAsset_textbox.send_keys(self.Place_name)
		sleep(10)
		for i in self.driver.find_elements_by_xpath(".//*[@id='assetstable']/tbody/tr/td[2]"):
			print (i.text)
			self.assertEqual("rgba(255, 236, 158, 1)", i.value_of_css_property("background-color"))
		searchAsset_textbox.clear()
	@attr(priority="high")
	def test_AS_29_To_Click_On_Save_Without_FirstName_Asset_ContactInfo_Field(self):
		searchAsset_textbox = self.driver.find_element_by_id("txt_search_assets")
		searchAsset_textbox.clear()
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		self.driver.find_element_by_name("last_name").click()
		state = self.driver.find_element_by_xpath(".//*[@id='asset_contact_error']/div[1]/small").is_displayed()
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		sleep(2)
		self.assertTrue(state, "Error message is not displayed for First Name")
	@attr(priority="high")
	def test_AS_30_To_Click_On_Save_Without_LastName_Asset_ContactInfo_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		self.driver.find_element_by_name("first_name").send_keys("Firtst Name")
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		self.driver.find_element_by_name("first_name").click()
		state =(self.driver.find_element_by_xpath(".//*[@id='asset_contact_error']/div[2]/small").is_displayed())
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		sleep(2)
		self.assertTrue(state, "Error message is not displayed for Last Name")
	@attr(priority="high")
	def test_AS_31_To_Click_On_Save_With_Email_Asset_Detail_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(5)
		self.driver.find_element_by_xpath(".//div[contains(text(),'Details')]/div/img").click()
		self.driver.find_element_by_xpath("//input[@placeholder='Email']").clear()
		self.driver.find_element_by_xpath("//input[@placeholder='Email']").send_keys("test@test")
		sleep(4)
		self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[2]/button[2]").click()
		sleep(4)
		email = (self.driver.find_element_by_xpath(".//span[text()='Email']/../following-sibling::td").text)
		sleep(2)
		self.driver.find_element_by_link_text("Assets").click()
		regex = re.compile(r'[\w.-]+@[\w.-]+')
		self.assertRegexpMatches(email, regex, "Expected and actual value is not matching for EMAIL")
	@attr(priority="high")
	def test_AS_32_To_Click_On_Save_With_Wrong_Email_Asset_Detail_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(5)
		self.driver.find_element_by_xpath(".//div[contains(text(),'Details')]/div/img").click()
		sleep(2)
		self.driver.find_element_by_xpath("//input[@placeholder='Email']").clear()
		self.driver.find_element_by_xpath("//input[@placeholder='Email']").send_keys("testtest")
		self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[2]/button[2]").click()
		state =(self.driver.find_element_by_xpath(".//*[@id='asset_contact_error']/div[6]/small").is_displayed())
		self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		sleep(2)
		self.assertFalse(state, "Error message is not displayed for wrong EMAIL")
	@attr(priority="high")
	def test_AS_33_To_Click_On_Save_With_FirstName_Asset_ContactInfo_Field(self):
		firstname = "FirstName"
		lastname = "ZLastName"
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys(firstname)
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys(lastname)
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		exp_firstname = self.driver.find_element_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])[1]").text
		print exp_firstname
		self.driver.find_element_by_link_text("Assets").click()
		regex = re.compile(r'[\w.-@]+\,\s[\w.-@]+')
		self.assertRegexpMatches(exp_firstname, regex, "Expected and actual value is not matching for First Name")
	@attr(priority="high")
	def test_AS_34_To_Click_On_Save_With_Title_Asset_ContactInfo_Field(self):
		firstname = "FirstName"
		lastname = "ZLastName"
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys(firstname)
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys(lastname)
		self.driver.find_element_by_xpath("//input[@placeholder='Prefix']").clear()
		self.driver.find_element_by_xpath("//input[@placeholder='Prefix']").send_keys("Prefix")
		self.driver.find_element_by_xpath("//input[@placeholder='Title']").clear()
		self.driver.find_element_by_xpath("//input[@placeholder='Title']").send_keys("Title")
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		title = self.driver.find_element_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])[1]/../following-sibling::td[1]").text
		self.driver.find_element_by_link_text("Assets").click()
		self.assertEqual("Title", title, "Expected and actual value is not matching for Title")
	@attr(priority="high")
	def test_AS_35_To_Click_On_Save_With_Phone_Asset_ContactInfo_Field(self):
		firstname = "FirstName"
		lastname = "ZLastName"
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys(firstname)
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys(lastname)
		self.driver.find_element_by_name("phone").clear()
		self.driver.find_element_by_name("phone").send_keys("111-222-9999")
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		phone = self.driver.find_element_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])[1]/../following-sibling::td[2]").text
		self.driver.find_element_by_link_text("Assets").click()
		self.assertEqual("111-222-9999", phone, "Expected and actual value is not matching for Phone")
	@attr(priority="high")
	def test_AS_36_To_Click_On_Save_With_Email_Asset_ContactInfo_Field(self):
		firstname = "FirstName"
		lastname = "ZLastName"
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys(firstname)
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys(lastname)
		self.driver.find_element_by_name("email").clear()
		self.driver.find_element_by_name("email").send_keys("text@text")
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		email = self.driver.find_element_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])[1]/../following-sibling::td[3]").text
		self.driver.find_element_by_link_text("Assets").click()
		regex = re.compile(r'[\w.-]+@[\w.-]+')
		self.assertRegexpMatches(email, regex, "Expected and actual value is not matching for EMAIL")
	@attr(priority="high")
	def test_AS_37_To_Click_On_Save_With_Wrong_Email_Asset_ContactInfo_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(2)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys("Test")
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys("Test1")
		self.driver.find_element_by_name("email").clear()
		self.driver.find_element_by_name("email").send_keys("texttext.com")
		sleep(2)
		self.driver.find_element_by_name("last_name").click()
		state =(self.driver.find_element_by_xpath("//*[@id='asset_contact_error']/div[6]//small").is_displayed())
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		self.assertTrue(state, "Error message is not displayed for wrong EMAIL address.")
	@attr(priority="high")
	def test_AS_38_To_Delete_Contact_Asset_ContactInfo_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys("Test")
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys("Test1")
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
		self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		sleep(2)
		try:
			self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed()
			self.driver.find_element_by_link_text("Assets").click()
			self.assertFalse("Contact not deleted")
		except NoSuchElementException:
			self.driver.find_element_by_link_text("Assets").click()
			self.assertTrue("Contact has been deleted")
	@attr(priority="high")
	def test_AS_39_To_Click_On_Save_Address_Asset_ContactInfo_Field(self):
		address_1 = r"635 Lubowitz Lights Apt. 404"
		address_2 = r"Suite 950"
		city = r"North Estiefurt"
		state = "AB"
		zip_code = "12345"
		exp_city = city+", "+state+"  "+zip_code
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys("firstname")
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys("lastname")
		self.driver.find_element_by_name("address").clear()
		self.driver.find_element_by_name("address").send_keys(address_1)
		self.driver.find_element_by_xpath("*//input[@ng-model='contact_edit.address.address2']").clear()
		self.driver.find_element_by_xpath("*//input[@ng-model='contact_edit.address.address2']").send_keys(address_2)
		self.driver.find_element_by_xpath("*//input[@placeholder='City']").clear()
		self.driver.find_element_by_xpath("*//input[@placeholder='City']").send_keys(city)
		self.driver.find_element_by_name("state").clear()
		self.driver.find_element_by_name("state").send_keys(state)
		self.driver.find_element_by_name("zip").clear()
		self.driver.find_element_by_name("zip").send_keys(zip_code)
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		sleep(2)
		act_address_1 = self.driver.find_element_by_xpath("//tr[@ng-if='main_contact.address.address1']//td[contains(@class, 'tableitemvalue ng-binding')]").text
		act_address_2 = self.driver.find_element_by_xpath("//tr[@ng-if='main_contact.address.address2']//td[contains(@class,'tableitemvalue ng-binding')]").text
		act_city =  self.driver.find_element_by_xpath("//tr[@ng-if='main_contact.address.state']//td[contains(@class,'tableitemvalue ng-binding')]").text
		self.driver.find_element_by_link_text("Assets").click()
		self.assertEqual(address_1, act_address_1, "Address 1 is not matching")
		self.assertEqual (address_2, act_address_2, "Address 2 is not matching")
		self.assertEqual(exp_city, act_city, "City is not Matching")
		sleep(2)
	@attr(priority="high")
	def test_AS_assesnding_desending(self):
		firstname = "FirstName"
		lastname = "ZLastName"
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			while (self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed()):
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		firstnamelist= ['def', 'jkl', 'pqr', 'vwx']
		secondnamelist=['abc','ghi','mno', 'stu']
		phonelist = ['111-111-1111','222-222-2222', '333-333-3333', '444-444-4444']
		emaillist = ['abc@def', 'ghi@jkl','mno@pqr', 'stu@vwx']
		tilelist = ['AA', 'BB', 'CC', 'DD']
		exp_name_ascending = "abc, def, ghi, jkl, mno, pqr, stu, vwx"
		exp_name_descending = "stu, vwx, mno, pqr, ghi, jkl, abc, def"
		exp_title_ascending = 'AA, BB, CC, DD'
		exp_title_descending = 'DD, CC, BB, AA'
		exp_phone_ascending = "111-111-1111, 222-222-2222, 333-333-3333, 444-444-4444"
		exp_phone_descending = "444-444-4444, 333-333-3333, 222-222-2222, 111-111-1111"
		exp_email_ascending = 'abc@def, ghi@jkl, mno@pqr, stu@vwx'
		exp_email_descending = 'stu@vwx, mno@pqr, ghi@jkl, abc@def'
		for i in range(4):
			self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
			self.driver.find_element_by_id('btn_add_asset_contact').click()
			sleep(2)
			self.driver.find_element_by_name("first_name").clear()
			self.driver.find_element_by_name("first_name").send_keys(firstnamelist[i])
			self.driver.find_element_by_name("last_name").clear()
			self.driver.find_element_by_name("last_name").send_keys(secondnamelist[i])
			self.driver.find_element_by_xpath("//input[@placeholder='Title']").clear()
			self.driver.find_element_by_xpath("//input[@placeholder='Title']").send_keys(tilelist[i])
			self.driver.find_element_by_name("phone").clear()
			self.driver.find_element_by_name("phone").send_keys(phonelist[i])
			self.driver.find_element_by_name("email").clear()
			self.driver.find_element_by_name("email").send_keys(emaillist[i])
			self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
			sleep(2)
		self.driver.find_element_by_xpath(".//*[@id='contacts_table']/thead/tr/th[1]").click()
		sleep(2)
		act_name_list = self.driver.find_elements_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])")
		act_title_list = self.driver.find_elements_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])/../following-sibling::td[1]")
		act_phone_list = self.driver.find_elements_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])/../following-sibling::td[2]")
		act_email_list = self.driver.find_elements_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])/../following-sibling::td[3]")
		act_name_list_value =[]
		act_title_list_value =[]
		act_phone_list_value =[]
		act_email_list_value =[]
		for name in act_name_list:
			print name.text
			act_name_list_value.append(name.text)
		for title in act_title_list:
			print title.text
			act_title_list_value.append(title.text)
		for phone in act_phone_list:
			print phone.text
			act_phone_list_value.append(phone.text)
		for email in act_email_list:
			print email.text
			act_email_list_value.append(email.text)
		print ", ".join(act_name_list_value)
		print ", ".join(act_title_list_value)
		print ", ".join(act_phone_list_value)
		print ", ".join(act_email_list_value)
		self.assertTrue(", ".join(act_name_list_value), exp_name_descending)
		self.assertTrue(", ".join(act_title_list_value), exp_title_descending)
		self.assertTrue(", ".join(act_phone_list_value), exp_phone_descending)
		self.assertTrue(", ".join(act_email_list_value), exp_email_descending)
		print "finaaaaaaaaaaaaa"
		self.driver.find_element_by_xpath(".//*[@id='contacts_table']/thead/tr/th[1]").click()
		sleep(2)
		act_name_list = self.driver.find_elements_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])")
		act_title_list = self.driver.find_elements_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])/../following-sibling::td[1]")
		act_phone_list = self.driver.find_elements_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])/../following-sibling::td[2]")
		act_email_list = self.driver.find_elements_by_xpath("(//table[@id='contacts_table']//tbody//tr/td//a[@class='showaslink showaslink-edit'])/../following-sibling::td[3]")
		act_name_list_value =[]
		act_title_list_value =[]
		act_phone_list_value =[]
		act_email_list_value =[]
		for name in act_name_list:
			print name.text
			act_name_list_value.append(name.text)
		for title in act_title_list:
			print title.text
			act_title_list_value.append(title.text)
		for phone in act_phone_list:
			print phone.text
			act_phone_list_value.append(phone.text)
		for email in act_email_list:
			print email.text
			act_email_list_value.append(email.text)
		print ", ".join(act_name_list_value)
		print ", ".join(act_title_list_value)
		print ", ".join(act_phone_list_value)
		print ", ".join(act_email_list_value)
		self.assertTrue(", ".join(act_name_list_value), exp_name_ascending)
		self.assertTrue(", ".join(act_title_list_value), exp_title_ascending)
		self.assertTrue(", ".join(act_phone_list_value), exp_phone_ascending)
		self.assertTrue(", ".join(act_email_list_value), exp_email_ascending)
	@attr(priority="high")
	def test_AS_40_To_Click_On_Save_Wrong_State_Asset_ContactInfo_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys("firstname")
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys("lastname")
		self.driver.find_element_by_name("state").clear()
		self.driver.find_element_by_name("state").send_keys("ABC")
		self.driver.find_element_by_name("zip").click()
		state =(self.driver.find_element_by_xpath("//*[@id='asset_contact_error']/div[3]/small").is_displayed())
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		sleep(2)
		self.assertTrue(state, "Error message is not displayed for wrong State")
	@attr(priority="high")
	def test_AS_41_To_Click_On_Save_Wrong_Zip_1_Asset_ContactInfo_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys("firstname")
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys("lastname")
		self.driver.find_element_by_name("zip").clear()
		self.driver.find_element_by_name("zip").send_keys("AAAAA")
		self.driver.find_element_by_name("state").click()
		state =(self.driver.find_element_by_xpath("//*[@id='asset_contact_error']/div[4]/small").is_displayed())
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		sleep(2)
		self.assertTrue(state, "Error message is not displayed for wrong zip code")
	@attr(priority="high")
	def test_AS_42_To_Click_On_Save_Wrong_Zip_2_Asset_ContactInfo_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys("firstname")
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys("lastname")
		self.driver.find_element_by_name("zip").clear()
		self.driver.find_element_by_name("zip").send_keys(123456)
		self.driver.find_element_by_name("state").click()
		state =(self.driver.find_element_by_xpath("//*[@id='asset_contact_error']/div[4]/small").is_displayed())
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		sleep(2)
		self.assertTrue(state, "Error message is not displayed for wrong zip code")
	@attr(priority="high")
	def test_AS_43_To_Click_On_Save_With_Prefix_Asset_ContactInfo_Field(self):
		firstname = "FirstName"
		lastname = "ZLastName"
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(4)
		self.driver.find_element_by_name("first_name").clear()
		self.driver.find_element_by_name("first_name").send_keys(firstname)
		self.driver.find_element_by_name("last_name").clear()
		self.driver.find_element_by_name("last_name").send_keys(lastname)
		self.driver.find_element_by_xpath("//input[@placeholder='Prefix']").clear()
		self.driver.find_element_by_xpath("//input[@placeholder='Prefix']").send_keys("Prefix")
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[2]").click()
		prefix = self.driver.find_element_by_xpath("//div[@id='form_main_contact']//div//table//tbody/tr//td//span[text()='Name']/../following-sibling::td").text
		self.driver.find_element_by_link_text("Assets").click()
		self.assertEqual("Prefix", (prefix.split())[0], "Prefix value is not matching")
	@attr(priority="high")
	def test_AS_44_To_Click_On_Cancel_Asset_ContactInfo_Field(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(2)
		try:
			if self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").is_displayed():
				self.driver.find_element_by_xpath(".//*[@id='contacts_table']/tbody/tr/td[5]/a/img").click()
				self.driver.find_element_by_xpath(".//*[@id='asset_delete_contact_modal']/div/div/div[3]/button[2]").click()
		except NoSuchElementException:
			print "No contact"
		self.driver.find_element_by_xpath("//div[contains(text(), 'Points of Contact')]")
		self.driver.find_element_by_id('btn_add_asset_contact').click()
		sleep(2)
		self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal']/div/div/form/div[2]/button[1]").click()
		try:
			state = self.driver.find_element_by_xpath(".//*[@id='asset_contact_modal_title']").is_displayed()
			self.driver.find_element_by_link_text("Assets").click()
			self.assertFalse(state, "Asset Contact Window not Closed.")
		except NoSuchElementException:
			self.driver.find_element_by_link_text("Assets").click()
			self.assertTrue("Pass", "Asset Contact Window has been Closed.")
	@attr(priority="high")
	def test_AS_45_Name_With_No_Value_Asset_Overview(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(8)
		self.driver.find_element_by_xpath("//div[contains(text(),'Overview')]/div/img").click()
		self.driver.find_element_by_name("name").clear()
		state = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/form/div[2]/button[2]").is_enabled()
		self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		self.assertFalse(state, "Save button is enabled.")
	@attr(priority="high")
	def test_AS_46_State_With_Wrong_Value_1_Asset_Overview(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(8)
		self.driver.find_element_by_xpath("//div[contains(text(),'Overview')]/div/img").click()
		self.driver.find_element_by_xpath("//div[@aria-hidden='false']//input[@placeholder='State']").clear()
		self.driver.find_element_by_xpath("//div[@aria-hidden='false']//input[@placeholder='State']").send_keys(12)
		sleep(3)
		state = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/form/div[2]/button[2]").is_enabled()
		self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		self.assertFalse(state, "Save button is enabled.")
	@attr(priority="high")
	def test_AS_47_State_With_Wrong_Value_2_Asset_Overview(self):
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(8)
		self.driver.find_element_by_xpath("//div[contains(text(),'Overview')]/div/img").click()
		self.driver.find_element_by_xpath("//div[@aria-hidden='false']//input[@placeholder='State']").clear()
		self.driver.find_element_by_xpath("//div[@aria-hidden='false']//input[@placeholder='State']").send_keys("aaaaa")
		sleep(3)
		state = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/form/div[2]/button[2]").is_enabled()
		self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/div/button").click()
		self.driver.find_element_by_link_text("Assets").click()
		self.assertFalse(state, "Save button is enabled.")
	@attr(priority="high")
	def test_AS_48_Asset_School_Overview_All_Field(self):
		school_name = r"Preston Hall Middle School"
		address_1 = r"605 Main St"
		address_2 = r"12th Cross"
		city = r"Waitsburg"
		state = r"WA"
		zip_code = r"94821"
		phone = r"111-111-1111"
		grade = r"Grade"
		district = r"Dist"
		school_type = r"Type"
		owner = r"Indecomm"
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(8)
		self.driver.find_element_by_xpath("//div[contains(text(),'Overview')]/div/img").click()
		self.driver.find_element_by_name("name").clear()
		self.driver.find_element_by_name("name").send_keys(school_name,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']").send_keys(address_1,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']").send_keys(address_2,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']").send_keys(city,Keys.TAB )
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']").send_keys(state,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']").send_keys(zip_code,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.phone']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.phone']").send_keys(phone)
		self.driver.find_element_by_xpath("//div[@label='District']//button[@data-toggle='dropdown']").click()
		self.driver.find_element_by_xpath("//div[@label='District']//button[@data-toggle='dropdown']").send_keys(Keys.TAB, district, Keys.TAB, Keys.ENTER)
		self.driver.find_element_by_xpath("//div[@label='Grade']//button[@data-toggle='dropdown']").click()
		self.driver.find_element_by_xpath("//div[@label='Grade']//button[@data-toggle='dropdown']").send_keys(Keys.TAB, grade, Keys.TAB, Keys.ENTER)
		self.driver.find_element_by_xpath("//input[@placeholder='Owner']").clear()
		self.driver.find_element_by_xpath("//input[@placeholder='Owner']").send_keys(owner)
		self.driver.find_element_by_xpath("(//div[@label='Type']//button[@data-toggle='dropdown'])[2]").click()
		self.driver.find_element_by_xpath("(//div[@label='Type']//button[@data-toggle='dropdown'])[2]").send_keys(Keys.TAB, school_type, Keys.TAB, Keys.ENTER)
		self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/form/div[2]/button[2]").click()
		sleep(2)
		act_school_name = self.driver.find_element_by_xpath("//table/tbody/tr[@ng-show='asset.overview.name']//td[contains(@class,'tableitemvalue')]").text
		act_address  = self.driver.find_element_by_xpath("//table/tbody/tr[contains(@ng-if,'overview.address')]//td[contains(@class,'tableitemvalue')]").text
		act_phone = self.driver.find_element_by_xpath("//td//span[text()='Phone']/../following-sibling::td").text
		act_district = self.driver.find_element_by_xpath("//td//span[text()='District']/../following-sibling::td").text
		act_grade = self.driver.find_element_by_xpath("//td//span[text()='Grade']/../following-sibling::td").text
		act_owner = self.driver.find_element_by_xpath("//td//span[text()='Owner']/../following-sibling::td").text
		act_type = self.driver.find_element_by_xpath("//td//span[text()='Type']/../following-sibling::td").text
		act_overview = str(act_school_name)+" "+str(" ".join(act_address.splitlines()))+" "+str(act_phone)+" "+str(act_district)+" "+str(act_grade)+" "+str(act_owner)+" "+str(act_type)
		exp_overview = (school_name+" "+address_1+" "+address_2+" "+city+", "+state+"  "+zip_code+" "+phone+" "+district+" "+grade+" "+owner+" "+school_type)
		self.driver.find_element_by_link_text("Assets").click()
		self.assertEqual(act_overview, exp_overview, "Overview information are not macthing")
	@attr(priority="high")
	def test_AS_48_Asset_Place_Overview_All_Field(self):
		place_name = r"Preston Hall Middle Place"
		address_1 = r"605 Main St"
		address_2 = r"12th Cross"
		city = r"Waitsburg"
		state = r"WA"
		zip_code = r"94821"
		phone = r"111-111-1111"
		place_type = r"Type"
		owner = r"Indecomm"
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(8)
		self.driver.find_element_by_xpath("//div[contains(text(),'Overview')]/div/img").click()
		self.driver.find_element_by_name("name").clear()
		self.driver.find_element_by_name("name").send_keys(place_name,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']").send_keys(address_1,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']").send_keys(address_2,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']").send_keys(city,Keys.TAB )
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']").send_keys(state,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']").send_keys(zip_code,Keys.TAB)
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.phone']").clear()
		self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.phone']").send_keys(phone)
		self.driver.find_element_by_xpath("//input[@placeholder='Owner']").clear()
		self.driver.find_element_by_xpath("//input[@placeholder='Owner']").send_keys(owner)
		self.driver.find_element_by_xpath("(//div[@label='Type']//button[@data-toggle='dropdown'])[2]").click()
		self.driver.find_element_by_xpath("(//div[@label='Type']//button[@data-toggle='dropdown'])[2]").send_keys(Keys.TAB, place_type, Keys.TAB, Keys.ENTER)
		self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/form/div[2]/button[2]").click()
		sleep(2)
		act_place_name = self.driver.find_element_by_xpath("//table/tbody/tr[@ng-show='asset.overview.name']//td[contains(@class,'tableitemvalue')]").text
		act_address  = self.driver.find_element_by_xpath("//table/tbody/tr[contains(@ng-if,'overview.address')]//td[contains(@class,'tableitemvalue')]").text
		act_phone = self.driver.find_element_by_xpath("//td//span[text()='Phone']/../following-sibling::td").text
		act_owner = self.driver.find_element_by_xpath("//td//span[text()='Owner']/../following-sibling::td").text
		act_type = self.driver.find_element_by_xpath("//td//span[text()='Type']/../following-sibling::td").text
		act_overview = str(act_place_name)+" "+str(" ".join(act_address.splitlines()))+" "+str(act_phone)+" "+str(act_owner)+" "+str(act_type)
		exp_overview = (place_name+" "+address_1+" "+address_2+" "+city+", "+state+"  "+zip_code+" "+phone+" "+owner+" "+place_type)
		self.driver.find_element_by_link_text("Assets").click()
		self.assertEqual(act_overview, exp_overview, "Overview information are not macthing")
	@attr(priority="high")
	def test_AS_49_To_Verify_Create_Asset_Function_Create_School_Asset(self):
		sleep(10)
		clickCreateAsset = self.driver.find_element_by_xpath("//img[@alt='Create asset']")
		clickCreateAsset.click()
		sleep(12)
		self.driver.switch_to.active_element
		Create_Asset_Title = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/div/h4").text
		sleep(2)
		self.assertEqual("Asset overview", Create_Asset_Title)
		self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[1]/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		sleep(10)
		school_name = self.driver.find_element_by_xpath("//input[@ng-model='model']")
		school_address = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']")
		school_address2 = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']")
		school_city = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']")
		school_state = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']")
		school_zip = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']")
		school_owner = self.driver.find_element_by_xpath("//input[@placeholder='Owner']")
		school_phone = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/div[3]/input")
		school_district = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/button[1]")
		school_grade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/button[1]")
		school_type = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[5]/div/div/button[2]")
		school_cancel = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[1]")
		school_save = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[2]")
		self.assertTrue(school_name.is_enabled()
						and school_address.is_enabled()
						and school_address2.is_enabled()
						and school_city.is_enabled()
						and school_state.is_enabled()
						and school_zip.is_enabled()
						and school_owner.is_enabled()
						and school_phone.is_enabled()
						and school_type.is_enabled()
						and school_cancel.is_enabled()
						and school_save.is_enabled())
		school_name.send_keys("kk school automation test")
		school_name.send_keys(Keys.TAB)
		sleep(2)
		school_address.send_keys("indecomm")
		school_address.send_keys(Keys.TAB)
		sleep(2)
		school_address2.send_keys("MG Road")
		school_address2.send_keys(Keys.TAB)
		sleep(2)
		school_city.send_keys("Bangalore")
		school_city.send_keys(Keys.TAB)
		sleep(2)
		school_state.send_keys("KA")
		school_state.send_keys(Keys.TAB)
		sleep(2)
		school_zip.send_keys("56009")
		school_zip.send_keys(Keys.TAB)
		sleep(2)
		school_phone.send_keys("994-550-8652")
		school_phone.send_keys(Keys.TAB)
		sleep(2)
		school_district.click()
		sleep(2)
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li[1]/a").click()
		except:
			school_newdistrict = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li/input")
			school_newdistrict.click()
			school_newdistrict.send_keys("new")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			self.assertTrue(school_add.is_enabled())
			school_add.click()
		sleep(2)
		school_grade.click()
		sleep(2)
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li[1]/a").click()
		except:
			school_newgrade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li/input")
			school_newgrade.click()
			school_newgrade.send_keys("new")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			try:
				self.assertTrue(school_add.is_displayed())
			except:
				print("Add button not enabled")
			else:
				school_add.click()
		sleep(10)
		school_grade.send_keys(Keys.TAB)
		school_owner.send_keys("indecomm")
		school_owner.send_keys(Keys.TAB)
		sleep(10)
		school_save.click()
		sleep(5)
		self.assertEqual("kk school automation test", self.driver.find_element_by_xpath("//*[@id='header']/div[1]/span[3]/span").text)
		self.driver.find_element_by_link_text("Assets").click()
	@attr(priority="high")
	def test_AS_50_To_Verify_That_Created_SchoolAsset_Displayed_In_The_List(self):
		searchAsset_textbox = self.driver.find_element_by_id("txt_search_assets")
		searchAsset_textbox.clear()
		searchAsset_textbox.send_keys("kk school automation test")
		sleep(20)
		for i in self.driver.find_elements_by_xpath(".//*[@id='assetstable']/tbody/tr/td[2]"):
			print (i.text)
			self.assertEqual("rgba(255, 236, 158, 1)", i.value_of_css_property("background-color"))
		searchAsset_textbox.clear()
	@attr(priority="high")
	def test_AS_51_To_validate_SchoolName_Field(self):
		sleep(10)
		clickCreateAsset = self.driver.find_element_by_xpath("//img[@alt='Create asset']")
		clickCreateAsset.click()
		sleep(12)
		self.driver.switch_to.active_element
		WebDriverWait(self.driver,10).until(expected_conditions.presence_of_element_located((By.XPATH,"//div[@id='asset_overview_modal']/div/div/div/h4")))
		Create_Asset_Title = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/div/h4").text
		sleep(2)
		self.assertEqual("Asset overview", Create_Asset_Title)
		self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[1]/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		school_name = self.driver.find_element_by_xpath("//input[@ng-model='model']")
		school_save = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[2]")
		school_cancel = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[1]")
		school_save.click()
		self.assertEqual("Asset overview", Create_Asset_Title)
		self.assertTrue(school_name.is_enabled)
		school_cancel.click()
		sleep(10)
	@attr(priority="high")
	def test_AS_53_To_validate_GradeandDistrict_Fields(self):
		fake= Factory.create()
		sleep(10)
		clickCreateAsset = self.driver.find_element_by_xpath("//img[@alt='Create asset']")
		clickCreateAsset.click()
		sleep(12)
		self.driver.switch_to.active_element
		WebDriverWait(self.driver,10).until(expected_conditions.presence_of_element_located((By.XPATH,"//div[@id='asset_overview_modal']/div/div/div/h4")))
		Create_Asset_Title = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/div/h4").text
		sleep(2)
		self.assertEqual("Asset overview", Create_Asset_Title)
		self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[1]/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		school_name = self.driver.find_element_by_xpath("//input[@ng-model='model']")
		school_save = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[2]")
		school_district = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/button[1]")
		school_grade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/button[1]")
		school_cancel = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[1]")
		self.assertTrue(school_name.is_enabled()
						and school_grade.is_enabled()
						and school_district.is_enabled()
						and school_save.is_enabled())
		schoolName = fake.company()
		school_name.send_keys(schoolName)
		school_district.click()
		sleep(2)
		school_newdistrict = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li/input")
		school_newdistrict.click()
		school_newdistrict.send_keys("Vali123@*>? ")
		school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
		self.assertTrue(school_add.is_enabled())
		school_add.click()
		sleep(2)
		school_grade.click()
		sleep(2)
		school_newgrade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li/input")
		school_newgrade.click()
		school_newgrade.send_keys("Vali123@*>? ")
		school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
		try:
			self.assertTrue(school_add.is_displayed())
		except:
			print("Add button not enabled")
		else:
			school_add.click()
		school_save.click()
		self.assertEqual(schoolName, self.driver.find_element_by_xpath("//*[@id='header']/div[1]/span[3]/span").text)
		school_name_page = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[1]/div/div[2]/table/tbody/tr[1]/td[2]")
		school_district_page = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[1]/div/div[2]/table/tbody/tr[4]/td[2]")
		school_grade_page = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[1]/div/div[2]/table/tbody/tr[5]/td[2]")
		act_schoolname = str(school_name_page.text)
		act_distname = str(school_district_page.text)
		self.driver.find_element_by_link_text("Assets").click()
		self.assertEqual(schoolName,act_schoolname)
		self.assertEqual("Vali123@*>?",act_distname)
		print(act_distname,act_schoolname, schoolName)
	@attr(priority="high")
	def test_AS_54_To_Verify_Create_Asset_Function_Create_School_Asset_Cancel(self):
		sleep(10)
		self.driver.find_element_by_xpath("//img[@alt='Create asset']").click()
		sleep(12)
		self.driver.switch_to.active_element
		WebDriverWait(self.driver,10).until(expected_conditions.presence_of_element_located((By.XPATH,"//div[@id='asset_overview_modal']/div/div/div/h4")))
		Create_Asset_Title = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/div/h4").text
		sleep(2)
		self.assertEqual("Asset overview", Create_Asset_Title)
		self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[1]/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		sleep(10)
		school_name = self.driver.find_element_by_xpath("//input[@ng-model='model']")
		school_address = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']")
		school_address2 = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']")
		school_city = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']")
		school_state = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']")
		school_zip = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']")
		school_owner = self.driver.find_element_by_xpath("//input[@placeholder='Owner']")
		school_phone = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/div[3]/input")
		school_district = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/button[1]")
		school_grade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/button[1]")
		school_type = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[5]/div/div/button[1]")
		school_cancel = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[1]")
		school_save = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[2]")
		self.assertTrue(school_name.is_enabled()
						and school_address.is_enabled()
						and school_address2.is_enabled()
						and school_city.is_enabled()
						and school_state.is_enabled()
						and school_zip.is_enabled()
						and school_owner.is_enabled()
						and school_phone.is_enabled()
						and school_type.is_enabled()
						and school_cancel.is_enabled()
						and school_save.is_enabled())
		school_name.send_keys("kk school automation test")
		school_name.send_keys(Keys.TAB)
		sleep(2)
		school_address.send_keys("indecomm")
		school_address.send_keys(Keys.TAB)
		sleep(2)
		school_address2.send_keys("MG Road")
		school_address2.send_keys(Keys.TAB)
		sleep(2)
		school_city.send_keys("Bangalore")
		school_city.send_keys(Keys.TAB)
		sleep(2)
		school_state.send_keys("KA")
		school_state.send_keys(Keys.TAB)
		sleep(2)
		school_zip.send_keys("56009")
		school_zip.send_keys(Keys.TAB)
		sleep(2)
		school_phone.send_keys("994-550-8652")
		school_phone.send_keys(Keys.TAB)
		sleep(2)
		school_district.click()
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li[1]/a")
		except NoSuchElementException:
			school_newdistrict = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li/input")
			school_newdistrict.click()
			school_newdistrict.send_keys("hm")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			self.assertTrue(school_add.is_enabled())
			school_add.click()
		else:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li[1]/a").click()
		sleep(2)
		school_grade.click()
		sleep(2)
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li[1]/a")
		except NoSuchElementException:
			school_newgrade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li/input")
			school_newgrade.click()
			school_newgrade.send_keys("hm")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			try:
				 self.assertTrue(school_add.is_displayed())
			except:
				 print("Add button not enabled")
			else:
				school_add.click()
		else:
		  self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li[1]/a").click()
		  sleep(2)
		school_owner.send_keys("indecomm")
		school_owner.send_keys(Keys.TAB)
		sleep(2)
		school_cancel.click()
		sleep(5)
		try:
			self.driver.find_element_by_xpath(".//*[@id='header']/div[1]/span[3]/span")
		except NoSuchElementException:
			print ("In Assets main page")
	@attr(priority="high")
	def test_AS_55_To_Verify_SchoolAsset_Edit(self):
		sleep(12)
		self.driver.find_element_by_xpath("//span[@id='span_filters']/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		sleep(10)
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(20)
		editOverview = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[1]/div/div[1]/div/img")
		editOverview.click()
		self.driver.switch_to.active_element
		WebDriverWait(self.driver,10).until(expected_conditions.presence_of_element_located((By.XPATH,"//div[@id='asset_overview_modal']/div/div/div/h4")))
		Create_Asset_Title = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/div/h4").text
		print(Create_Asset_Title)
		sleep(10)
		self.assertEqual("Asset overview", Create_Asset_Title)
		school_name = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.name']")
		school_address = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']")
		school_address2 = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']")
		school_city = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']")
		school_state = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']")
		school_zip = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']")
		school_phone = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/div[3]/input")
		school_district = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/button[1]")
		school_grade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/button[1]")
		school_type = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[5]/div/div/button[1]")
		school_cancel = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[1]")
		school_save = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[2]")
		self.assertTrue(school_name.is_enabled()
						and school_address.is_enabled()
						and school_address2.is_enabled()
						and school_city.is_enabled()
						and school_state.is_enabled()
						and school_zip.is_enabled()
						and school_phone.is_enabled()
						and school_type.is_enabled()
						and school_cancel.is_enabled()
						and school_save.is_enabled())
		school_name.clear()
		school_name.send_keys("kk school automation edit")
		school_name.send_keys(Keys.TAB)
		sleep(2)
		school_address.clear()
		school_address.send_keys("indecomm")
		school_address.send_keys(Keys.TAB)
		sleep(2)
		school_address2.clear()
		school_address2.send_keys("MG Road")
		school_address2.send_keys(Keys.TAB)
		sleep(2)
		school_city.clear()
		school_city.send_keys("Bangalore")
		school_city.send_keys(Keys.TAB)
		sleep(2)
		school_state.clear()
		school_state.send_keys("KA")
		school_state.send_keys(Keys.TAB)
		sleep(2)
		school_zip.clear()
		school_zip.send_keys("56009")
		school_zip.send_keys(Keys.TAB)
		sleep(2)
		school_phone.clear()
		school_phone.send_keys("994-550-8652")
		school_phone.send_keys(Keys.TAB)
		sleep(2)
		school_district.click()
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li[1]/a")
		except NoSuchElementException:
			school_newdistrict = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li/input")
			school_newdistrict.click()
			school_newdistrict.send_keys("hm")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			self.assertTrue(school_add.is_enabled())
			school_add.click()
		else:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li[1]/a").click()
		sleep(2)
		school_grade.click()
		sleep(2)
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li[1]/a")
		except NoSuchElementException:
			school_newgrade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li/input")
			school_newgrade.click()
			school_newgrade.send_keys("hm")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			try:
				 self.assertTrue(school_add.is_displayed())
			except:
				 print("Add button not enabled")
			else:
				school_add.click()
		else:
		  self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li[1]/a").click()
		  sleep(2)
		sleep(2)
		school_save.click()
		sleep(5)
		self.assertEqual("kk school automation edit", self.driver.find_element_by_xpath("//*[@id='header']/div[1]/span[3]/span").text)
		self.driver.find_element_by_link_text("Assets").click()
	@attr(priority="high")
	def test_AS_56_To_Verify_SchoolAsset_Edit_Cancel(self):
		sleep(12)
		self.driver.find_element_by_xpath("//span[@id='span_filters']/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		sleep(10)
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(20)
		editOverview = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[1]/div/div[1]/div/img")
		editOverview.click()
		self.driver.switch_to.active_element
		WebDriverWait(self.driver,10).until(expected_conditions.presence_of_element_located((By.XPATH,"//div[@id='asset_overview_modal']/div/div/div/h4")))
		Create_Asset_Title = self.driver.find_element_by_xpath("//div[@id='asset_overview_modal']/div/div/div/h4").text
		print(Create_Asset_Title)
		sleep(10)
		self.assertEqual("Asset overview", Create_Asset_Title)
		school_name = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.name']")
		school_address = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address1']")
		school_address2 = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.address2']")
		school_city = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.city']")
		school_state = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.state']")
		school_zip = self.driver.find_element_by_xpath("//input[@ng-model='asset_edit.address.zip']")
		school_owner = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[4]/div/input")
		school_phone = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/div[3]/input")
		school_district = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/button[1]")
		school_grade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/button[1]")
		school_type = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[5]/div/div/button[1]")
		school_cancel = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[1]")
		school_save = self.driver.find_element_by_xpath("//*[@id='asset_overview_modal']/div/div/form/div[2]/button[2]")
		self.assertTrue(school_name.is_enabled()
						and school_address.is_enabled()
						and school_address2.is_enabled()
						and school_city.is_enabled()
						and school_state.is_enabled()
						and school_zip.is_enabled()
						and school_owner.is_enabled()
						and school_phone.is_enabled()
						and school_type.is_enabled()
						and school_cancel.is_enabled()
						and school_save.is_enabled())
		school_name.clear()
		school_name.send_keys("kk school automation edit")
		school_name.send_keys(Keys.TAB)
		sleep(2)
		school_address.clear()
		school_address.send_keys("indecomm")
		school_address.send_keys(Keys.TAB)
		sleep(2)
		school_address2.clear()
		school_address2.send_keys("MG Road")
		school_address2.send_keys(Keys.TAB)
		sleep(2)
		school_city.clear()
		school_city.send_keys("Bangalore")
		school_city.send_keys(Keys.TAB)
		sleep(2)
		school_state.clear()
		school_state.send_keys("KA")
		school_state.send_keys(Keys.TAB)
		sleep(2)
		school_zip.clear()
		school_zip.send_keys("56009")
		school_zip.send_keys(Keys.TAB)
		sleep(2)
		school_phone.clear()
		school_phone.send_keys("994-550-8652")
		school_phone.send_keys(Keys.TAB)
		sleep(2)
		school_district.click()
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li[1]/a")
		except NoSuchElementException:
			school_newdistrict = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li/input")
			school_newdistrict.click()
			school_newdistrict.send_keys("hm")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			self.assertTrue(school_add.is_enabled())
			school_add.click()
		else:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[2]/div/div/ul/li[1]/a").click()
		sleep(2)
		school_grade.click()
		sleep(2)
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li[1]/a")
		except NoSuchElementException:
			school_newgrade = self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li/input")
			school_newgrade.click()
			school_newgrade.send_keys("hm")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			try:
				 self.assertTrue(school_add.is_displayed())
			except:
				 print("Add button not enabled")
			else:
				school_add.click()
		else:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[3]/div/div/ul/li[1]/a").click()
			sleep(2)
		school_owner.clear()
		school_owner.send_keys("indecomm")
		school_owner.send_keys(Keys.TAB)
		sleep(10)
		school_type.click()
		try:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[5]/div/div/ul/li[2]/a")
		except NoSuchElementException:
			school_newtype=self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[5]/div/div/ul/li[2]/input")
			school_newtype.click()
			school_newtype.send_keys("hm")
			school_add = self.driver.find_element_by_xpath(".//*[@id='newItemButton']")
			self.assertTrue(school_add.is_enabled())
			school_add.click()
		else:
			self.driver.find_element_by_xpath(".//*[@id='asset_overview_modal']/div/div/form/div[1]/span/span[5]/div/div/ul/li[2]/a").click()
		sleep(2)
		school_cancel.click()
		sleep(5)
		self.assertEqual(self.driver.find_element_by_xpath("//*[@id='header']/div[1]/span[3]/span").text, self.driver.find_element_by_xpath("//*[@id='header']/div[1]/span[3]/span").text)
		self.driver.find_element_by_link_text("Assets").click()
	@attr(priority="high")
	def test_AS_58_To_Verify_School_Asset_Edit_Details_Panel_Save(self):
		sleep(12)
		self.driver.find_element_by_xpath("//span[@id='span_filters']/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		sleep(10)
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(20)
		editSchoolDetailsPanel = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[1]/div/img")
		editSchoolDetailsPanel.click()
		self.driver.switch_to.active_element
		WebDriverWait(self.driver,10).until(expected_conditions.presence_of_element_located((By.XPATH,"//div[@id='asset_overview_modal']/div/div/div/h4")))
		Asset_Details_Title = self.driver.find_element_by_xpath(".//*[@id='H2']").text
		print(Asset_Details_Title)
		sleep(10)
		self.assertEqual("Asset details", Asset_Details_Title)
		school_edit_details_capacity = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[1]/div/span/input")
		school_edit_details_closed = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[2]/div/span/input")
		school_edit_details_description = self.driver.find_element_by_xpath(".//*[@id='asset_details_description_edit']")
		school_edit_details_district_number = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[4]/div/span/input")
		school_edit_details_email = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[5]/div/span/input")
		school_edit_details_fax = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[6]/div/span/input")
		school_edit_details_opened = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[7]/div/span/input")
		school_edit_details_school_number = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[8]/div/span/input")
		school_edit_details_size = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[9]/div/span/input")
		school_edit_details_website = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[10]/div/span/input")
		school_edit_details_cancel = self.driver.find_element_by_xpath("//*[@id='asset_details_modal']/div/div/form/div[2]/button[1]")
		school_edit_details_save = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[2]/button[2]")
		self.assertTrue(school_edit_details_capacity.is_enabled()
						and school_edit_details_closed.is_enabled()
						and school_edit_details_description.is_enabled()
						and school_edit_details_district_number.is_enabled()
						and school_edit_details_email.is_enabled()
						and school_edit_details_fax.is_enabled()
						and school_edit_details_opened.is_enabled()
						and school_edit_details_school_number.is_enabled()
						and school_edit_details_size.is_enabled()
						and school_edit_details_website.is_enabled()
						and school_edit_details_cancel.is_enabled()
						and school_edit_details_save.is_enabled())
		school_edit_value_capacity = "1234"
		school_edit_value_closed = "2017-05-16"
		school_edit_value_description = "Description of School 3"
		school_edit_value_district_number = "22222"
		school_edit_value_email = "ki22ran2.k@indecomm.net"
		school_edit_value_fax = "123-4567-892"
		school_edit_value_opened = "2015-02-23"
		school_edit_value_school_number = "63"
		school_edit_value_size = "12001"
		school_edit_value_website = "http://www.haystax.com"
		school_edit_details_capacity.clear()
		school_edit_details_capacity.send_keys(school_edit_value_capacity)
		school_edit_details_capacity.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_closed.clear()
		school_edit_details_closed.send_keys(school_edit_value_closed)
		school_edit_details_closed.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_description.clear()
		school_edit_details_description.send_keys(school_edit_value_description)
		school_edit_details_description.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_district_number.clear()
		school_edit_details_district_number.send_keys(school_edit_value_district_number)
		school_edit_details_district_number.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_email.clear()
		school_edit_details_email.send_keys(school_edit_value_email)
		school_edit_details_email.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_fax.clear()
		school_edit_details_fax.send_keys(school_edit_value_fax)
		school_edit_details_fax.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_opened.clear()
		school_edit_details_opened.send_keys(school_edit_value_opened)
		school_edit_details_opened.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_school_number.clear()
		school_edit_details_school_number.send_keys(school_edit_value_school_number)
		school_edit_details_school_number.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_size.clear()
		school_edit_details_size.send_keys(school_edit_value_size)
		school_edit_details_size.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_website.clear()
		school_edit_details_website.send_keys(school_edit_value_website)
		school_edit_details_website.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_save.click()
		sleep(5)
	@attr(priority="high")
	def test_AS_58_To_Verify_School_Asset_Edit_Details_Panel_Cancel(self):
		sleep(12)
		self.driver.find_element_by_xpath("//span[@id='span_filters']/div/div/button[2]").click()
		self.driver.find_element_by_link_text("School").click()
		sleep(10)
		searchnames = self.driver.find_elements_by_xpath("//tbody/tr/td/a")
		searchnames[0].click()
		sleep(20)
		editSchoolDetailsPanel = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[1]/div/img")
		editSchoolDetailsPanel.click()
		self.driver.switch_to.active_element
		WebDriverWait(self.driver,10).until(expected_conditions.presence_of_element_located((By.XPATH,"//div[@id='asset_overview_modal']/div/div/div/h4")))
		Asset_Details_Title = self.driver.find_element_by_xpath(".//*[@id='H2']").text
		print(Asset_Details_Title)
		sleep(10)
		self.assertEqual("Asset details", Asset_Details_Title)
		school_edit_details_capacity = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[1]/div/span/input")
		school_edit_details_closed = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[2]/div/span/input")
		school_edit_details_description = self.driver.find_element_by_xpath(".//*[@id='asset_details_description_edit']")
		school_edit_details_district_number = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[4]/div/span/input")
		school_edit_details_email = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[5]/div/span/input")
		school_edit_details_fax = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[6]/div/span/input")
		school_edit_details_opened = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[7]/div/span/input")
		school_edit_details_school_number = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[8]/div/span/input")
		school_edit_details_size = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[9]/div/span/input")
		school_edit_details_website = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[1]/span[10]/div/span/input")
		school_edit_details_cancel = self.driver.find_element_by_xpath("//*[@id='asset_details_modal']/div/div/form/div[2]/button[1]")
		school_edit_details_save = self.driver.find_element_by_xpath(".//*[@id='asset_details_modal']/div/div/form/div[2]/button[2]")
		self.assertTrue(school_edit_details_capacity.is_enabled()
						and school_edit_details_closed.is_enabled()
						and school_edit_details_description.is_enabled()
						and school_edit_details_district_number.is_enabled()
						and school_edit_details_email.is_enabled()
						and school_edit_details_fax.is_enabled()
						and school_edit_details_opened.is_enabled()
						and school_edit_details_school_number.is_enabled()
						and school_edit_details_size.is_enabled()
						and school_edit_details_website.is_enabled()
						and school_edit_details_cancel.is_enabled()
						and school_edit_details_save.is_enabled())
		school_edit_value_capacity = "1112345"
		school_edit_value_closed = "2013-05-16"
		school_edit_value_description = "aaa Description of School 3"
		school_edit_value_district_number = "11122222"
		school_edit_value_email = "kkkki22ran2.k@indecomm.net"
		school_edit_value_fax = "111-4567-892"
		school_edit_value_opened = "2222-02-23"
		school_edit_value_school_number = "22263"
		school_edit_value_size = "222001"
		school_edit_value_website = "http://www.myhaystax.com"
		school_edit_details_capacity.clear()
		school_edit_details_capacity.send_keys(school_edit_value_capacity)
		school_edit_details_capacity.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_closed.clear()
		school_edit_details_closed.send_keys(school_edit_value_closed)
		school_edit_details_closed.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_description.clear()
		school_edit_details_description.send_keys(school_edit_value_description)
		school_edit_details_description.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_district_number.clear()
		school_edit_details_district_number.send_keys(school_edit_value_district_number)
		school_edit_details_district_number.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_email.clear()
		school_edit_details_email.send_keys(school_edit_value_email)
		school_edit_details_email.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_fax.clear()
		school_edit_details_fax.send_keys(school_edit_value_fax)
		school_edit_details_fax.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_opened.clear()
		school_edit_details_opened.send_keys(school_edit_value_opened)
		school_edit_details_opened.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_school_number.clear()
		school_edit_details_school_number.send_keys(school_edit_value_school_number)
		school_edit_details_school_number.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_size.clear()
		school_edit_details_size.send_keys(school_edit_value_size)
		school_edit_details_size.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_website.clear()
		school_edit_details_website.send_keys(school_edit_value_website)
		school_edit_details_website.send_keys(Keys.TAB)
		sleep(2)
		school_edit_details_cancel.click()
		sleep(5)
		school_widget_value_capacity = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[1]/td[2]/span").text
		school_widget_value_closed = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[2]/td[2]/span").text
		school_widget_value_description = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[3]/td[2]/span").text
		school_widget_value_district_number = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[4]/td[2]/span").text
		school_widget_value_email = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[5]/td[2]/span").text
		school_widget_value_fax = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[6]/td[2]/span").text
		school_widget_value_opened = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[7]/td[2]/span").text
		school_widget_value_school_number = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[8]/td[2]/span").text
		school_widget_value_size = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[9]/td[2]/span").text
		school_widget_value_website = self.driver.find_element_by_xpath(".//*[@id='widgets']/div[5]/div/div[2]/table/tbody/tr[10]/td[2]/span").text
		self.assertNotEqual(school_edit_value_capacity, school_widget_value_capacity, "Capacity didn't match")
		self.assertNotEqual(school_edit_value_closed, school_widget_value_closed)
		self.assertNotEqual(school_edit_value_description, school_widget_value_description)
		self.assertNotEqual(school_edit_value_district_number, school_widget_value_district_number)
		self.assertNotEqual(school_edit_value_email, school_widget_value_email)
		self.assertNotEqual(school_edit_value_fax, school_widget_value_fax)
		self.assertNotEqual(school_edit_value_opened, school_widget_value_opened)
		self.assertNotEqual(school_edit_value_school_number, school_widget_value_school_number)
		self.assertNotEqual(school_edit_value_size, school_widget_value_size)
		self.assertNotEqual(school_edit_value_website, school_widget_value_website)
		self.driver.find_element_by_link_text("Assets").click()
	@attr(priority="high")
	def test_AS_36(self):
		assetpage = AssetPage(self.driver)
if __name__ =='__main__':
	unittest.main(verbosity=2)