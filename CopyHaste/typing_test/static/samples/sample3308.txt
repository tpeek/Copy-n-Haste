cwd = os.getcwd()
os.chdir('..')
SCREEN_DUMP_LOCATION = os.path.join(os.getcwd(), "Screenshots")
os.chdir(cwd)
class BaseTestCase(unittest.TestCase):
	@classmethod
	
	def setUpClass(self):
		self.driver = webdriver.Firefox()
		self.driver.implicitly_wait(30)
		self.driver.maximize_window()
		basepage = BasePage(self.driver)
		basepage.accessURL()
		homepage = HomePage(self.driver)
		homepage.loginlink.click()
		loginpage = LoginPage(self.driver)
		loginpage.loginDashboard()
	@classmethod
	def tearDownClass(self):
		st = datetime.now().isoformat().replace(':', '.')[:19]
		os.chdir('..')
		path = os.path.join(os.getcwd(), "Screenshots")
		file_name = "Screenshot " + st + ".png"
		SaveLocation = os.path.join(path, file_name)
		self.driver.save_screenshot(SaveLocation)
		self.driver.quit()
	def _test_has_failed(self):
		for method, error in self._outcome.errors:
			if error:
				return  True
			return False
	def take_screenshot(self):
		filename = self._get_filename() + '.png'
		print('screenshotting to', filename)
		self.driver.get_screenshot_as_file(filename)
	def dump_html(self):
		filename = self._get_filename() + '.html'
		print('dumping page HTML to', filename)
		with open(filename, 'w') as f:
			f.write(self.driver.page_source)
	def _get_filename(self):
		timestamp = datetime.now().isoformat().replace(':', '.')[:19]
		return '{folder}/{classname.{method}-window{window}-{timestamp}'.format(
			folder=SCREEN_DUMP_LOCATION,
			classname=self.__class__.__name__,
			method=self._testMethodName,
			windowid=self._windowid,
			timestamp=timestamp
		)