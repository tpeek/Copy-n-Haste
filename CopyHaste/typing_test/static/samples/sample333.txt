
def list_differentiate(List, dt):
  N = len(List)
  dList = [0]*N
  for i in range(1,N):
	dList[i] = (List[i+1]-List[i-1])/(2*dt)
  dList[0] = (List[1]-List[0])/dt
  dList[N-1] = (List[N-1]-List[N-2])/dt
  return dList
def Coeffs_to_VelAccel(a, s, t):
   da = [[j * quintic[j] for j in range(1,6)] for quintic in a]
   d2a = [[j * quartic[j] for j in range(1,5)] for quartic in da]
   v = [intrp.Coeffs_to_Vals(da, dosage_interval, t) for dosage_interval in s]
   A = [intrp.Coeffs_to_Vals(d2a, dosage_interval, t) for dosage_interval in s]
   return [v, A]
def comfortToActual(comfort_rating):
   if comfort_rating < 1:
	 return "not noticeable"
   elif comfort_rating < 2:
	 return "just noticeable"
   elif comfort_rating < 2.5:
	 return "clearly