get_editor_filter, split_pootle_path)
def test_urljoin():
	base = 'https://www.evernote.com/'
	assert urljoin(base) == base
	assert urljoin(base, '/foo/bar', 'baz/blah') == base + 'foo/bar/baz/blah'
	assert urljoin(base, '/foo/', '/bar/', '/baz/') == base + 'foo/bar/baz/'
	assert urljoin(base, '/foo//', '//bar/') == base + 'foo/bar/'
	assert urljoin(base, '/foo//', '//bar/?q=a') == base + 'foo/bar/?q=a'
	assert urljoin(base, 'foo//', '//bar/?q=a') == base + 'foo/bar/?q=a'
	assert urljoin(base, 'foo//////') == base + 'foo/'
	assert urljoin(base, 'foo', 'bar/baz', 'blah') == base + 'foo/bar/baz/blah'
	assert urljoin(base, 'foo/', 'bar', 'baz/') == base + 'foo/bar/baz/'
	assert urljoin('', '', '/////foo') == '/foo'
def test_get_all_pootle_paths():
	assert get_all_pootle_paths('') == ['']
	assert get_all_pootle_paths('/') == ['/']
	assert get_all_pootle_paths('/projects/') == ['/projects/']
	assert get_all_pootle_paths('/projects/tutorial/') == \
		['/projects/tutorial/']
	assert get_all_pootle_paths('/pt/tutorial/') == \
		['/pt/tutorial/', '/projects/tutorial/']
	assert get_all_pootle_paths('/pt/tutorial/tutorial.po') == \
		['/pt/tutorial/tutorial.po', '/pt/tutorial/', '/projects/tutorial/']
def test_split_pootle_path():
	assert split_pootle_path('') == (None, None, '', '')
	assert split_pootle_path('/projects/') == (None, None, '', '')
	assert split_pootle_path('/projects/tutorial/') == \
		(None, 'tutorial', '', '')
	assert split_pootle_path('/pt/tutorial/tutorial.po') == \
		('pt', 'tutorial', '', 'tutorial.po')
	assert split_pootle_path('/pt/tutorial/foo/tutorial.po') == \
		('pt', 'tutorial', 'foo/', 'tutorial.po')
def test_get_editor_filter():
	assert get_editor_filter(state='untranslated') == '
	assert get_editor_filter(state='untranslated', sort='newest') == \
		'
	assert get_editor_filter(sort='newest') == '
	assert get_editor_filter(state='all', search='Foo', sfields='locations') == \
		'
	assert get_editor_filter(search='Foo', sfields='locations') == \
		'
	assert get_editor_filter(search='Foo', sfields=['locations', 'notes']) == \
		'
	assert get_editor_filter(search='Foo: bar.po\nID: 1', sfields='locations') == \
		'