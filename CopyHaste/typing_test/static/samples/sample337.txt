
	
def random_sample(merged):	
	numSampled = 0
	sampled = []
	while numSampled < config.graphSampleSize:
		numSampled += 1
		sampled.append(random.choice(merged))
	return sampled
def triple_to_velocity(triple):
	velocity = min(np.sqrt(config.lateralAccel * vel.points_to_radius(triple)),
				   config.maxSpeed)
	return velocity
def xPointstovPoints(xPoints):
	xTriples = [xPoints[i:i+3] for i in range(len(xPoints)-3)]
	velocities = map(triple_to_velocity, xTriples)
	startVelocity = [velocities[0]]
	startVelocities = velocities[:3]
	averagedStartVelocities = [vel.mean(startVelocities)]
	velocity5Tuples = [velocities[i:i+5] for i in range(len(velocities) - 5)]
	averagedMiddleVelocities = map(vel.mean, velocity5Tuples)
	endVelocities = velocitie