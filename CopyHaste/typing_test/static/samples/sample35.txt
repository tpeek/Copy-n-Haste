class TournamentScheduler:
	def __init__(self, mongoClient, divinfo_col):
		self.tdbInterface = TournDBInterface(mongoClient, divinfo_col)
		self.divinfo_tuple = self.tdbInterface.readDB()
		self.tourn_divinfo = self.divinfo_tuple.dict_list
		self.tindexerGet = self.divinfo_tuple.indexerGet
		self.tfield_tuple = getTournamentFieldInfo()
	def prepGenerate(self):
		totalmatch_list = []
		for division in self.tourn_divinfo:
			nt = division['totalteams']
			team_id_list = self.getTeamID_list(nt)
			nb = division['totalbrackets']
			ne = division['elimination_num']
			div_id = int(division['div_id'])
			if div_id == 2:
				bracket_list=[{'team_id_list': [20, 1, 18], 'bracket_id': 1},
				{'team_id_list': [4, 21, 14], 'bracket_id': 2},
				{'team_id_list': [2, 15, 12], 'bracket_id': 3},
				{'team_id_list': [3, 6, 11], 'bracket_id': 4},
				{'team_id_list': [8, 17, 10], 'bracket_id': 5},
				{'team_id_list': [13, 7, 22], 'bracket_id': 6},
				{'team_id_list': [5, 9, 16, 19], 'bracket_id': 7}]
			else:
				bracket_list = self.createRRBrackets(nt, team_id_list, nb)
			logging.debug("tournsched:createRRbrack: div_id= %d bracket_list=%s",
						  div_id, bracket_list)
			print 'div_id brack