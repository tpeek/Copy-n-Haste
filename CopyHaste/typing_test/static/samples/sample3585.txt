def check_array_result(object_array, to_match, expected):
	num_matched = 0
	for item in object_array:
		all_match = True
		for key,value in to_match.items():
			if item[key] != value:
				all_match = False
		if not all_match:
			continue
		for key,value in expected.items():
			if item[key] != value:
				raise AssertionError("%s : expected %s=%s"%(str(item), str(key), str(value)))
			num_matched = num_matched+1
	if num_matched == 0:
		raise AssertionError("No objects matched %s"%(str(to_match)))
class ListTransactionsTest(BitcreditTestFramework):
	def run_test(self):
		txid = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.1)
		self.sync_all()
		check_array_result(self.nodes[0].listtransactions(),
						   {"txid":txid},
						   {"category":"send","account":"","amount":Decimal("-0.1"),"confirmations":0})
		check_array_result(self.nodes[1].listtransactions(),
						   {"txid":txid},
						   {"category":"receive","account":"","amount":Decimal("0.1"),"confirmations":0})
		self.nodes[0].setgenerate(True, 1)
		self.sync_all()
		check_array_result(self.nodes[0].listtransactions(),
						   {"txid":txid},
						   {"category":"send","account":"","amount":Decimal("-0.1"),"confirmations":1})
		check_array_result(self.nodes[1].listtransactions(),
						   {"txid":txid},
						   {"category":"receive","account":"","amount":Decimal("0.1"),"confirmations":1})
		txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.2)
		check_array_result(self.nodes[0].listtransactions(),
						   {"txid":txid, "category":"send"},
						   {"amount":Decimal("-0.2")})
		check_array_result(self.nodes[0].listtransactions(),
						   {"txid":txid, "category":"receive"},
						   {"amount":Decimal("0.2")})
		send_to = { self.nodes[0].getnewaddress() : 0.11,
					self.nodes[1].getnewaddress() : 0.22,
					self.nodes[0].getaccountaddress("
					self.nodes[1].getaccountaddress("toself") : 0.44 }
		txid = self.nodes[1].sendmany("", send_to)
		self.sync_all()
		check_array_result(self.nodes[1].listtransactions(),
						   {"category":"send","amount":Decimal("-0.11")},
						   {"txid":txid} )
		check_array_result(self.nodes[0].listtransactions(),
						   {"category":"receive","amount":Decimal("0.11")},
						   {"txid":txid} )
		check_array_result(self.nodes[1].listtransactions(),
						   {"category":"send","amount":Decimal("-0.22")},
						   {"txid":txid} )
		check_array_result(self.nodes[1].listtransactions(),
						   {"category":"receive","amount":Decimal("0.22")},
						   {"txid":txid} )
		check_array_result(self.nodes[1].listtransactions(),
						   {"category":"send","amount":Decimal("-0.33")},
						   {"txid":txid} )
		check_array_result(self.nodes[0].listtransactions(),
						   {"category":"receive","amount":Decimal("0.33")},
						   {"txid":txid, "account" : "
		check_array_result(self.nodes[1].listtransactions(),
						   {"category":"send","amount":Decimal("-0.44")},
						   {"txid":txid, "account" : ""} )
		check_array_result(self.nodes[1].listtransactions(),
						   {"category":"receive","amount":Decimal("0.44")},
						   {"txid":txid, "account" : "toself"} )
if __name__ == '__main__':
	ListTransactionsTest().main()