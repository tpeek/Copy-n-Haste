_logbase2 = lambda x: log(x, 2)
_List_Indexer = namedtuple('List_Indexer', 'dict_list indexerGet')
_List_IndexerGM = namedtuple('List_Indexer', 'dict_list indexerGet indexerMatch')
_List_IndexerM = namedtuple('List_Indexer', 'dict_list indexerMatch')
_ELIM_MATCH_ID_START = 100
DIVCONFIG_INCOMPLETE_MASK = 0x1
FIELDCONFIG_INCOMPLETE_MASK = 0x2
PREFINFODATE_ERROR_MASK = 0x4
DB_TYPE = "tourndb"
IDPROPERTY_str = 'tourndiv_id'
class TournSchedMaster(object):
	def __init__(self, mongoClient, userid_name, divcol_name, fieldcol_name, schedcol_name, tourn_type='RR'):
		self._error_code = 0x0
		self.userid_name = userid_name
		self.sdbInterface = SchedDBInterface(mongoClient, userid_name,
			schedcol_name, "T")
		self.tourn_type = tourn_type
		self.totalmatch_list = list()
		dbInterface = TournDBInterface(mongoClient, userid_name, divcol_name, "T")
		dbtuple = dbInterface.readDBraw()
		if dbtuple.config_status == 1:
			self.divinfo_list = dbtuple.list
			self.divinfo_indexerGet = lambda x: dict((p['tourndiv_id'],i) for i,p in enumerate(self.divinfo_list)).get(x)
			self.divinfo_tuple = _List_Indexer(self.divinfo_list,
				self.divinfo_indexerGet)
		else:
			self.divinfo_tuple = _List_Indexer(