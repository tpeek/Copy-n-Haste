class PILDriver(object):
	verbose = 0
	def do_verbose(self):
		self.verbose = int(self.do_pop())
	stack = []
	def push(self, item):
		"Push an argument onto the evaluation stack."
		self.stack = [item] + self.stack
	def top(self):
		"Return the top-of-stack element."
		return self.stack[0]
	def do_clear(self):
		self.stack = []
	def do_pop(self):
		top = self.stack[0]
		self.stack = self.stack[1:]
		return top
	def do_dup(self):
		if hasattr(self, 'format'):
			dup = self.stack[0].copy()
		else:
			dup = self.stack[0]
		self.stack = [dup] + self.stack
	def do_swap(self):
		self.stack = [self.stack[1], self.stack[0]] + self.stack[2:]
	def do_new(self):
		xsize = int(self.do_pop())
		ysize = int(self.do_pop())
		color = int(self.do_pop())
		s