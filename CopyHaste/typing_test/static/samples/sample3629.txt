__version__ = "0.5"
i32 = _binary.i32le
o32 = _binary.o32le
split = re.compile(r"^%%([^:]*):[ \t]*(.*)[ \t]*$")
field = re.compile(r"^%[%!\w]([^:]*)[ \t]*$")
gs_windows_binary = None
if sys.platform.startswith('win'):
	if hasattr(shutil, 'which'):
		which = shutil.which
	else:
		which = distutils.spawn.find_executable
	for binary in ('gswin32c', 'gswin64c', 'gs'):
		if which(binary) is not None:
			gs_windows_binary = binary
			break
	else:
		gs_windows_binary = False
def has_ghostscript():
	if gs_windows_binary:
		return True
	if not sys.platform.startswith('win'):
		try:
			gs = subprocess.Popen(['gs', '--version'], stdout=subprocess.PIPE)
			gs.stdout.read()
			return True
		except OSError:
			pass
	return False
def Ghostscript(tile, siz