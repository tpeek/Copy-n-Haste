class SerialScenarioRunnerTestCase(test.TestCase):
	@mock.patch("rally.task.runner._run_scenario_once")
	def test__run_scenario(self, mock__run_scenario_once):
		times = 5
		result = {"duration": 10, "idle_duration": 0, "error": [],
				  "scenario_output": {}, "atomic_actions": {}}
		mock__run_scenario_once.return_value = result
		expected_results = [result for i in range(times)]
		runner = serial.SerialScenarioRunner(mock.MagicMock(),
											 {"times": times})
		runner._run_scenario(fakes.FakeScenario, "do_it",
							 fakes.FakeContext().context, {})
		self.assertEqual(len(runner.result_queue), times)
		results = list(runner.result_queue)
		self.assertEqual(results, expected_results)
	def test__run_scenario_aborted(self):
		runner = 