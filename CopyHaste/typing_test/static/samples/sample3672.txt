LOG = logging.getLogger(__name__)
class SSHError(Exception):
	pass
class SSHTimeout(SSHError):
	pass
class SSH(object):
	def __init__(self, user, host, port=22, pkey=None,
				 key_filename=None, password=None):
		self.user = user
		self.host = host
		self.port = port
		self.pkey = self._get_pkey(pkey) if pkey else None
		self.password = password
		self.key_filename = key_filename
		self._client = False
	def _get_pkey(self, key):
		if isinstance(key, six.string_types):
			key = six.moves.StringIO(key)
		errors = []
		for key_class in (paramiko.rsakey.RSAKey, paramiko.dsskey.DSSKey):
			try:
				return key_class.
			except paramiko.SSHException as e:
				errors.append(e)
		raise SSHError("Invalid pkey: %s" % (errors))
	def _get_client(self):