log = logging.getLogger('notify_osd')
class OutputNotifyOsd(object):
	schema = {
		'oneOf': [
			{'type': 'boolean'},
			{
				'type': 'object',
				'properties': {
					'title_template': {'type': 'string'},
					'item_template': {'type': 'string'},
					'timeout': {'type': 'integer'}
				},
				'additionalProperties': False
			}
		]
	}
	def prepare_config(self, config):
		if isinstance(config, bool):
			config = {}
		config.setdefault('title_template', '{{task.name}}')
		config.setdefault('item_template', '{{title}}')
		config.setdefault('timeout', 4)
		return config
	def on_task_start(self, task, config):
		try:
		except ImportError as e:
			log.debug('Error
			raise plugin.DependencyError('notify_osd', 'gi.repository', 'Notify module req