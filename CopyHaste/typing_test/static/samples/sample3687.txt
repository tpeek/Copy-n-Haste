log = logging.getLogger('task_queue')
class TaskQueue(object):
	def __init__(self):
		self.run_queue = Queue.PriorityQueue()
		self._shutdown_now = False
		self._shutdown_when_finished = False
		self._thread = threading.Thread(target=self.run, name='task_queue')
		self._thread.daemon = True
	def start(self):
		self._thread.start()
	def run(self):
		while not self._shutdown_now:
			try:
				task = self.run_queue.get(timeout=0.5)
			except Queue.Empty:
				if self._shutdown_when_finished:
					self._shutdown_now = True
				continue
			try:
				task.execute()
			except TaskAbort as e:
				log.debug('task %s aborted: %r' % (task.name, e))
			except (ProgrammingError, OperationalError):
				log.critical('Database error while running a task. Atte