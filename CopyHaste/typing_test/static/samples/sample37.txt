_List_Indexer = namedtuple('_List_Indexer', 'dict_list indexerGet')
_List_Status = namedtuple('_List_Status', 'list config_status')
_PlusList_Status = namedtuple('_PlusList_Status', 'list config_status divstr_colname divstr_db_type')
class BaseDBInterface(object):
	def __init__(self, mongoClient, userid_name, newcol_name, sched_cat, db_col_type,
		capid_str):
		self.dbinterface = MongoDBInterface(mongoClient, userid_name, newcol_name,
			sched_cat, db_col_type)
		self.capid_str = capid_str
		self._idproperty = capid_str.lower()
	@property
	def idproperty(self):
		return self._idproperty
	def writeDB(self, info_str, config_status, divstr_colname, divstr_db_type):
		info_list = json.loads(info_str)
		document_list = [{k.upper():v for k,v in x.items()} for x in info_list]
		self.dbinterface.updateInfoPlusDocument(document_list, config_status,
			divstr_colname=divstr_colname, divstr_db_type=divstr_db_type,
			id_str=self.capid_str)
	def readDB(self):
		liststatus_qtuple = self.dbinterface.getInfoPlusDocument(self.capid_str)
		rawlist = liststatus_qtuple.list
		config_status = liststatus_qtuple.config_status
		divstr_colname = liststatus_qtuple.divstr_colname
		divstr_db_type = liststa