class OpenBCIConnector(Connector):
  def __init__(self, publishers, buffer_size, device_type='openbci', device_port='/dev/tty.OpenBCI-DN0094CZ', device_mac=None):
	super(OpenBCIConnector, self).__init__(publishers, buffer_size, device_type, device_port, device_mac)
  def connect_device(self):
	self.device = OpenBCIBoard(port=self.device_port)
  def start(self):
	cb_functions = {metric: self.callback_factory(metric, get_num_channels(self.device_name, metric)) for metric in self.metrics}
	self.device.start(cb_functions)
  def callback_factory(self, metric_name, num_channels):
	def callback(sample):
	  message = {"channel_%s" % i: sample.channel_data[i] for i in xrange(num_channels)}
	  message['timestamp'] = int(time.time() * 1000000)
	  self