__author__ = 'sll@google.com (Sean Lip)'
current_user_services = models.Registry.
def require_super_admin(handler):
	def test_super_admin(self, **kwargs):
		if not self.user_id:
			self.redirect(
				current_user_services.create_login_url(self.request.uri))
			return
		if not user_services.is_super_admin(self.user_id, self.request):
			raise self.UnauthorizedUserException(
				'%s is not a super admin of this application', self.user_id)
		return handler(self, **kwargs)
	return test_super_admin
class AdminPage(base.BaseHandler):
	PAGE_NAME_FOR_CSRF = 'admin'
	@require_super_admin
	def get(self):
		self.values['counters'] = [{
			'name': counter.name,
			'description': counter.description,
			'value': counter.value
		} for counter in counters