__all__ = [
	"Comment",
	"dump",
	"Element", "ElementTree",
	"
	"iselement", "iterparse",
	"parse", "ParseError",
	"PI", "ProcessingInstruction",
	"QName",
	"SubElement",
	"tostring", "tostringlist",
	"TreeBuilder",
	"VERSION",
	"XML",
	"XMLParser", "XMLTreeBuilder",
	]
VERSION = "1.3.0"
class _SimpleElementPath(object):
	def find(self, element, tag, namespaces=None):
		for elem in element:
			if elem.tag == tag:
				return elem
		return None
	def findtext(self, element, tag, default=None, namespaces=None):
		elem = self.find(element, tag)
		if elem is None:
			return default
		return elem.text or ""
	def iterfind(self, element, tag, namespaces=None):
		if tag[:3] == ".//":
			for elem in element.iter(tag[3:]):
				yield elem
		for elem in 