class ADS1115_I2C1(ADS1x15):
	def __init__(self):
		self.address = 0x48
		self.i2c = Adafruit_I2C(self.address,busnum=2)
		self.debug = False
		self.ic = self._ADS1x15__IC_ADS1115
		self.pga = 6144
class Anemometer(Thread):
	def __init__(self):
		super(Anemometer,self).__init__()
		self._adc = ADS1115_I2C1()
		self._readings = []
		self._stop = Event()
		self.daemon = True
		self.start()
	def read(self):
		if len(self._readings) <= 0:
			return None
		tmp = {'average':mean(self._readings),'gust':amax(self._readings)}
		tmp = {k:float('{:.2f}'.format(tmp[k])) for k in tmp.keys()}
		self._readings = []
		return tmp
	def run(self):
		while not self._stop.is_set():
			tmp = self._adc.readADCSingleEnded(channel=1,pga=4096,sps=250)/1000.
			tmp =