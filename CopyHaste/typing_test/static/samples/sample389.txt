__author__ = 'e0d'
class MissingHostError(Exception):
	pass
class LifecycleHandler:
	INSTANCE_TERMINATION = 'autoscaling:EC2_INSTANCE_TERMINATING'
	TEST_NOTIFICATION = 'autoscaling:TEST_NOTIFICATION'
	NUM_MESSAGES = 10
	WAIT_TIME_SECONDS = 10
	def __init__(self, profile, queue, hook, dry_run, bin_directory=None):
		logging.basicConfig(level=logging.INFO)
		self.queue = queue
		self.hook = hook
		self.profile = profile
		if bin_directory:
			os.environ["PATH"] = bin_directory + os.pathsep + os.environ["PATH"]
		self.aws_bin = spawn.find_executable('aws')
		self.python_bin = spawn.find_executable('python')
		self.base_cli_command ="{python_bin} {aws_bin} --profile {profile} ".format(
			python_bin=self.python_bin,
			aws_bin=self.aws_bin,
			