getcalendarmap_list
_List_Indexer = namedtuple('_List_Indexer', 'dict_list indexerGet')
_List_Status = namedtuple('_List_Status', 'list config_status')
_PlusList_Status = namedtuple('_PlusList_Status', 'list config_status divstr_colname divstr_db_type')
field_id_CONST = 'FIELD_ID'
field_name_CONST = 'FIELD_NAME'
primaryuse_list_CONST = 'PRIMARYUSE_LIST'
start_date_CONST = 'START_DATE'
end_date_CONST = 'END_DATE'
start_time_CONST = 'START_TIME'
dayweek_list_CONST = 'DAYWEEK_LIST'
TFD = 'TFD'
date_format_CONST = "%m/%d/%Y"
class FieldDBInterface(BaseDBInterface):
	def __init__(self, mongoClient, userid_name, newcol_name, sched_cat):
		BaseDBInterface.__init__(self, mongoClient, userid_name, newcol_name,
			sched_cat, DB_Col_Type.FieldInfo, 'FIELD_ID')
	def writeDB(self, fieldinfo_str, config_status, divstr_colname, divstr_db_type):
		fieldinfo_list = json.loads(fieldinfo_str)
		for fieldinfo in fieldinfo_list:
			if fieldinfo['dr']:
				temp_list = [int(x) for x in fieldinfo['dr'].split(',')]
				fieldinfo['dayweek_list'] = convertJStoPY_daylist(temp_list)
			else:
				fieldinfo['dayweek_list'] = []
			if fieldinfo['pr']:
				fieldinfo['primaryuse_list'] = [int(x)
					for x in field