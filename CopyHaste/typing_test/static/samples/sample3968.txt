MAXSIZE = 3
class PrettyFloat(float):
  def __repr__(self):
	return '%4.2f' % self
def pretty_floats(obj):
  if isinstance(obj, float):
	return PrettyFloat(obj)
  elif isinstance(obj, dict):
	return dict((k, pretty_floats(v)) for k, v in obj.items())
  elif isinstance(obj, (list, tuple)):
	return map(pretty_floats, obj)			 
  return obj
testimage = Image.new('RGB',(3000,3000))
draw = ImageDraw.Draw(testimage)
pf = open('stars.pov','r')
output = open('nebulae.txt','w')
radius = 4 
minarea = radius*radius*3.14159 * 1.5
points = []
sectors = {}
inhabited = {}
def buildsquares(layer1, layer2):
  for x in xrange(0,3000,5):
	print "x=" +str(x)
	layer1strip = box(x,0,x+5,3000).intersection(layer1)
	layer2strip = box(x,0,x+5,3000).intersection(laye