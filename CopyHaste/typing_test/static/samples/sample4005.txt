def filter(g):
	while 1:
		t = g.next()
		if t[1] == "/*":
			while g.next()[1] != "*/":
				pass
			continue
		if t[1] == "//":
			while g.next()[1] != "\n":
				pass
			continue
		if t[1] != "\n":
			yield t[1]
def do_file(f, mode):
	tokens = filter(tokenize.generate_tokens(open(f, 'r').readline))
	sys.stderr.write("parsing %s\n" % f)
	state = 0
	classstate = 0
	firsthit = 1
	while 1:
		try:
			t = tokens.next()
		except:
			break
		if t == "class":
			classname = tokens.next()
			classstate = state
		if t == "{":
			state += 1
		if t == "}":
			state -= 1
		if t == "enum" and state == classstate + 1:
			actionname = tokens.next()
			if actionname == "{":
				while tokens.next() != "}":
					pass
				continue
			if actionname[-7:] == "Act