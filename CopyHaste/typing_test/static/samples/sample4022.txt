def doc_e_step(document, gamma, phi, model, ss):
	likelihood = lda_inference(document, model, gamma, phi)
	gamma_sum = 0
	for k in range(0, model.num_topics):
		gamma_sum += gamma[k]
		ss.alpha_suffstats += digamma(gamma[k])
	ss.alpha_suffstats -= model.num_topics * digamma(gamma_sum)
	for n in range(0, document.unique_word_count):
		for k in range(0, model.num_topics):
			ss.class_word[k][document.words[n]] += document.word_counts[n] * phi[n][k]
			ss.class_total[k] += document.word_counts[n] * phi[n][k]
	ss.num_docs += 1
	return likelihood
def log_sum(log_a, log_b):
	v = None
	if log_a < log_b:
		v = log_b + math.log(1 + math.exp(log_a - log_b))
	else:
		v = log_a + math.log(1 + math.exp(log_b - log_a))
	return v
def digamma(x):
	x += 6
	