def address_of(device_id):
	try:
		return netifaces.ifaddresses("eth%i" % device_id)[netifaces.AF_INET][0]['addr']
	except KeyError:
		return None
def guess_gateway(device_id):
	address = address_of(device_id).split('.')
	address[3] = '1'
	return '.'.join(address)
log = logging.getLogger('configure-cloud-interfaces')
log.setLevel(logging.DEBUG)
log.addHandler(logging.handlers.SysLogHandler(facility=logging.handlers.SysLogHandler.LOG_DAEMON))
log.addHandler(logging.StreamHandler())
log.info("Starting.")
macs = boto.utils.get_instance_metadata()["network"]["interfaces"]["macs"]
ids = [int(macdata['device-number']) for macdata in macs.values()]
ifaces = [iface for iface in netifaces.interfaces() if ":" not in iface and iface != "lo"]
if len(id