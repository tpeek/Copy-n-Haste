_MOD = 'audioSearch/transcriber.py'
environLocal = environment.Environment(_MOD)

									   
def runTranscribe(show=True, plot=True, useMic=True,
				  seconds=20.0, useScale=None, saveFile=True):

	if useScale is None:
		useScale = scale.ChromaticScale('C4')
	if saveFile != False:
		if saveFile == True:
			WAVE_FILENAME = environLocal.getRootTempDir() + os.path.sep + 'ex.wav'
		else:
			WAVE_FILENAME = saveFile
	else:
		WAVE_FILENAME = False
	if useMic is True:
		freqFromAQList = audioSearchBase.getFrequenciesFromMicrophone(length=seconds, storeWaveFilename=WAVE_FILENAME)
	else:
		freqFromAQList = audioSearchBase.getFrequenciesFromAudioFile(waveFilename=WAVE_FILENAME)
		
	detectedPitchesFreq = audioSearchBase.detectPitc