JOB_TIMEOUT = timedelta(hours=3)
class JobTimeoutException(Exception):
	def __init__(self, jobstack=[]):
		super(JobTimeoutException, self).__init__()
		self.jobstack = jobstack
def timeout(timeout):
	def decorate(f):
		def timeout_handler(signum, frame):
			raise JobTimeoutException(traceback.format_stack())
		def new_f(*args, **kwargs):
			old_handler = signal.signal(signal.SIGALRM, timeout_handler)
			signal.alarm(timeout)
			result = f(*args, **kwargs)
			signal.signal(signal.SIGALRM, old_handler)
			signal.alarm(0)
			return result
		if compat.PY2:
			new_f.func_name = f.func_name
		else:
			new_f.__name__ = f.__name__
		return new_f
	return decorate
def setup_logger(logfile = None, log_level = logging.DEBUG, log_stderr = True, log_con