CacheResult,
	compare_cache_details,
	DownloadTask,
	URLDownloadTask,
)
	ConformResult,
	DecompressionTask,
	ExcerptDataTask,
	ConvertToCsvTask,
	elaborate_filenames,
)
with open(join(dirname(__file__), 'VERSION')) as file:
	__version__ = file.read().strip()
SOURCES_DIR = '/var/opt/openaddresses'
class S3:
	_bucket = None
	def __init__(self, key, secret, bucketname):
		self._key, self._secret = key, secret
		self.bucketname = bucketname
	
	def _make_bucket(self):
		if not self._bucket:
			connection = connect_s3(self._key, self._secret)
			self._bucket = connection.get_bucket(self.bucketname)
	
	def get_key(self, name):
		self._make_bucket()
		return self._bucket.get_key(name)
	
	def new_key(self, name):
		self._make_bucket()
		return self.