class Trajectory(ActionInTraj):
	def __init__(self, filename_or_traj=None, top=None):
		self.top = _get_top(filename_or_traj, top)
		self.xyz = None
		if filename_or_traj is None or filename_or_traj == "":
			self.xyz = None
		elif hasattr(filename_or_traj, 'xyz'):
			self.xyz = filename_or_traj.xyz
		elif isinstance(filename_or_traj, string_types):
			self.load(filename_or_traj)
		else:
			raise NotImplementedError("need to have filename or 3D array or Trajectory-like object")
	def __str__(self):
		clsname = self.__class__.__name__
		txt = "%s with %s frames, %s atoms" % (clsname, self.n_frames, 
											   self.n_atoms) 
		return txt
	def __repr__(self):
		return self.__str__()
	def copy(self):
		traj = Trajectory()
		traj.top = self.t