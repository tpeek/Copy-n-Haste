random.seed(time.time()* 1000000)
current_path = os.path.dirname(os.path.abspath(__file__))
default_range_file = os.path.join(current_path, "ip_range.txt")
user_range_file = os.path.join(config.DATA_PATH, "ip_range.txt")
class Ip_range(object):
	def __init__(self):
		self.load_ip_range()
	def load_range_content(self):
		if os.path.isfile(user_range_file):
			self.range_file = user_range_file
		else:
			self.range_file = default_range_file
		xlog.info("load ip range file:%s", self.range_file)
		fd = open(self.range_file, "r")
		if not fd:
			xlog.error("load ip range %s fail", self.range_file)
			return
		content = fd.read()
		fd.close()
		return content
	def update_range_content(self, content):
		with open(user_range_file, "w") as fd:
			fd