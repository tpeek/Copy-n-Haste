__author__ = 'moonshawdo@gamil.com'
def ip_string_to_num(s):
	return reduce(lambda a, b: a << 8 | b, map(int, s.split(".")))
def get_ip_maskc(ip_str):
	head = ".".join(ip_str.split(".")[:-1])
	return head + ".0"
def ip_num_to_string(ip):
	return ".".join(map(lambda n: str(ip >> n & 0xFF), [24, 16, 8, 0]))
g_ip_check = re.compile(r'^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$')
def check_ip_valid(ip):
	ret = g_ip_check.match(ip)
	if ret is not None:
		"each item range: [0,255]"
		for item in ret.groups():
			if int(item) > 255:
				return 0
		return 1
	else:
		return 0
def is_valid_ipv6(ip):
	pattern = re.compile(r, re.VERBOSE | re.IGNORECASE | re.DOTALL)
	return pattern.match(ip) is not None
def check_ip_valid6(ip):
	if is_valid_ipv6(ip):
	