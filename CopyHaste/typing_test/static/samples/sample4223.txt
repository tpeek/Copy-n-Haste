load_fips_ecdsa_signing_vectors, load_vectors_
)
HASHLIB_HASH_TYPES = {
	"SHA-1": hashlib.sha1,
	"SHA-224": hashlib.sha224,
	"SHA-256": hashlib.sha256,
	"SHA-384": hashlib.sha384,
	"SHA-512": hashlib.sha512,
}
class TruncatedHash(object):
	def __init__(self, hasher):
		self.hasher = hasher
	def __call__(self, data):
		self.hasher.update(data)
		return self
	def digest(self):
		return self.hasher.digest()[:256 // 8]
def build_vectors(fips_vectors):
	vectors = defaultdict(list)
	for vector in fips_vectors:
		vectors[vector['digest_algorithm']].append(vector['message'])
	for digest_algorithm, messages in vectors.items():
		if digest_algorithm not in HASHLIB_HASH_TYPES:
			continue
		yield ""
		yield "[K-256,{0}]".format(digest_algorithm)
		yie