def error(message):
	print('\x1B[31m', message, '\x1B[0m', sep='', file=sys.stderr)
	sys.exit(1)
def status(message):
	print('\x1B[32m', message, '\x1B[0m', sep='', file=sys.stderr)
def bam_to_fq(read_file, prefix_id='', verbose=False):
	if os.path.splitext(read_file)[1] != '.bam':
		raise ValueError('The read file is not in BAM format')
	ofile = os.path.join(tempfile.gettempdir(), prefix_id + 'bam_to_fq_out.fq')
	status('Converting the input
	with open(ofile, 'w') as ofile_handle, open(os.devnull, 'w') as null_handle:
		err_handle = sys.stderr if verbose else null_handle
		subprocess.check_call(['samtools', 'bam2fq', read_file], stdout=ofile_handle, stderr=err_handle)
	return ofile
def read_correction(read_file, cell_type='haploid', match_