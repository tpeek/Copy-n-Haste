sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
def _is_empty(d):
	return not bool(os.listdir(d))
def _mkdir(d):
	if not os.path.exists(d):
		os.mkdir(d)
class TestCache(unittest.TestCase):
	def setUp(self):
		TEST_DIR = os.path.dirname(os.path.abspath(__file__))
		TESTDATA_DIR = os.path.join(TEST_DIR, 'testdata')
		_mkdir(TESTDATA_DIR)
		self.test_dir = os.path.join(TESTDATA_DIR, 'cache_test')
		self.tearDown()
	def tearDown(self):
		if os.path.exists(self.test_dir):
			shutil.rmtree(self.test_dir)
	def test_cache(self):
		ydl = FakeYDL({
			'cachedir': self.test_dir,
		})
		c = Cache(ydl)
		obj = {'x': 1, 'y': ['Ã¤', '\\a', True]}
		self.assertEqual(c.load('test_cache', 'k.'), None)
		c.store('test_cache', 