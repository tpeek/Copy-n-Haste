getConnectedDivisions, getLeagueDivInfo, getFieldInfo, getTeamTimeConstraintInfo, getSwapTeamInfo
	 CodeLogicError, SchedulerConfigurationError
start_time_CONST = 'START_TIME'
gameday_id_CONST = 'GAMEDAY_ID'
bye_CONST = 'BYE'
home_CONST = 'HOME'
away_CONST = 'AWAY'
venue_count_CONST = 'VCNT'
home_index_CONST = 0
away_index_CONST = 1
game_team_CONST = 'GAME_TEAM'
venue_CONST = 'VENUE'
age_CONST = 'AGE'
gen_CONST = 'GEN'
firstslot_CONST = 0
verynegative_CONST = -1e6
verypositive_CONST = 1e6
balanceweight_CONST = 2
time_iteration_max_CONST = 18
field_iteration_max_CONST = 10
time_format_CONST = '%H:%M'
class BasicFieldTimeScheduleGenerator:
	def __init__(self, dbinterface):
		leaguediv_tuple = getLeagueDivInfo()
		self.leaguediv = leaguediv_tuple.dict_list
		self.leaguediv_indexerGet = leaguediv_tuple.indexerGet
		field_tuple = getFieldInfo()
		self.fieldinfo = field_tuple.dict_list
		self.fieldinfo_indexerGet = field_tuple.indexerGet
		self.connected_div_components = getConnectedDivisions()
		fstatus_tuple = getFieldSeasonStatus_list()
		self.fieldSeasonStatus = fstatus_tuple.dict_list
		self.fstatus_indexerGet = fstatus_tuple.indexerGet
		self.total_game_dict = {}
		for i in range(1