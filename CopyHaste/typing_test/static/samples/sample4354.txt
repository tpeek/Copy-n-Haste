class TestNetflix (TestCase) :
	def test_rmse_1(self):
		p = [1,2,3]
		e = [1,2,3]
		self.assertEqual(rmse(p,e), 0)
	def test_rmse_2(self):
		p = [1,2,3]
		e = [2,3,4]
		self.assertEqual(rmse(p,e), 1)
	def test_rmse_3(self):
		p = [0]
		e = [0]
		self.assertEqual(rmse(p,e), 0)
	def test_rmse_4(self):
		p = [5]
		e = [5]
		self.assertEqual(rmse(p,e), 0)
	def test_create_predicted_list_1(self):
		probe = StringIO("1:\n1\n2\n")
		output = StringIO()
		movies = {"1": 3}
		diffs = {"1": 1, "2": -1}
		cache = {
			"diffs": diffs,
			"movies": movies
		}
		ls = create_predicted_list("1", probe, output, cache)
		with self.subTest():
			self.assertEqual(ls, [4, 2])
			self.assertEqual(output.getvalue(), "1:\n4.0\n2.0\n")
			
	def test_create_predict