
class CylinderForceField(ForceField):
	def __init__(self, origin, direction, max_X, max_R, name='cylinder'):
		self.arguments = (origin, direction, max_X, max_R)
		ForceField.__init__(self, name)
		self.origin = origin
		self.direction = direction
		self.max_X = max_X
		self.max_R = max_R
		self.name = name
		if not ((self.direction[0] == 1.0) and
				(self.direction[1] == 0.0) and
				(self.direction[2] == 0.0)):
		  raise Exception("For efficiency, principal axis must be along (1,0,0)")
		self.volume = N.pi*(self.max_R*self.max_R)*self.max_X
	def ready(self, global_data):
		return True
	def evaluatorParameters(self, universe, subset1, subset2, global_data):
		return {self.name+' origin': self.center,
				self.name+' max X': self.max_X,
	