parser = optparse.OptionParser(
	'Usage: %prog [-m <message>] [-q] <name>|<url>')
parser.add_option('-m', '--message',
				  dest='message',
				  default=None,
				  help='commit message')
parser.add_option('-q', '--quiet',
				  dest='quiet',
				  default=False,
				  action='store_true',
				  help='operate quietly')
options, args = parser.parse_args()
if 1 != len(args):
	parser.print_usage()
	sys.exit(1)
url = urlparse.urlparse(args[0])
if url.scheme and url.netloc:
	match = re.match(r'^/([0-9A-Za-z_-]{64})/([^/ \t\r\n]+)$', url.path)
	if match is None:
		logging.error('invalid blueprint URL')
		sys.exit(1)
	server = urlparse.urlunparse((url.scheme, url.netloc, '', '', '', ''))
	secret, name = match.group(1, 2)
else:
	try:
		server, se