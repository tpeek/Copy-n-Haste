def Coeffs_to_VelAccel(a, s):
	da = [[j * quintic[j+1] for j in range(5)] for quintic in a]
	d2a = [[j * quartic[j+1] for j in range(4)] for quartic in da]
	v = [intrp.Coeffs_to_Vals(da, five_minute_interval, t) for five_minute_interval in s]
	A = [intrp.Coeffs_to_Vals(d2a, five_minute_interval, t) for five_minute_interval in s]
	return [v, A]
def comfort_and_Triptime(tht_i_phi_i):
	ax, ay, az, t = intrp.Points_to_Coeffs(tht_i_phi_i, 6)
	Q = 2**8
	L = int(math.floor(t[-1]/300))
	s = [[t[-1] * (i + j/Q)/L for j in range(Q)] for i in range(L)]
	vx, Ax = Coeffs_to_VelAccel(ax, s)
	vy, Ay = Coeffs_to_VelAccel(ay, s)
	vz, Az = Coeffs_to_VelAccel(az, s)
	v = [[[vx[i][j], vy[i][j], vz[i][j]] for j in range(len(vx[i]))] for i in range(len(vx))]
	a 