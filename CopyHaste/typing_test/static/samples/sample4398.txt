directionsLatLng = directions.get_directions("Dallas", "Austin")
startLatLng, endLatLng = util.get_firstlast(directionsLatLng)
proj.set_projection(startLatLng, endLatLng)
def curvature(location1, location2, elevations):
  x0 = location1 * config.pylonSpacing
  x1 = location2 * config.pylonSpacing
  theta0 = 0
  theta1 = 0
  y0 = inList[location1]
  y1 = inList[location2]
  kappa, kappaPrime, L = clothoid.buildClothoid(x0, y0, theta0, x1, y1, theta1)
  if kappa < 0:
	return kappaPrime
  else:
	return kappa + L * kappaPrime
def reversesort_elevationindices(elevations):
  elevationsIndices = range(len(elevations))
  sortedIndices = sorted(elevationsIndices, key = lambda i: elevations[i], reverse=True)
  return sortedIndices
def get_relevant_in