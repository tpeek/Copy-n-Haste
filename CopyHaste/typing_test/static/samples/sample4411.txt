class Velocity(abstract.AbstractPoint):
	def __init__(self, speed, distance_along_path, velocity_id):
		velocity_coords = {"speed": speed,
						   "distance_along_path":  distance_along_path}
		abstract.AbstractPoint.__init__(velocity_coords, velocity_id)
class VelocitiesSlice(abstract.AbstractSlice):
	def velocities_builder(self, velocities_slice_bounds, lowest_velocity_id):
		max_speed = velocities_slice_bounds["max_speed"]
		min_speed = velocities_slice_bounds["min_speed"]
		speed_step_size = velocities_slice_bounds["speed_step_size"]
		speed_difference = max_speed - min_speed
		speed_options = util.build_grid2(speed_difference,
										 speeds_step_size, minimum_speed)
		velocity_ids = [index + lowest_velocity_id for index
						in r