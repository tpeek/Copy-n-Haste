class BuildRestartAPIView(APIView):
	def post(self, build_id):
		build = Build.query.options(
			joinedload('project', innerjoin=True),
			joinedload('author'),
			joinedload('source').joinedload('revision'),
		).get(build_id)
		if build is None:
			return '', 404
		if build.status != Status.finished:
			return '', 400
		stat_ids = [build.id]
		job_ids = [
			j[0] for j in
			db.session.query(Job.id).filter(Job.build_id == build.id)
		]
		if job_ids:
			step_ids = [
				s[0] for s in
				db.session.query(JobStep.id).filter(JobStep.job_id.in_(job_ids))
			]
			stat_ids.extend(job_ids)
			stat_ids.extend(step_ids)
		if stat_ids:
			ItemStat.query.filter(
				ItemStat.item_id.in_(stat_ids),
			).delete(synchronize_session=False)
		Job.query.fi