SORT_CHOICES = (
	'duration',
	'name',
	'retries'
)
RESULT_CHOICES = [r.name for r in Result] + ['']
class BuildTestIndexAPIView(APIView):
	parser = reqparse.RequestParser()
	parser.add_argument('query', type=unicode, location='args')
	parser.add_argument('result', type=unicode, location='args',
						choices=RESULT_CHOICES)
	parser.add_argument('sort', type=unicode, location='args',
						choices=SORT_CHOICES, default='duration')
	def get(self, build_id):
		build = Build.query.get(build_id)
		if build is None:
			return '', 404
		args = self.parser.parse_args()
		test_list = TestCase.query.options(
			contains_eager('job')
		).join(
			Job, TestCase.job_id == Job.id,
		).filter(
			Job.build_id == build.id,
		)
		if args.query:
			test_lis