class ChangeIndexAPIView(APIView):
	def get(self):
		change_list = list(
			Change.query.options(
				joinedload(Change.project),
				joinedload(Change.author),
			).order_by(Change.date_modified.desc())
		)[:100]
		for change in change_list:
			try:
				change.last_job = Job.query.filter_by(
					change=change,
				).order_by(
					Job.date_created.desc(),
					Job.date_started.desc()
				)[0]
			except IndexError:
				change.last_job = None
		return self.paginate(change_list)
	@param('project', lambda x: Project.query.filter_by(slug=x)[0])
	@param('label')
	@param('key', required=False)
	@param('author', AuthorValidator(), required=False)
	@param('message', required=False)
	@param('date_created', required=False)
	@param('date_modified', r