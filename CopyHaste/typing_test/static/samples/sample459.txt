
OMNIFUNC_RETURNED_BAD_VALUE = 'Omnifunc returned bad value to YCM!'
OMNIFUNC_NOT_LIST = ( 'Omnifunc did not return a list or a dict with a "words" '
					 ' list when expected.' )
class OmniCompleter( Completer ):
  def __init__( self, user_options ):
	super( OmniCompleter, self ).__init__( user_options )
	self._omnifunc = None
  def SupportedFiletypes( self ):
	return []
  def ShouldUseCache( self ):
	return bool( self.user_options[ 'cache_omnifunc' ] )
  def ShouldUseNow( self, request_data ):
	if not self._omnifunc:
	  return False
	if self.ShouldUseCache():
	  return super( OmniCompleter, self ).ShouldUseNow( request_data )
	return self.ShouldUseNowInner( request_data )
  def ShouldUseNowInner( self, request_data ):
	if not self._omnif