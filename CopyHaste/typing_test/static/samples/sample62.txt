dirname = os.path.dirname
distutils_path = os.path.join(os.path.dirname(opcode.__file__), 'distutils')
if os.path.normpath(distutils_path) == os.path.dirname(os.path.normpath(__file__)):
	warnings.warn(
		"The virtualenv distutils package at %s appears to be in the same location as the system distutils?")
else:
	__path__.insert(0, distutils_path)
	real_distutils = imp.load_module("_virtualenv_distutils", None, distutils_path, ('', '', imp.PKG_DIRECTORY))
	try:
		__revision__ = real_distutils.__revision__
	except AttributeError:
		pass
	__version__ = real_distutils.__version__
try:
	basestring
except NameError:
	basestring = str
if sys.platform == 'win32':
	class build_ext(old_build_ext):
		def finalize_options (self):
			if self.library_dirs is None:
				self.library_dirs = []
			elif isinstance(self.library_dirs, basestring):
				self.library_dirs = self.library_dirs.split(os.pathsep)
			
			self.library_dirs.insert(0, os.path.join(sys.real_prefix, "Libs"))
			old_build_ext.finalize_options(self)
	build_ext_module.build_ext = build_ext
old_find_config_files = dist.Distribution.find_config_files
def find_config_files(self):
	found = old_find_config_files(self)
	system_distutils = o