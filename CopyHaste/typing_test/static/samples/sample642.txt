
wm = pyinotify.WatchManager()
mask = (pyinotify.IN_DELETE |
		pyinotify.IN_CREATE |
		pyinotify.IN_MOVED_FROM)
changed_dirs = dict()
change_lock = threading.Lock()
class EventHandler(pyinotify.ProcessEvent):
	def process_IN_CREATE(self, event):
		self.changed(event.pathname)
	def process_IN_DELETE(self, event):
		self.changed(event.pathname)
	def process_default(self, event):
		self.changed(event.pathname)
	def changed(self, pathname):
		change_lock.acquire()
		changed_dirs[os.path.dirname(pathname)] = time.time()
		change_lock.release()
handler = EventHandler()
notifier = pyinotify.ThreadedNotifier(wm, handler, read_freq=10)
notifier.start()
def join(path, filename):
	return os.path.join(path, filename if filename[0] != '/' else filename[