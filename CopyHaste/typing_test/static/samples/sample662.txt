
	AliasProperty,
	ListProperty,
	NumericProperty,
	ObjectProperty,
	StringProperty
)
class ELiDECodeInput(CodeInput):
	lexer = ObjectProperty(Python3Lexer())
sig_ex = re.compile('^ *def .+?\((.+)\):$')
class FunctionInput(BoxLayout):
	font_name = StringProperty('Roboto-Regular')
	font_size = NumericProperty(12)
	style_name = StringProperty('default')
	name = StringProperty()
	params = ListProperty()
	def _get_source(self):
		code = 'def ' + self.name + '(' + ', '.join(self.params) + '):\n'
		for line in self.ids.code.text.split('\n'):
			code += (' ' * 4 + line + '\n')
		return code.rstrip(' \n\t')
	def _set_source(self, v, *args):
		if 'code' not in self.ids:
			Clock.schedule_once(partial(self._set_source, v), 0)
			return
		lines = v.spl