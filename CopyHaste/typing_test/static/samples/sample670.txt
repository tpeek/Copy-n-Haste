
__doc__ =
print(__doc__)
	generate_data, one_sample_ttest, t_stat)
N, P = 15, 500
V1 = np.random.randn(N, P) ** 2
effects = 0.5 * (np.random.randn(P) > 0)
Y = generate_data(np.ones(N), effects, .25, V1)
T1 = one_sample_ttest(Y, V1, n_iter=5)
T1 = [T1[effects == x] for x  in np.unique(effects)]
T2 = [t_stat(Y)[effects == x] for x  in np.unique(effects)]
ROC1 = np.array([np.sum(T1[1] > - x) for x  in np.sort(- T1[0])])\
	* 1. / T1[1].size
ROC2 = np.array([np.sum(T2[1] > - x) for x  in np.sort(- T2[0])])\
	* 1. / T1[1].size
FIG = plt.figure(figsize=(10, 5))
AX = FIG.add_subplot(121)
AX.plot(np.linspace(0, 1, len(ROC1)), ROC1, label='mixed effects')
AX.plot(np.linspace(0, 1, len(ROC2)), ROC2, label='t test')
AX.set_xlabel('false positives')
AX