
class Mock(object):
	def __init__(self, **kwargs):
		self.__dict__.update(kwargs)
class BaseViewTestCase(unittest.TestCase):
	def setUp(self):
		self.config = testing.setUp()
		for route in urls:
			self.config.add_route(route.name, route.pattern)
	def tearDown(self):
		testing.tearDown()
	def create_request(self, path='/', is_xhr=False, matchdict=None, params=None, session=None):
		request = testing.DummyRequest(path=path)
		request.id = 'test_request_id'
		request.is_xhr = is_xhr
		request.matchdict = matchdict or {}
		request.params = MultiDict(csrf_token=request.session.get_csrf_token())
		if params:
			request.params.update(params)
		if session:
			request.session.update(session)
		return request
class BaseTestCase(unittest.TestCase):