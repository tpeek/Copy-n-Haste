
class IPAddressesViewTests(BaseViewTestCase):
	def test_landing_page_view(self):
		request = testing.DummyRequest()
		view = IPAddressesView(request)
		lpview = view.ipaddresses_landing()
		self.assertEqual(lpview.get('prefix'), '/ipaddresses')
		self.assertTrue('/ipaddresses/json' in lpview.get('json_items_endpoint'))
		self.assertEqual(lpview.get('initial_sort_key'), 'public_ip')
		filter_keys = lpview.get('filter_keys')
		self.assertTrue('public_ip' in filter_keys)
		self.assertTrue('instance_id' in filter_keys)
class IPAddressTests(BaseViewTestCase):
	request = testing.DummyRequest()
	view = IPAddressView(request)
	def test_is_base_view(self):
		self.assertTrue(isinstance(self.view, BaseView))
	def test_item_view(self):
		itemview = IP