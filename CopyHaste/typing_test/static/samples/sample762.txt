


class QR8bitByte:

	def __init__(self, data):
		self.mode = QRMode.MODE_8BIT_BYTE
		self.data = data

	def getLength(self):
		return len(self.data)

	def write(self, buffer):
		for i in range(len(self.data)):
			buffer.put(ord(self.data[i]), 8)
	def __repr__(self):
		return self.data

class QRCode:
	def __init__(self, typeNumber, errorCorrectLevel):
		self.typeNumber = typeNumber
		self.errorCorrectLevel = errorCorrectLevel
		self.modules = None
		self.moduleCount = 0
		self.dataCache = None
		self.dataList = []
	def addData(self, data):
		newData = QR8bitByte(data)
		self.dataList.append(newData)
		self.dataCache = None
	def isDark(self, row, col):
		if (row < 0 or self.moduleCount <= row or col < 0 or self.