
LOG = logging.getLogger(__name__)
class BaseFilter(object):
	def _filter_one(self, obj, filter_properties):
		return True
	def filter_all(self, filter_obj_list, filter_properties):
		for obj in filter_obj_list:
			if self._filter_one(obj, filter_properties):
				yield obj
	run_filter_once_per_request = False
	def run_filter_for_index(self, index):
		return not (self.run_filter_once_per_request and index > 0)
class BaseFilterHandler(base_handler.BaseHandler):
	def get_filtered_objects(self, filter_classes, objs,
							 filter_properties, index=0):
		list_objs = list(objs)
		LOG.debug("Starting with %d host(s)", len(list_objs))
		for filter_cls in filter_classes:
			cls_name = filter_cls.__name__
			filter_class = filter_cls()
			if filter_