__author__ = 'swebb'
mpl.rc('text', usetex=True)
try:
	dt = 1.e-8
	E0 = 1.e6
	B0 = 0.
	B = [B0 * np.array([0., 0., 0.])]
	E = [E0 * np.array([1., 0., 0.])]
	charge = consts.e
	mass = consts.electron_mass
	pusher = RbBorisVay(charge, mass, dt)
	energy = []
	distance = []
	v0 = [np.array([0., 0., 0.])]
	x0 = [np.zeros(3)]
	t = 0.
	x0 = pusher.halfmove(v0, x0, +1)
	t += 0.5*dt
	for idx in range(10000):
		v0 = pusher.accelerate(v0, E, B)
		x0 = pusher.move(v0, x0)
		energy.append(np.sqrt(np.dot(v0[0], v0[0])/consts.c**2 +
							  1.)*consts.m_e*consts.c**2 * 6.24e12)
		distance.append(np.sqrt(np.dot(x0[0], x0[0])))
		t += dt
	x0 = pusher.halfmove(v0, x0, -1)
	t -= dt
	idealEnergy = [0.] * len(energy)
	errorEnergy = [0.] * len(energy)
	for idx 