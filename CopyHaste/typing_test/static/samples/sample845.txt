
start_time = time.time()
sent_word_net = load_sent_word_net()
phase = "04"
poscache_filename = "poscache.json"
try:
	poscache = json.load(open(poscache_filename, "r"))
except IOError:
	poscache = {}
class LinguisticVectorizer(BaseEstimator):
	def get_feature_names(self):
		return np.array(['sent_neut', 'sent_pos', 'sent_neg',
						 'nouns', 'adjectives', 'verbs', 'adverbs',
						 'allcaps', 'exclamation', 'question'])
	def fit(self, documents, y=None):
		return self
	def _get_sentiments(self, d):
		sent = tuple(nltk.word_tokenize(d))
		if poscache is not None:
			if d in poscache:
				tagged = poscache[d]
			else:
				poscache[d] = tagged = nltk.pos_tag(sent)
		else:
			tagged = nltk.pos_tag(sent)
		pos_vals = []
		neg_vals = []
		nouns 