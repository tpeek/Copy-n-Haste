
def _create_mesh_terms_query(mesh_terms):
  return ' AND '.join(['%s[MeSH Terms]' % term for term in mesh_terms])
def _create_mesh_terms_by_author(mesh_terms, author):
  return ' AND '.join(['%s[MeSH Terms]' % term for term in mesh_terms]) + ' AND (%s[au])' % author
def _most_common_institute(refs):
  counter = collections.Counter()
  for ref in refs:
	for address, organizations in ref['institutions'].values():
	  counter.update(organizations)
  return counter.most_common(5)
class AuthorsSample:
  def __init__(self):
	self.pmclient = pubmed.Client()
	self.wosclient = wos.Client()
  def close(self):
	self.wosclient.close()
  def _first_author(self, ref):
	authors = ref.get('authors')
	if not authors:
	  return None
	else:
	  return authors[