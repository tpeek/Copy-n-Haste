
def _read_graph(input_file_path):
  return igraph.Graph.Read(input_file_path, format='picklez')
def _write_graph(g, output_file_path):
  with open(output_file_path, 'wb') as output_file:
	g.write(output_file, format='picklez')
def _article_score(articlev):
  return len(filter(lambda v: v['type'] == 'article', articlev.neighbors(mode = igraph.IN)))
def _score_articles_by_propagation(g):
  rootv = g.vs.find(type='drug')
  for (v, depth, parentv) in g.bfsiter(rootv.index, advanced = True):
	if not v['type'] == 'article': continue
	parent_score = parentv['score'] if parentv['type'] == 'article' else 0
	v['score'] = parent_score + _article_score(v)
 
def _score_articles_individually(g):
  for v in g.vs(type='article'):
	v['score'] = _article_sc