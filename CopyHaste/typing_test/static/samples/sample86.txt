
class MathExtension(markdown.extensions.Extension):
	def __init__(self, *args, **kwargs):
		self.config = {
			'enable_dollar_delimiter': [True, 'Enable single-dollar delimiter'],
		}
		super(MathExtension, self).__init__(*args, **kwargs)
	def extendMarkdown(self, md, md_globals):
		def handle_match_inline(m):
			node = markdown.util.etree.Element('script')
			node.set('type', 'math/tex')
			node.text = markdown.util.AtomicString(m.group(3))
			return node
		def handle_match(m):
			node = markdown.util.etree.Element('script')
			node.set('type', 'math/tex; mode=display')
			if '\\begin' in m.group(2):
				node.text = markdown.util.AtomicString(m.group(2) + m.group(4) + m.group(5))
			else:
				node.text = markdown.util.AtomicString(m.group