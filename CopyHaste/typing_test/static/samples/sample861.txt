
	Resource, PriorityResource, PreemptiveResource)
def compile_toc(entries, section_marker='='):
	toc = ''
	for section, objs in entries:
		toc += '\n\n%s\n%s\n\n' % (section, section_marker * len(section))
		toc += '.. autosummary::\n\n'
		for obj in objs:
			toc += '	~%s.%s\n' % (obj.__module__, obj.__name__)
	return toc
toc = (
	('Environments', (
		Environment, RealtimeEnvironment,
	)),
	('Events', (
		Event, Timeout, Process, AllOf, AnyOf, Interrupt,
	)),
	('Resources', (
		Resource, PriorityResource, PreemptiveResource, Container, Store,
		FilterStore,
	)),
	('Miscellaneous', (
	)),
)
__doc__ = __doc__.format(toc=compile_toc(toc))
__all__ = [obj.__name__ for section, objs in toc for obj in objs]
__path__.append(renpy.loader.transfn("li