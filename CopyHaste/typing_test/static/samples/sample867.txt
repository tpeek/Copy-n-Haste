
class Preempted(object):
	def __init__(self, by, usage_since):
		self.by = by
		self.usage_since = usage_since
class Request(base.Put):
	def __exit__(self, exc_type, value, traceback):
		super(Request, self).__exit__(exc_type, value, traceback)
		self.resource.release(self)
class Release(base.Get):
	def __init__(self, resource, request):
		self.request = request
		super(Release, self).__init__(resource)
class PriorityRequest(Request):
	def __init__(self, resource, priority=0, preempt=True):
		self.priority = priority
		self.preempt = preempt
		self.time = resource._env.now
		self.key = (self.priority, self.time, not self.preempt)
		super(PriorityRequest, self).__init__(resource)
class SortedQueue(list):
	def __init__(self, maxlen=None):
		