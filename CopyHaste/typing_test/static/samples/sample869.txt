
try:
except ImportError:
class RealtimeEnvironment(Environment):
	def __init__(self, initial_time=0, factor=1.0, strict=True):
		Environment.__init__(self, initial_time)
		self.env_start = initial_time
		self.real_start = time()
		self._factor = factor
		self._strict = strict
	@property
	def factor(self):
		return self._factor
	@property
	def strict(self):
		return self._strict
	def sync(self):
		self.real_start = time()
	def step(self):
		evt_time = self.peek()
		if evt_time is Infinity:
			raise EmptySchedule()
		real_time = self.real_start + (evt_time - self.env_start) * self.factor
		if self.strict and time() - real_time > self.factor:
			raise RuntimeError('Simulation too slow for real time (%.3fs).' % (
				time() - real_time))
		whi