conn = sqlite3.connect('../blm.sqlite')
c = conn.cursor()
ignored = set()
for i in open('ignored.txt').readlines():
	ignored.add(i.strip())
dbitems = set()
c.execute("SELECT imageid, state FROM Original_Surveys")
for i in c.fetchall():
	imageid = str(i[0])
	if str(i[1]) == STATE and imageid not in ignored:
		dbitems.add(imageid)
s_ds = ogr.Open('cutline-map.shp')
s_layer = s_ds.GetLayerByIndex(0)
srs = s_layer.GetSpatialRef().Clone()
srs.AutoIdentifyEPSG()
layer_ids = set()
for cutline_feature in s_layer:
	tile_id = cutline_feature.GetField('imagefn')
	if tile_id:
		layer_ids.add(tile_id)
diff = sorted(layer_ids - dbitems)
for x in diff:
	print(x)
driver = ogr.GetDriverByName("ESRI Shapefile")
out_fn = "summary-maps/incorrect.shp"
driver.DeleteDataSource(out_fn)
ds = driver.CreateDataSource(out_fn)
layer = ds.CreateLayer("tiles", srs, ogr.wkbPolygon)
field_name = ogr.FieldDefn("incorrect", ogr.OFTInteger)
layer.CreateField(field_name)
field_name = ogr.FieldDefn("imagefn", ogr.OFTString)
field_name.SetWidth(20)
layer.CreateField(field_name)
field_name = ogr.FieldDefn("matches", ogr.OFTString)
field_name.SetWidth(254)
layer.CreateField(field_name)
field_name = ogr.FieldDefn("nmatch",