
						unicode_literals, with_statement)
class CppToolchainTest(unittest.TestCase):
  @contextmanager
  def tool(self, name):
	with temporary_dir() as tool_root:
	  tool_path = os.path.join(tool_root, name)
	  touch(tool_path)
	  chmod_plus_x(tool_path)
	  new_path = os.pathsep.join([tool_root] + os.environ.get('PATH', '').split(os.pathsep))
	  with environment_as(PATH=new_path):
		yield tool_path
  def test_default_compiler_
	with self.tool('g++') as tool_path:
	  with environment_as(CXX='g++'):
		self.assertEqual(CppToolchain().compiler, tool_path)
		self.assertEqual(CppToolchain().compiler,
						 CppToolchain().register_tool(name='compiler', tool=tool_path))
  def test_invalid_compiler(self):
	cpp_toolchain = CppToolchain(compiler='not-