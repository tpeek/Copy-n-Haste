
						unicode_literals, with_statement)
class TemplateData(dict):
  def __init__(self, **kwargs):
	dict.__init__(self, MustacheRenderer.expand(kwargs))
  def extend(self, **kwargs):
	props = self.copy()
	props.update(kwargs)
	return TemplateData(**props)
  def __setattr__(self, key, value):
	raise AttributeError("Mutation not allowed - use {}.extend({} = {})".format(self, key, value))
  def __getattr__(self, key):
	if key in self:
	  return self[key]
	else:
	  return object.__getattribute__(self, key)
  def __str__(self):
	return 'TemplateData({})'.format(pprint.pformat(self))
class Generator(object):
  def __init__(self, template_text, **template_data):
	self._template = MustacheRenderer.parse_template(template_text)
	self.template_data =