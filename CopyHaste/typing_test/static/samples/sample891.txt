
						unicode_literals, with_statement)
class JaxbGenJavaTest(TaskTestBase):
  @classmethod
  def task_type(cls):
	return JaxbGen
  @property
  def alias_groups(self):
	return register_core().merge(register_codegen())
  def assert_files(self, package, contents, *expected_files):
	with temporary_file() as fp:
	  fp.write(contents)
	  fp.close()
	  self.assertEqual(set(expected_files), set(JaxbGen._sources_to_be_generated(package, fp.name)))
  def create_schema(self, *component_names):
	return ('<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">\n'
		 + '\n'.join(self.create_complex_type(c) for c in component_names)
		 + '\n</xsd:schema>')
  def create_complex_type(self, name):
	return (.format(name=name)
	)
  def test_plain(self):
	s