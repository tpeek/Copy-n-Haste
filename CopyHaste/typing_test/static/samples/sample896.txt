
						unicode_literals, with_statement)
class ShaderTest(unittest.TestCase):
  def setUp(self):
	self.jarjar = '/not/really/jarjar.jar'
	with subsystem_instance(DistributionLocator):
	  executor = SubprocessExecutor(DistributionLocator.cached())
	  self.shader = Shader(jarjar_classpath=[self.jarjar], executor=executor)
	self.output_jar = '/not/really/shaded.jar'
  def populate_input_jar(self, *entries):
	fd, input_jar_path = tempfile.mkstemp()
	os.close(fd)
	self.addCleanup(safe_delete, input_jar_path)
	with open_zip(input_jar_path, 'w') as jar:
	  for entry in entries:
		jar.writestr(entry, '0xCAFEBABE')
	return input_jar_path
  def test_assemble_default_rules(self):
	input_jar = self.populate_input_jar('org/pantsbuild/tools/fake/Main.cla