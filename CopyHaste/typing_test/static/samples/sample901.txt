
						unicode_literals, with_statement)
class ListOwnersTest(ConsoleTaskTestBase):
  @classmethod
  def task_type(cls):
	return ListOwners
  @property
  def alias_groups(self):
	return BuildFileAliases.create(targets={'python_library': PythonLibrary})
  def setUp(self):
	super(ListOwnersTest, self).setUp()
	def add_to_build_file(path, name, *sources):
	  all_sources = ["'{}'".format(source) for source in list(sources)]
	  self.add_to_build_file(path, dedent(.format(name=name, all_sources=','.join(all_sources))))
	add_to_build_file('a', 'b', 'b.txt')
	add_to_build_file('a/c', 'd', 'd.txt')
	add_to_build_file('a/c', 'd2', 'd.txt')
	add_to_build_file('a/c', 'e', 'e.txt', 'f.txt', 'g.txt')
	add_to_build_file('a', 'c', 'c/c.txt')
	add_to_build_