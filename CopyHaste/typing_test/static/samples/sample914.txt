
MAKELOG = True
LOGPATH = os.path.join(os.environ["HOME"], "JAMTank_load.log")
if os.path.exists(LOGPATH):
	os.remove(LOGPATH)
def WRITE_LOG(_dict):
	archivo = open(LOGPATH, "w")
	archivo.write(json.dumps(
		_dict, indent=4, separators=(", ", ":"), sort_keys=True))
	archivo.close()
def APPEND_LOG(_dict):
	new = {}
	if os.path.exists(LOGPATH):
		archivo = codecs.open(LOGPATH, "r", "utf-8")
		new = json.JSONDecoder("utf-8").decode(archivo.read())
		archivo.close()
	for key in _dict.keys():
		new[key] = _dict[key]
	WRITE_LOG(new)
class Client(GObject.Object):
	def __init__(self, ip):
		GObject.Object.__init__(self)
		self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		self.dir = (ip, 5000)
	def conectarse(self):
		try:
			self.so