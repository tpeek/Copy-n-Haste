
nneuron = 61
min_angle = -90
max_angle = 90
sprefs = np.linspace(min_angle, max_angle, nneuron)
ndata = 3000
r_max = 10
sigtc_sq = float(10**2)
sigtc = 10
c_50 = 13.1
def random_s(ndata, sort):
	s = np.random.rand(2, ndata) * 120 - 60
	if sort:
		s = np.sort(s, axis=0)
	return s[0], s[1]
def generate_trainset(ndata, r_max=10):
	s_0, s_1 = random_s(ndata, True)
	c_0, c_1 = np.ones((2, ndata)) * .5
	r, s, c = generate_popcode_data(ndata, nneuron, sigtc_sq, c_50, r_max, "poisson", True, s_0, s_1, c_0, c_1)
	return r, s, c
def generate_s1set(ndata):
	s_0, s_1 = random_s(ndata, True)
	c_0 = np.ones(ndata)
	c_1 = np.zeros(ndata)
	r, s, c = generate_popcode_data(ndata, nneuron, sigtc_sq, c_50, r_max, "poisson", True, s_0, s_1, c_0, c_1)
	return r