
	gallery_node, pngmath, project_code, project_desc, project_docs,
	project_download, project_homepage, project_license, project_node,
	speakerdeck,
)
class Gallery(Directive):
	required_arguments = 0
	optional_arguments = 3
	final_argument_whitespace = True
	option_spec = {
		'small': directives.nonnegative_int,
		'medium': directives.nonnegative_int,
		'large': directives.nonnegative_int,
	}
	has_content = True
	def run(self):
		gallery = gallery_node(self.content)
		self.state.nested_parse(self.content, self.content_offset, gallery)
		images = gallery.children
		gallery.clear()
		gallery.images = []
		classes = ['col']
		max_widths = {
			's': 500.594,
			'm': 768.688,
			'l': 1007.906,
		}
		counts = {}
		counts['s'] = self.options.get(