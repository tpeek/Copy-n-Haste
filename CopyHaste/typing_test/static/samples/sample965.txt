
try:
except ImportError:
try:
except ImportError:
responses
try:
except ImportError:
try:
except ImportError:
	class SSLError(Exception):
		pass
_CRLF_RE = re.compile(r'\r?\n')
class _NormalizedHeaderCache(dict):
	def __init__(self, size):
		super(_NormalizedHeaderCache, self).__init__()
		self.size = size
		self.queue = collections.deque()
	def __missing__(self, key):
		normalized = "-".join([w.capitalize() for w in key.split("-")])
		self[key] = normalized
		self.queue.append(key)
		if len(self.queue) > self.size:
			old_key = self.queue.popleft()
			del self[old_key]
		return normalized
_normalized_headers = _NormalizedHeaderCache(1000)
class HTTPHeaders(dict):
	def __init__(self, *args, **kwargs):
		dict.__init__(self)
		self._as_list 