
try:
except ImportError as e:
	try:
	except ImportError:
		raise e
class BaseAsyncIOLoop(IOLoop):
	def initialize(self, asyncio_loop, close_loop=False):
		self.asyncio_loop = asyncio_loop
		self.close_loop = close_loop
		self.asyncio_loop.call_soon(self.make_current)
		self.handlers = {}
		self.readers = set()
		self.writers = set()
		self.closing = False
	def close(self, all_fds=False):
		self.closing = True
		for fd in list(self.handlers):
			fileobj, handler_func = self.handlers[fd]
			self.remove_handler(fd)
			if all_fds:
				self.close_fd(fileobj)
		if self.close_loop:
			self.asyncio_loop.close()
	def add_handler(self, fd, handler, events):
		fd, fileobj = self.split_fd(fd)
		if fd in self.handlers:
			raise ValueError("fd %s added 