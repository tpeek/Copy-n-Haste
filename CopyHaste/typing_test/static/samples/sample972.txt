
assert hasattr(select, 'kqueue'), 'kqueue not supported'
class _KQueue(object):
	def __init__(self):
		self._kqueue = select.kqueue()
		self._active = {}
	def fileno(self):
		return self._kqueue.fileno()
	def close(self):
		self._kqueue.close()
	def register(self, fd, events):
		if fd in self._active:
			raise IOError("fd %s already registered" % fd)
		self._control(fd, events, select.KQ_EV_ADD)
		self._active[fd] = events
	def modify(self, fd, events):
		self.unregister(fd)
		self.register(fd, events)
	def unregister(self, fd):
		events = self._active.pop(fd)
		self._control(fd, events, select.KQ_EV_DELETE)
	def _control(self, fd, events, flags):
		kevents = []
		if events & IOLoop.WRITE:
			kevents.append(select.kevent(
				fd, filter=se